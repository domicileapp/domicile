var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/modules/AppModule.html",[0,1.606,1,2.938]],["body/modules/AppModule.html",[0,1.793,1,5.747,2,2.207,3,2.207,4,2.673,5,2.673,6,4.485,7,0.013,8,4.485,9,4.485,10,4.204,11,4.485,12,4.485,13,3.565,14,2.553,15,1.726,16,1.562,17,0.099,18,0.088,19,0.077,20,3.068,21,2.696,22,0.712,23,3.068,24,4.539,25,5.971,26,0.559,27,3.068,28,0.972,29,0.817,30,0.394,31,0.712,32,3.068,33,1.053,34,3.068,35,1.053,36,6.373,37,3.068,38,2.023,39,0.3,40,4.539,41,0.664,42,2.673,43,2.218,44,3.068,45,1.933,46,0.794,47,1.124,48,3.068,49,3.954,50,3.068,51,2.218,52,2.673,53,3.954,54,1.083,55,3.068,56,3.068,57,3.068,58,3.068,59,3.068,60,3.068,61,1.212,62,3.068,63,3.068,64,1.212,65,1.822,66,0.088,67,0.164,68,3.068,69,1.726,70,1.427,71,3.068,72,1.044,73,3.068,74,3.068,75,2.673,76,3.068,77,3.068,78,3.068,79,3.068,80,3.068,81,2.412,82,3.068,83,3.068,84,3.068,85,2.412,86,3.068,87,2.673,88,3.068,89,3.068,90,3.068,91,3.068,92,3.068,93,3.068,94,0.007,95,0.007]],["title/controllers/AuthController.html",[96,1.67,97,2.938]],["body/controllers/AuthController.html",[7,0.014,17,0.081,18,0.072,19,0.063,22,0.907,26,0.59,28,1.518,29,1.275,30,0.898,31,1.111,33,1.111,35,1.588,39,0.283,41,0.545,64,0.996,66,0.072,67,0.135,69,1.417,72,2.105,75,2.195,81,1.981,85,3.074,94,0.006,95,0.006,96,1.035,97,2.826,98,2.195,99,1.497,100,0.213,101,3.406,102,3.406,103,3.406,104,2.52,105,1.367,106,2.52,107,2.52,108,1.778,109,3.406,110,3.903,111,2.52,112,3.91,113,2.329,114,2.52,115,3.903,116,2.52,117,3.91,118,2.04,119,4.245,120,3.903,121,2.52,122,3.91,123,2.52,124,3.903,125,2.52,126,3.91,127,3.903,128,2.52,129,3.91,130,1.417,131,1.078,132,1.694,133,3.91,134,3.91,135,4.174,136,1.822,137,0.827,138,1.417,139,1.822,140,2.846,141,1.981,142,2.826,143,3.91,144,3.91,145,3.91,146,3.91,147,2.52,148,2.52,149,3.91,150,1.822,151,2.52,152,1.694,153,2.52,154,2.52,155,2.52,156,2.52,157,1.755,158,2.52,159,2.417,160,3.903,161,2.52,162,2.749,163,3.91,164,2.52,165,5.399,166,3.406,167,3.91,168,4.863,169,4.791,170,2.52,171,4.791,172,3.91,173,1.275,174,2.52,175,2.52,176,2.52,177,2.52,178,3.406,179,2.52,180,2.52,181,2.52,182,2.52,183,2.52,184,2.52]],["title/modules/AuthModule.html",[0,1.606,6,2.732]],["body/modules/AuthModule.html",[0,2.086,2,1.84,3,2.566,6,5.288,7,0.014,13,3.828,14,2.969,15,2.129,16,1.927,17,0.122,18,0.109,19,0.095,21,3.611,35,0.878,39,0.309,41,0.819,42,4.599,43,2.736,45,2.385,46,0.662,47,1.386,51,2.736,64,2.086,65,3.136,66,0.109,67,0.203,94,0.008,95,0.008,97,4.394,140,4.255,141,2.976,162,1.927,185,3.297,186,3.785,187,3.297,188,4.816,189,4.816,190,3.785,191,5.729,192,3.785,193,2.976,194,5.279,195,2.385,196,3.785,197,3.297,198,2.976,199,3.785,200,3.785,201,3.785,202,3.785,203,3.785,204,3.297,205,3.297,206,2.976,207,3.297,208,3.785,209,3.785]],["title/injectables/AuthService.html",[140,2.414,210,1.082]],["body/injectables/AuthService.html",[7,0.014,17,0.058,18,0.051,19,0.045,22,0.687,26,0.749,28,1.859,29,1.562,30,0.753,31,1.361,33,1.3,35,1.707,39,0.242,41,0.386,46,0.518,47,0.653,54,0.629,66,0.051,67,0.096,70,1.766,72,2.323,94,0.005,95,0.005,100,0.151,102,1.554,103,2.58,108,1.956,113,2.725,118,1.862,119,5.366,140,1.759,159,2.369,162,0.908,168,3.476,173,1.671,193,1.402,197,1.554,198,1.402,206,3.856,210,0.788,211,0.867,212,1.554,213,0.881,214,2.263,215,4.421,216,2.961,217,2.961,218,2.961,219,2.961,220,2.961,221,2.961,222,1.217,223,1.783,224,2.693,225,5.606,226,3.797,227,2.149,228,2.961,229,2.961,230,1.607,231,1.783,232,2.961,233,5.304,234,4.421,235,2.012,236,1.783,237,2.961,238,1.783,239,2.961,240,1.783,241,2.961,242,2.975,243,1.783,244,2.098,245,2.961,246,1.783,247,1.783,248,2.961,249,3.797,250,1.783,251,0.908,252,1.003,253,2.961,254,0.867,255,1.783,256,2.14,257,2.961,258,1.783,259,1.059,260,1.554,261,1.783,262,1.554,263,0.629,264,0.908,265,1.783,266,1.783,267,1.783,268,0.953,269,1.783,270,1.554,271,1.059,272,0.763,273,1.783,274,1.554,275,1.783,276,1.783,277,3.308,278,2.985,279,1.783,280,2.58,281,2.961,282,1.783,283,1.665,284,2.58,285,2.961,286,1.783,287,2.961,288,1.402,289,1.783,290,1.783,291,1.402,292,1.783,293,1.783,294,1.783,295,1.783,296,1.783,297,0.908,298,1.783,299,1.783,300,2.961,301,3.143,302,5.291,303,3.797,304,1.783,305,0.816,306,0.908,307,1.783,308,1.554,309,1.783,310,0.908,311,1.508,312,1.783,313,1.783,314,1.783,315,1.783,316,1.783,317,1.402,318,1.783]],["title/entities/BaseEntity.html",[272,1.738,319,2.286]],["body/entities/BaseEntity.html",[7,0.013,17,0.143,18,0.127,19,0.111,26,0.811,30,0.845,39,0.176,46,0.773,54,1.561,61,1.748,66,0.127,67,0.237,94,0.009,95,0.009,100,0.374,105,1.879,118,2.233,213,1.361,235,2.232,251,2.988,252,3.301,271,4.168,272,2.51,288,6.189,305,1.815,319,3.301,320,2.488,321,6.112,322,3.853,323,6.588,324,6.588,325,4.423,326,6.588,327,4.423,328,4.423,329,4.423,330,5.87,331,4.423]],["title/classes/Chore.html",[67,0.218,332,2.938]],["body/classes/Chore.html",[7,0.012,17,0.2,18,0.178,19,0.156,66,0.178,67,0.332,94,0.012,95,0.012,332,5.239,333,1.342,334,5.402]],["title/controllers/ChoresController.html",[96,1.67,335,2.938]],["body/controllers/ChoresController.html",[7,0.013,17,0.113,18,0.1,19,0.088,22,1.155,26,0.825,28,2.008,29,1.687,30,0.813,31,1.47,33,1.555,39,0.252,41,0.754,64,1.376,66,0.1,67,0.187,69,1.959,70,1.62,94,0.008,95,0.008,96,1.431,99,2.069,100,0.295,105,1.913,130,2.8,131,2.485,173,1.785,230,1.674,263,1.757,305,1.922,335,3.599,336,3.035,337,2.739,338,1.893,339,2.41,340,1.967,341,2.42,342,3.035,343,4.394,344,3.484,345,3.484,346,2.195,347,3.599,348,3.484,349,1.431,350,3.599,351,3.484,352,1.431,353,4.935,354,4.337,355,3.484,356,3.035,357,2.342,358,2.069,359,3.66,360,3.035,361,1.62,362,3.914,363,1.376,364,3.484,365,3.484,366,3.484,367,3.484,368,2.518,369,3.484,370,2.518,371,3.484,372,2.518,373,3.484]],["title/modules/ChoresModule.html",[0,1.606,8,2.732]],["body/modules/ChoresModule.html",[0,2.572,2,2.525,3,3.165,7,0.013,8,5.266,14,3.662,15,2.921,16,2.644,17,0.168,18,0.149,19,0.131,39,0.282,41,1.124,64,2.572,65,3.867,66,0.149,67,0.278,94,0.01,95,0.01,335,5.14,359,4.936,360,4.525,374,4.525,375,4.525,376,5.194,377,5.194]],["title/injectables/ChoresService.html",[210,1.082,359,2.561]],["body/injectables/ChoresService.html",[7,0.013,17,0.12,18,0.106,19,0.093,22,1.205,26,0.844,28,2.063,29,1.733,30,0.836,31,1.51,33,1.694,39,0.238,41,0.801,66,0.106,67,0.198,94,0.008,95,0.008,100,0.313,118,1.132,173,1.826,210,1.383,211,1.799,230,1.537,235,2.881,263,1.834,305,1.96,332,4.707,337,2.909,338,1.975,339,2.476,340,2.053,341,2.526,342,4.526,343,4.322,346,3.274,349,2.135,352,2.135,353,4.91,359,3.274,361,1.721,362,4.085,363,1.462,378,3.223,379,3.7,380,3.7,381,3.7,382,3.7,383,3.7,384,6.859,385,3.7,386,3.223,387,3.7]],["title/classes/CreateChoreDto.html",[67,0.218,343,2.561]],["body/classes/CreateChoreDto.html",[7,0.012,17,0.199,18,0.177,19,0.155,66,0.177,67,0.331,94,0.012,95,0.012,333,1.336,343,4.554,388,5.376,389,4.853]],["title/classes/CreateListDto.html",[67,0.218,390,2.286]],["body/classes/CreateListDto.html",[7,0.013,17,0.158,18,0.141,19,0.123,26,0.773,30,0.806,31,1.456,39,0.249,66,0.141,67,0.336,70,3.59,94,0.01,95,0.01,100,0.415,105,1.791,137,1.61,157,2.536,213,1.456,230,1.636,333,1.061,390,3.53,391,6.031,392,3.855,393,3.525,394,4.271,395,4.903,396,3.544,397,4.903,398,2.961,399,5.468,400,4.654,401,3.089]],["title/classes/CreateRoomDto.html",[67,0.218,402,2.561]],["body/classes/CreateRoomDto.html",[7,0.013,17,0.173,18,0.153,19,0.134,26,0.658,29,1.917,30,0.686,39,0.263,66,0.153,67,0.355,70,3.35,94,0.011,95,0.011,100,0.452,105,1.524,137,1.754,213,1.537,230,1.485,333,1.156,396,3.862,398,2.834,400,4.454,401,3.366,402,4.175,403,5.772,404,4.2,405,5.342]],["title/classes/CreateTaskDto.html",[67,0.218,406,2.286]],["body/classes/CreateTaskDto.html",[7,0.013,17,0.158,18,0.141,19,0.123,26,0.773,30,0.806,31,1.456,39,0.249,66,0.141,67,0.336,70,3.59,94,0.01,95,0.01,100,0.415,105,1.791,137,1.61,157,2.536,213,1.456,230,1.636,333,1.061,393,3.525,394,4.271,396,3.544,398,2.961,399,5.468,400,4.654,401,3.089,406,3.53,407,6.031,408,3.855,409,4.903,410,4.903]],["title/classes/DatabaseSeeder.html",[67,0.218,411,3.195]],["body/classes/DatabaseSeeder.html",[7,0.014,17,0.13,18,0.116,19,0.101,22,1.279,26,0.496,28,1.277,29,1.073,30,0.517,31,0.935,33,0.935,35,1.457,38,2.457,39,0.297,46,0.964,66,0.116,67,0.216,72,1.371,87,3.51,94,0.009,95,0.009,100,0.341,108,1.11,118,2.066,159,1.422,256,3.984,277,5.473,280,4.802,317,3.168,333,0.872,411,4.334,412,3.51,413,1.074,414,5.473,415,4.802,416,5.512,417,6.755,418,4.029,419,3.51,420,2.709,421,3.168,422,2.913,423,4.029,424,2.913,425,4.029,426,2.913,427,4.029,428,4.029,429,4.029,430,4.029,431,4.029,432,5.512,433,5.512,434,6.283,435,4.029,436,4.029,437,4.029,438,3.51,439,4.029]],["title/interfaces/FindAllArgs.html",[440,1.606,441,1.811]],["body/interfaces/FindAllArgs.html",[7,0.014,17,0.11,18,0.098,19,0.086,30,0.629,31,1.456,35,1.456,39,0.275,41,0.738,46,0.858,47,1.249,54,1.204,61,1.348,66,0.098,67,0.183,72,2.136,94,0.008,95,0.008,100,0.288,118,1.043,131,2.097,159,2.026,173,1.843,210,1.306,213,1.138,214,1.459,222,1.401,227,2.384,230,1.287,235,2.713,254,1.658,268,2.62,297,1.737,305,1.833,306,1.737,310,1.737,311,1.737,339,1.297,340,1.348,349,1.401,352,1.401,361,1.587,363,1.348,390,2.758,413,0.664,440,1.937,441,2.559,442,2.026,443,2.466,444,3.956,445,3.355,446,2.026,447,3.297,448,2.913,449,3.221,450,2.466,451,2.186,452,1.918,453,2.682,454,2.682,455,2.026,456,3.856,457,2.682,458,2.923,459,2.026,460,2.682,461,2.682,462,2.682,463,2.026,464,3.856,465,2.682,466,2.682,467,2.682,468,2.682]],["title/interfaces/FindAllArgs-1.html",[440,1.341,441,1.513,469,2.958]],["body/interfaces/FindAllArgs-1.html",[7,0.014,17,0.11,18,0.098,19,0.086,30,0.629,31,1.456,35,1.456,39,0.275,41,0.738,46,0.858,47,1.249,54,1.204,61,1.348,66,0.098,67,0.183,72,2.136,94,0.008,95,0.008,100,0.288,118,1.043,131,2.097,159,2.026,173,1.843,210,1.306,213,1.138,214,1.459,222,1.401,227,2.384,230,1.287,235,2.713,254,1.658,268,2.62,297,1.737,305,1.833,306,1.737,310,1.737,311,1.737,339,1.297,340,1.348,349,1.401,352,1.401,361,1.587,363,1.348,406,2.758,413,0.664,440,1.937,441,2.559,442,2.026,444,3.956,445,3.355,446,2.026,451,2.186,455,2.026,458,2.923,459,2.026,463,2.026,470,2.466,471,3.297,472,2.913,473,3.366,474,2.293,475,1.918,476,2.682,477,2.682,478,3.856,479,2.682,480,2.682,481,2.682,482,2.682,483,3.856,484,2.682,485,2.682,486,2.682,487,2.682]],["title/interfaces/FindAllArgs-2.html",[440,1.341,441,1.513,488,2.454]],["body/interfaces/FindAllArgs-2.html",[7,0.014,17,0.112,18,0.1,19,0.087,30,0.445,31,1.15,35,1.344,39,0.266,41,0.75,46,0.867,47,1.269,54,1.223,61,1.369,66,0.1,67,0.186,72,2.152,94,0.008,95,0.008,100,0.293,108,1.844,118,1.06,131,1.482,157,1.269,159,1.75,173,1.908,210,1.32,213,1.15,214,1.482,222,1.424,224,1.764,227,2.411,230,1.417,235,2.404,244,2.704,254,1.685,301,2.058,305,2.02,339,2.202,340,1.369,349,1.424,352,1.424,363,1.369,413,0.675,440,1.959,441,2.582,442,2.058,445,3.379,451,2.211,489,2.505,490,3.9,491,2.725,492,2.946,493,2.505,494,2.183,495,4.972,496,2.725,497,2.725,498,2.725,499,2.058,500,2.725,501,2.725,502,2.725,503,4.554,504,2.725,505,2.725,506,1.685,507,2.725,508,2.725,509,3.9,510,2.725,511,2.725,512,2.725,513,2.725]],["title/interfaces/FindOneArgs.html",[440,1.606,451,1.811]],["body/interfaces/FindOneArgs.html",[7,0.014,17,0.113,18,0.1,19,0.088,30,0.448,35,1.472,39,0.277,41,0.756,46,0.872,47,1.279,54,1.233,61,1.38,66,0.1,67,0.187,72,2.16,94,0.008,95,0.008,100,0.295,118,1.068,131,2.133,159,2.053,173,1.858,210,1.328,213,1.157,214,1.494,222,1.435,227,2.425,230,0.783,235,2.732,254,1.698,268,2.665,297,1.778,305,2.024,306,1.778,310,1.778,311,1.778,339,1.328,340,1.38,349,1.435,352,1.435,361,1.625,363,1.38,390,2.805,413,0.972,440,1.971,441,2.593,442,2.075,443,2.525,444,2.201,445,1.866,446,2.075,447,3.353,448,2.963,449,3.246,450,2.525,451,2.593,452,1.964,453,2.746,454,2.746,455,2.075,456,3.922,457,2.746,458,2.962,459,2.075,460,2.746,461,2.746,462,2.746,463,2.075,464,3.922,465,2.746,466,2.746,467,2.746,468,2.746]],["title/interfaces/FindOneArgs-1.html",[440,1.341,451,1.513,469,2.958]],["body/interfaces/FindOneArgs-1.html",[7,0.014,17,0.113,18,0.1,19,0.088,30,0.448,35,1.472,39,0.277,41,0.756,46,0.872,47,1.279,54,1.233,61,1.38,66,0.1,67,0.187,72,2.16,94,0.008,95,0.008,100,0.295,118,1.068,131,2.133,159,2.053,173,1.858,210,1.328,213,1.157,214,1.494,222,1.435,227,2.425,230,0.783,235,2.732,254,1.698,268,2.665,297,1.778,305,2.024,306,1.778,310,1.778,311,1.778,339,1.328,340,1.38,349,1.435,352,1.435,361,1.625,363,1.38,406,2.805,413,0.972,440,1.971,441,2.593,442,2.075,444,2.201,445,1.866,446,2.075,451,2.593,455,2.075,458,2.962,459,2.075,463,2.075,470,2.525,471,3.353,472,2.963,473,3.393,474,2.348,475,1.964,476,2.746,477,2.746,478,3.922,479,2.746,480,2.746,481,2.746,482,2.746,483,3.922,484,2.746,485,2.746,486,2.746,487,2.746]],["title/interfaces/FindOneArgs-2.html",[440,1.341,451,1.513,488,2.454]],["body/interfaces/FindOneArgs-2.html",[7,0.014,17,0.107,18,0.095,19,0.083,30,0.725,31,1.591,35,1.311,39,0.261,41,0.718,46,0.84,47,1.214,54,1.17,61,1.31,66,0.095,67,0.178,72,2.109,94,0.008,95,0.008,100,0.28,108,1.812,118,1.014,131,1.418,159,1.696,173,1.883,210,1.279,213,1.115,214,1.418,222,1.363,224,1.688,227,2.336,230,1.388,235,2.755,244,3.025,254,1.612,301,1.97,305,2.093,339,1.827,340,1.31,349,1.363,352,1.363,363,1.31,413,0.936,440,1.898,441,2.519,442,1.97,445,1.772,451,2.519,489,2.397,490,2.607,491,2.607,492,2.854,493,2.397,494,2.09,495,5.562,496,2.607,497,2.607,498,2.607,499,1.97,500,2.607,501,2.607,502,2.607,503,4.443,504,2.607,505,2.607,506,1.612,507,2.607,508,2.607,509,3.778,510,2.607,511,2.607,512,2.607,513,2.607]],["title/controllers/HealthController.html",[96,1.67,514,2.938]],["body/controllers/HealthController.html",[7,0.013,17,0.147,18,0.131,19,0.114,22,1.386,26,0.736,33,1.386,39,0.237,41,0.984,64,1.796,66,0.131,67,0.244,94,0.01,95,0.01,96,1.868,99,2.7,100,0.384,105,1.705,173,1.591,214,2.856,222,1.868,514,4.32,515,3.96,516,5.977,517,7.093,518,7.093,519,4.546,520,4.546,521,4.546,522,4.546,523,6.677,524,5.977,525,5.977,526,5.977,527,3.574,528,4.546,529,4.546,530,4.546,531,4.546,532,5.977,533,4.546,534,4.546,535,4.546,536,4.546,537,5.977]],["title/modules/HealthModule.html",[0,1.606,9,2.732]],["body/modules/HealthModule.html",[0,2.651,2,2.651,7,0.013,9,4.511,17,0.176,18,0.157,19,0.137,21,3.239,39,0.301,41,1.18,64,2.651,66,0.157,67,0.292,94,0.011,95,0.011,514,5.254,527,4.288,538,5.453,539,6.71,540,4.751,541,6.71,542,5.453]],["title/injectables/JwtAuthGuard.html",[210,1.082,543,2.414]],["body/injectables/JwtAuthGuard.html",[7,0.013,17,0.188,18,0.167,19,0.146,39,0.277,41,1.259,66,0.167,67,0.312,94,0.011,95,0.011,195,3.665,210,1.858,211,2.827,413,1.133,543,4.145,544,3.91,545,4.573,546,5.066,547,5.816]],["title/injectables/JwtStrategy.html",[188,2.732,210,1.082]],["body/injectables/JwtStrategy.html",[7,0.013,17,0.133,18,0.118,19,0.103,22,1.295,26,0.687,28,1.769,29,1.486,30,0.716,31,1.295,33,0.952,35,1.471,39,0.283,41,0.888,43,2.967,66,0.118,67,0.22,72,1.397,94,0.009,95,0.009,100,0.347,108,1.538,113,1.996,159,1.97,168,4.389,173,1.093,188,3.753,191,6.398,195,2.587,204,3.576,205,3.576,206,3.228,207,3.576,210,1.486,211,1.996,214,1.756,222,2.294,224,3.825,260,3.576,278,3.228,284,3.576,305,1.538,413,0.8,548,3.576,549,4.863,550,4.105,551,4.105,552,5.582,553,4.105,554,4.105,555,3.576,556,3.228,557,3.576,558,3.576,559,3.576,560,3.576,561,4.105,562,4.105,563,4.105,564,2.76,565,4.105]],["title/entities/List.html",[272,1.738,449,1.89]],["body/entities/List.html",[7,0.013,17,0.148,18,0.132,19,0.116,26,0.826,30,0.861,31,1.396,39,0.266,46,0.803,54,1.621,61,2.377,66,0.132,67,0.246,94,0.01,95,0.01,100,0.388,105,1.914,108,1.849,157,2.458,213,1.396,230,1.596,259,2.729,271,4.23,272,2.574,319,3.384,320,2.584,393,3.417,413,0.895,449,2.799,458,3.417,506,2.233,566,4.002,567,4.851,568,4.594,569,3.612,570,4.594,571,4.594,572,3.088,573,3.088,574,3.088,575,3.612]],["title/classes/ListFactory.html",[67,0.218,422,2.938]],["body/classes/ListFactory.html",[7,0.013,17,0.156,18,0.138,19,0.121,22,1.439,26,0.763,28,1.525,29,1.281,30,0.618,31,1.116,33,1.116,39,0.246,46,0.842,66,0.138,67,0.258,94,0.01,95,0.01,100,0.407,157,1.763,173,1.281,213,1.439,251,2.45,252,2.707,333,1.042,393,2.45,413,1.208,420,3.235,422,4.484,449,3.192,499,3.684,576,4.193,577,5.396,578,5.396,579,4.877,580,4.813,581,4.877,582,5.899,583,4.813,584,3.784,585,4.193,586,4.193]],["title/controllers/ListsController.html",[96,1.67,587,2.938]],["body/controllers/ListsController.html",[7,0.013,17,0.093,18,0.083,19,0.072,22,1.003,26,0.763,28,1.831,29,1.539,30,0.742,31,1.341,33,1.438,35,1.51,39,0.268,41,0.622,64,1.135,66,0.083,67,0.154,69,1.616,70,1.336,72,1.471,94,0.007,95,0.007,96,1.18,99,1.707,100,0.243,105,1.768,108,1.794,113,2.101,118,1.322,130,2.922,131,1.849,132,1.931,152,1.931,173,1.65,230,1.459,235,1.976,263,1.526,297,2.201,301,2.567,305,2.028,310,2.201,311,2.201,338,1.644,339,2.198,340,1.708,341,2.101,346,1.81,347,3.124,349,1.18,350,2.077,352,1.18,357,1.931,358,1.707,361,1.336,363,1.135,368,2.077,370,2.077,372,2.077,390,3.91,421,2.259,447,2.906,448,4.129,449,2.01,452,2.922,506,1.397,543,1.707,544,1.931,587,3.124,588,2.503,589,2.259,590,2.873,591,2.873,592,2.873,593,2.873,594,2.873,595,2.873,596,2.873,597,2.873,598,2.259,599,4.085,600,1.81,601,1.931,602,2.077,603,2.503,604,2.873,605,3.756,606,2.259,607,2.873,608,2.873,609,5.196,610,2.503,611,2.873,612,3.765,613,3.765,614,3.124,615,2.873]],["title/modules/ListsModule.html",[0,1.606,10,2.561]],["body/modules/ListsModule.html",[0,2.377,2,2.233,3,2.926,7,0.013,10,4.87,13,3.216,14,3.384,15,2.584,16,2.339,17,0.148,18,0.132,19,0.116,21,2.729,39,0.301,41,0.994,45,2.895,46,0.803,47,1.682,51,3.321,64,2.377,65,3.574,66,0.132,67,0.246,94,0.01,95,0.01,449,2.137,450,3.321,452,4.563,587,4.851,603,4.002,616,4.002,617,4.002,618,4.002,619,4.594,620,4.35,621,4.35,622,4.594,623,4.594]],["title/injectables/ListsService.html",[210,1.082,452,2.286]],["body/injectables/ListsService.html",[7,0.013,17,0.091,18,0.081,19,0.071,22,0.99,26,0.796,28,1.949,29,1.638,30,0.789,31,1.427,33,1.427,35,1.723,39,0.257,41,0.611,46,0.746,47,1.034,54,0.997,61,1.116,66,0.081,67,0.151,72,1.95,94,0.007,95,0.007,100,0.239,113,2.785,118,0.864,131,1.825,159,1.815,173,1.722,210,1.136,211,1.373,214,1.208,222,1.753,227,2.785,230,0.633,235,2.787,254,1.373,263,1.506,268,2.28,297,1.438,305,1.851,306,1.438,310,1.438,311,1.438,338,1.622,339,2.179,340,2.031,341,2.074,349,1.753,352,1.753,361,1.313,363,1.116,390,3.222,413,0.55,440,1.685,441,1.901,443,2.041,444,1.779,445,1.509,446,1.677,447,2.868,448,3.403,449,3.009,450,2.041,451,2.554,452,2.399,453,2.22,454,3.354,455,2.534,456,4.505,457,2.22,458,2.618,459,2.534,460,2.22,461,2.22,462,2.22,463,1.677,464,4.505,465,2.22,466,2.22,467,2.22,468,2.22,624,2.824,625,2.824,626,2.824,627,2.824,628,2.22,629,2.824,630,2.824,631,2.824]],["title/injectables/LocalAuthGuard.html",[150,2.938,210,1.082]],["body/injectables/LocalAuthGuard.html",[7,0.013,17,0.188,18,0.167,19,0.146,39,0.277,41,1.259,66,0.167,67,0.312,94,0.011,95,0.011,150,5.044,195,3.665,210,1.858,211,2.827,413,1.133,545,4.573,546,5.066,632,5.066,633,5.816]],["title/injectables/LocalStrategy.html",[189,2.732,210,1.082]],["body/injectables/LocalStrategy.html",[7,0.013,17,0.141,18,0.125,19,0.109,22,1.346,26,0.714,28,1.839,29,1.545,30,0.745,31,1.346,33,1.009,35,1.515,39,0.277,41,0.941,66,0.125,67,0.233,69,2.447,72,1.48,94,0.009,95,0.009,100,0.368,108,1.8,113,2.115,118,1.331,140,4.437,141,3.42,159,1.535,173,1.158,189,3.902,195,2.741,210,1.545,211,2.115,222,1.787,230,1.674,242,3.92,244,1.86,301,2.584,413,0.847,549,5.057,555,3.79,556,3.42,558,3.79,559,3.79,560,3.79,599,4.564,634,3.79,635,4.35,636,4.35,637,5.805,638,4.35,639,3.79,640,4.35]],["title/classes/LoginUserBody.html",[67,0.218,142,2.938]],["body/classes/LoginUserBody.html",[7,0.013,17,0.165,18,0.146,19,0.128,26,0.791,30,0.825,39,0.255,66,0.146,67,0.345,94,0.01,95,0.01,100,0.431,105,1.834,137,1.672,142,4.648,213,1.492,230,1.659,242,3.964,244,3.014,333,1.102,398,3.014,400,4.738,401,3.209,641,5.541,642,4.005,643,6.431,644,4.437,645,4.437]],["title/classes/LoginUserResponse.html",[67,0.218,110,2.938]],["body/classes/LoginUserResponse.html",[7,0.013,17,0.158,18,0.14,19,0.123,26,0.851,30,0.887,39,0.249,66,0.14,67,0.262,94,0.01,95,0.01,100,0.413,105,1.972,108,1.905,110,4.526,137,1.604,138,3.887,139,3.531,160,4.996,162,3.519,213,1.452,230,1.633,333,1.057,398,3.353,641,5.731,646,3.841,647,4.255,648,4.255,649,4.255]],["title/classes/Migration20220926031634.html",[67,0.218,650,3.195]],["body/classes/Migration20220926031634.html",[7,0.013,17,0.121,18,0.107,19,0.094,22,1.212,26,0.459,33,0.866,35,1.399,38,2.329,39,0.148,46,0.652,66,0.107,67,0.2,94,0.008,95,0.008,100,0.316,130,2.099,242,2.099,244,1.596,263,1.845,264,3.071,283,4.526,291,2.934,305,1.896,333,0.808,338,2.294,358,3.104,393,1.9,413,1.018,650,4.109,651,3.251,652,3.223,653,3.492,654,3.731,655,1.9,656,4.087,657,3.503,658,4.055,659,4.055,660,4.087,661,4.055,662,4.922,663,4.055,664,4.493,665,3.731,666,3.731,667,4.109,668,4.553,669,3.513,670,2.934,671,2.934,672,4.109,673,4.553,674,3.104,675,2.661,676,2.939,677,3.731,678,3.104,679,3.104,680,3.492,681,3.251]],["title/classes/Migration20220926213133.html",[67,0.218,682,3.195]],["body/classes/Migration20220926213133.html",[7,0.013,17,0.141,18,0.125,19,0.109,22,1.346,26,0.714,33,1.346,35,1.733,38,3.107,39,0.173,46,0.761,66,0.125,67,0.233,94,0.009,95,0.009,100,0.368,130,3.265,157,2.126,244,1.86,264,2.955,283,3.265,333,0.941,413,1.131,652,3.491,653,3.724,655,2.215,656,3.448,657,3.803,664,3.657,672,5.48,674,3.448,675,3.326,676,3.265,682,4.564,683,3.79,684,3.92,685,4.35,686,4.35,687,5.805,688,3.79,689,5.48,690,4.685,691,4.722]],["title/classes/Migration20220926214650.html",[67,0.218,692,3.195]],["body/classes/Migration20220926214650.html",[7,0.013,17,0.121,18,0.108,19,0.094,22,1.217,26,0.646,33,1.217,35,1.657,38,2.92,39,0.149,46,0.656,66,0.108,67,0.201,94,0.008,95,0.008,100,0.317,157,1.922,263,1.852,264,2.671,283,4.331,305,1.806,333,0.812,338,1.995,358,3.117,393,2.671,413,1.022,506,2.942,652,3.233,653,3.501,655,1.911,656,3.892,657,3.637,658,3.527,659,3.527,660,3.892,661,3.527,662,4.405,663,3.527,664,4.128,669,3.527,672,4.757,673,4.571,674,3.117,675,2.671,676,2.951,678,3.117,679,3.117,680,3.818,681,3.269,684,3.685,692,4.126,693,3.269,694,3.753,695,3.753,696,3.527,697,3.269,698,3.793,699,3.793]],["title/classes/Migration20220926222224.html",[67,0.218,700,3.195]],["body/classes/Migration20220926222224.html",[7,0.013,17,0.139,18,0.123,19,0.108,22,1.335,26,0.708,33,1.335,35,1.726,38,3.09,39,0.17,46,0.751,66,0.123,67,0.23,94,0.009,95,0.009,100,0.363,263,2.031,264,2.929,305,1.585,333,0.929,358,2.55,413,1.121,506,3.371,652,3.468,653,3.705,655,2.186,656,4.118,657,3.53,660,3.418,674,4.118,675,2.929,676,3.899,678,3.418,679,3.418,680,3.468,684,3.899,691,4.159,696,3.868,697,6.04,700,4.524,701,3.74,702,4.293,703,4.293]],["title/classes/Migration20220926231541.html",[67,0.218,704,3.195]],["body/classes/Migration20220926231541.html",[7,0.013,17,0.133,18,0.118,19,0.103,22,1.295,26,0.687,33,1.295,35,1.704,38,3.034,39,0.163,46,0.718,66,0.118,67,0.22,94,0.009,95,0.009,100,0.347,157,1.503,263,1.97,264,2.09,283,4.131,305,1.748,333,0.888,338,1.561,393,2.09,413,1.087,506,1.996,652,3.39,653,3.637,655,2.09,656,3.768,657,3.466,658,2.76,659,2.76,660,3.768,661,2.76,662,3.753,663,2.76,664,3.517,669,3.753,674,3.316,675,2.842,676,3.14,678,3.316,679,3.316,680,3.39,684,3.828,696,3.753,698,2.967,699,2.967,704,4.389,705,3.576,706,4.105,707,4.105,708,4.921,709,4.863,710,3.576,711,3.576]],["title/classes/Migration20221013014335.html",[67,0.218,712,3.195]],["body/classes/Migration20221013014335.html",[7,0.013,17,0.135,18,0.12,19,0.105,22,1.312,26,0.696,33,1.312,35,1.713,38,3.058,39,0.166,46,0.732,66,0.12,67,0.224,94,0.009,95,0.009,100,0.354,263,1.996,305,1.558,333,0.905,413,1.101,506,2.749,652,3.423,653,3.666,655,2.13,656,3.359,657,3.76,660,3.359,674,3.359,675,2.879,676,3.858,678,3.359,679,3.359,680,3.022,684,3.858,689,4.446,690,4.612,691,4.087,708,5.339,709,5.58,711,4.926,712,4.446,713,3.644,714,4.184,715,4.184,716,5.655,717,5.58,718,4.926]],["title/classes/Migration20221023001353.html",[67,0.218,719,3.195]],["body/classes/Migration20221023001353.html",[7,0.012,17,0.114,18,0.101,19,0.089,22,1.166,26,0.619,33,1.166,35,1.625,38,2.842,39,0.14,46,0.617,66,0.101,67,0.189,94,0.008,95,0.008,100,0.299,157,1.841,263,2.251,264,2.559,283,4.369,305,1.93,333,0.764,393,2.559,413,0.979,506,2.444,652,3.127,653,3.408,655,1.797,657,3.751,658,3.379,659,3.379,660,4.161,661,3.379,662,4.287,663,3.379,664,4.018,669,4.287,675,3.247,676,3.587,678,3.788,679,3.788,680,3.743,684,3.587,690,4.287,696,4.287,698,3.633,699,3.633,708,4.61,710,3.076,717,5.555,718,3.076,719,3.952,720,3.076,721,3.531,722,3.531,723,4.379,724,4.61,725,3.531,726,3.531]],["title/classes/Migration20221031000536.html",[67,0.218,727,3.195]],["body/classes/Migration20221031000536.html",[7,0.013,17,0.133,18,0.118,19,0.104,22,1.298,26,0.689,30,0.718,33,1.298,35,1.705,38,3.038,39,0.163,46,0.72,66,0.118,67,0.221,94,0.009,95,0.009,100,0.348,251,3.235,270,3.587,283,2.316,333,0.891,413,1.09,564,3.761,652,3.395,653,3.642,655,2.096,656,4.234,657,3.743,667,5.359,670,5.359,671,4.995,674,4.608,675,2.096,684,3.833,689,5.78,690,2.768,691,4.044,724,4.044,727,4.398,728,3.587,729,4.118,730,4.118,731,5.594,732,5.594,733,4.873]],["title/classes/Migration20221129042732.html",[67,0.218,734,3.195]],["body/classes/Migration20221129042732.html",[7,0.013,17,0.144,18,0.128,19,0.112,22,1.371,26,0.727,29,1.19,33,1.371,35,1.746,38,3.14,39,0.177,46,0.781,66,0.128,67,0.24,94,0.009,95,0.009,100,0.378,263,1.577,264,2.275,283,3.962,305,1.628,333,0.967,413,1.151,652,3.538,653,3.764,655,2.275,657,3.371,658,3.004,659,3.004,660,3.51,661,3.004,662,3.972,663,3.004,664,2.816,669,3.004,675,2.275,676,2.513,678,2.654,679,2.654,680,3.158,684,3.962,690,3.004,696,3.972,698,3.23,699,3.23,723,3.893,734,4.646,735,3.893,736,4.469,737,4.469,738,5.206,739,4.469]],["title/classes/RedisIoAdapter.html",[67,0.218,740,3.195]],["body/classes/RedisIoAdapter.html",[7,0.013,17,0.131,18,0.117,19,0.102,22,1.287,26,0.777,28,1.289,29,1.083,30,0.712,31,0.943,33,1.287,35,1.464,38,2.472,39,0.269,66,0.117,67,0.218,72,1.384,94,0.009,95,0.009,100,0.344,159,2.228,173,1.083,213,1.287,214,2.7,235,2.4,333,0.88,413,1.08,740,4.361,741,3.543,742,6.313,743,6.313,744,6.781,745,5.547,746,5.547,747,4.067,748,4.067,749,5.547,750,5.907,751,6.781,752,4.067,753,3.543,754,4.067,755,3.198,756,4.361,757,4.067,758,3.543,759,3.543,760,5.547,761,3.198,762,4.067,763,4.067,764,4.067,765,5.547,766,4.067,767,4.067,768,4.067,769,4.067,770,4.067,771,4.361,772,4.067,773,4.067]],["title/entities/RefreshToken.html",[162,2.069,272,1.738]],["body/entities/RefreshToken.html",[7,0.013,17,0.141,18,0.125,19,0.109,26,0.804,29,1.158,30,0.745,39,0.259,46,0.761,54,1.535,66,0.125,67,0.233,94,0.009,95,0.009,100,0.368,105,1.864,108,2.101,162,2.955,213,1.346,251,2.215,252,2.447,259,2.584,271,4.14,272,2.483,288,4.564,291,5.136,308,5.691,319,3.265,320,2.447,413,0.847,564,3.902,567,4.196,572,2.924,573,2.924,574,2.924,667,3.42,668,5.057,670,4.564,680,3.102,774,6.072,775,3.79,776,4.35,777,4.35,778,4.35,779,4.35,780,5.805,781,5.805,782,4.35]],["title/classes/RefreshTokenBody.html",[67,0.218,115,2.938]],["body/classes/RefreshTokenBody.html",[7,0.013,17,0.18,18,0.16,19,0.14,26,0.685,30,0.715,39,0.221,66,0.16,67,0.298,94,0.011,95,0.011,100,0.471,105,1.589,115,4.913,137,1.828,162,3.735,213,1.577,230,1.523,333,1.205,398,3.138,783,5.344,784,4.851,785,5.569]],["title/classes/RefreshTokenResponse.html",[67,0.218,120,2.938]],["body/classes/RefreshTokenResponse.html",[7,0.013,17,0.167,18,0.148,19,0.13,26,0.797,30,0.831,39,0.257,66,0.148,67,0.276,94,0.01,95,0.01,100,0.436,105,1.848,108,1.953,120,4.683,137,1.692,138,3.985,139,3.725,160,5.122,213,1.503,230,1.452,333,1.115,398,3.276,783,5.571,786,4.489,787,5.153,788,5.153]],["title/classes/RegisterUserBody.html",[67,0.218,124,2.938]],["body/classes/RegisterUserBody.html",[7,0.013,17,0.165,18,0.146,19,0.128,26,0.791,30,0.825,39,0.255,66,0.146,67,0.345,94,0.01,95,0.01,100,0.431,105,1.834,124,4.648,137,1.672,213,1.492,230,1.659,242,3.964,244,3.014,333,1.102,396,4.648,398,3.014,400,4.738,401,3.209,642,4.005,644,4.437,645,4.437,789,5.541]],["title/classes/RegisterUserResponse.html",[67,0.218,127,2.938]],["body/classes/RegisterUserResponse.html",[7,0.013,17,0.158,18,0.14,19,0.123,26,0.851,30,0.887,39,0.249,66,0.14,67,0.262,94,0.01,95,0.01,100,0.413,105,1.972,108,1.905,127,4.526,137,1.604,138,3.887,139,3.531,160,4.996,162,3.519,213,1.452,230,1.633,333,1.057,398,3.353,646,3.841,647,4.255,648,4.255,649,4.255,789,5.731]],["title/entities/Room.html",[272,1.738,790,2.732]],["body/entities/Room.html",[7,0.013,17,0.144,18,0.128,19,0.112,26,0.727,29,1.95,30,0.758,39,0.28,46,0.781,54,1.577,66,0.128,67,0.24,94,0.009,95,0.009,100,0.378,105,1.686,108,2.019,137,1.467,157,2.425,213,1.371,230,1.324,259,2.654,271,3.51,272,2.527,319,3.323,320,2.513,398,2.832,413,0.87,458,3.371,473,2.873,567,4.272,572,3.004,573,3.004,574,3.004,614,4.272,738,3.513,790,4.736,791,3.893,792,3.893,793,4.469,794,3.893,795,5.909,796,5.909,797,4.469,798,3.513]],["title/controllers/RoomsController.html",[96,1.67,799,2.938]],["body/controllers/RoomsController.html",[7,0.013,17,0.103,18,0.092,19,0.08,22,1.083,26,0.797,28,1.927,29,1.619,30,0.78,31,1.411,33,1.501,39,0.284,41,0.69,64,1.259,66,0.092,67,0.171,69,1.793,70,1.482,94,0.007,95,0.007,96,1.31,99,1.893,100,0.27,105,1.847,108,1.864,130,3.107,131,2.363,132,2.143,136,2.304,137,1.046,152,2.143,173,1.723,230,1.638,259,1.893,263,1.648,305,1.864,338,1.775,339,2.312,340,1.844,341,2.27,346,2.008,347,3.375,349,1.31,350,3.375,352,1.31,354,4.067,356,2.777,357,2.143,358,1.893,361,1.482,363,1.259,368,2.304,370,2.304,372,2.304,402,4.515,543,1.893,589,2.506,600,2.008,602,2.304,605,2.304,606,2.506,738,2.506,799,3.375,800,2.777,801,3.187,802,3.187,803,3.187,804,3.187,805,4.817,806,3.187,807,3.481,808,2.777,809,3.671,810,3.187,811,3.671,812,3.187,813,3.187,814,3.187,815,3.187,816,3.187,817,3.187,818,3.187,819,3.187]],["title/modules/RoomsModule.html",[0,1.606,11,2.732]],["body/modules/RoomsModule.html",[0,2.377,2,2.233,3,2.926,7,0.013,11,5.196,13,3.216,14,3.384,15,2.584,16,2.339,17,0.148,18,0.132,19,0.116,21,2.729,39,0.301,41,0.994,45,2.895,46,0.803,47,1.682,51,3.321,64,2.377,65,3.574,66,0.132,67,0.246,94,0.01,95,0.01,620,4.35,621,4.35,790,3.088,799,4.851,807,5.112,808,4.002,820,4.002,821,4.002,822,4.002,823,4.594,824,4.594,825,4.002,826,4.594]],["title/injectables/RoomsService.html",[210,1.082,807,2.561]],["body/injectables/RoomsService.html",[7,0.013,17,0.095,18,0.084,19,0.074,22,1.018,26,0.807,28,1.981,29,1.664,30,0.802,31,1.45,33,1.45,35,1.737,39,0.26,41,0.634,46,0.767,47,1.073,54,1.034,61,1.158,66,0.084,67,0.157,72,1.987,94,0.007,95,0.007,100,0.248,113,2.838,118,0.896,159,1.856,173,1.747,210,1.168,211,1.425,214,1.254,222,1.803,227,2.838,235,2.847,254,1.425,263,1.548,268,2.344,297,1.492,305,1.808,306,1.492,310,1.492,311,1.492,338,1.668,339,2.22,340,1.733,341,2.133,346,2.764,349,1.803,352,1.803,361,1.363,363,1.158,402,4.407,446,1.741,449,2.041,455,2.606,458,2.677,459,2.606,463,1.741,790,4.41,805,4.701,807,2.764,809,3.45,825,2.553,827,2.553,828,2.931,829,2.931,830,4.387,831,2.931,832,2.931,833,2.931,834,2.931,835,2.931,836,2.931,837,2.931,838,2.931,839,2.931,840,2.931,841,2.931,842,2.931,843,2.931,844,2.931]],["title/entities/Task.html",[272,1.738,473,1.976]],["body/entities/Task.html",[7,0.013,16,2.525,17,0.112,18,0.1,19,0.087,26,0.824,30,0.859,31,1.467,39,0.266,46,0.606,54,1.223,61,1.369,66,0.1,67,0.186,94,0.008,95,0.008,100,0.293,105,1.909,108,1.844,137,1.138,157,2.807,213,1.15,230,1.417,251,1.764,259,2.058,271,3.756,272,2.121,319,2.789,320,1.949,341,2.411,393,3.406,398,2.977,413,0.675,449,3.41,458,2.949,473,3.681,564,2.329,567,4.187,569,2.725,572,2.329,573,2.329,574,2.329,575,2.725,584,2.725,614,3.585,671,3.9,724,2.505,733,5.046,792,4.321,794,3.019,798,3.9,845,3.019,846,3.465,847,3.465,848,3.465,849,3.465,850,3.019,851,4.96,852,4.96,853,4.96,854,3.465,855,4.96,856,3.465,857,4.96,858,4.96,859,3.465]],["title/classes/TaskFactory.html",[67,0.218,424,2.938]],["body/classes/TaskFactory.html",[7,0.013,17,0.156,18,0.138,19,0.121,22,1.439,26,0.763,28,1.525,29,1.281,30,0.618,31,1.116,33,1.116,39,0.246,46,0.842,66,0.138,67,0.258,94,0.01,95,0.01,100,0.407,157,1.763,173,1.281,213,1.439,251,2.45,252,2.707,333,1.042,393,2.45,413,1.208,420,3.235,424,4.484,473,3.337,499,3.684,577,5.396,578,5.396,579,4.877,581,4.877,582,5.899,585,4.193,586,4.193,860,4.193,861,4.813,862,4.813,863,4.813]],["title/controllers/TasksController.html",[96,1.67,864,2.938]],["body/controllers/TasksController.html",[7,0.013,17,0.086,18,0.076,19,0.067,22,0.945,26,0.737,28,1.76,29,1.478,30,0.811,31,1.288,33,1.389,35,1.466,39,0.276,41,0.575,64,1.05,66,0.076,67,0.142,69,1.495,70,1.236,72,1.386,94,0.007,95,0.007,96,1.092,99,1.579,100,0.225,105,1.708,108,1.741,113,1.981,118,1.246,130,2.786,131,1.742,132,1.787,136,1.921,137,0.873,152,1.787,157,1.492,173,1.594,230,1.11,235,2.403,263,1.438,297,2.074,301,2.42,305,1.99,306,2.074,310,2.074,311,2.074,338,2.112,339,2.112,340,1.61,341,1.981,346,1.675,347,1.921,349,1.092,350,2.945,352,1.092,357,1.787,358,1.579,361,1.236,363,1.05,368,1.921,370,1.921,372,1.921,406,3.816,421,2.09,471,2.739,472,4.031,473,3.382,474,1.787,475,2.786,543,1.579,544,1.787,589,2.09,598,2.09,599,3.895,600,1.675,601,1.787,602,1.921,605,1.921,606,2.09,610,3.549,612,3.549,613,3.549,614,2.945,724,1.921,811,3.203,864,2.945,865,2.315,866,2.658,867,2.658,868,2.658,869,2.658,870,3.549,871,3.549,872,2.658,873,2.658,874,2.658,875,4.074,876,3.549,877,2.315,878,2.658,879,2.658,880,2.658,881,2.658,882,2.658,883,2.315,884,4.954,885,2.658,886,2.658]],["title/classes/TasksGateway.html",[67,0.218,887,3.195]],["body/classes/TasksGateway.html",[7,0.013,17,0.131,18,0.116,19,0.102,22,1.281,26,0.774,28,1.75,29,1.47,30,0.808,31,1.281,33,1.281,35,1.46,38,2.462,39,0.25,66,0.116,67,0.217,94,0.009,95,0.009,100,0.342,105,1.795,173,1.47,213,1.281,235,2.393,333,0.875,339,2.1,488,2.922,756,3.178,771,5.748,887,4.343,888,3.521,889,5.524,890,6.293,891,4.042,892,4.042,893,5.524,894,4.042,895,7.31,896,6.293,897,4.042,898,5.524,899,4.042,900,4.042,901,4.042,902,5.524,903,4.042,904,3.521,905,4.042,906,3.521,907,4.042,908,4.042,909,4.042,910,4.042,911,4.042,912,4.042,913,4.042,914,4.042,915,4.042,916,4.042]],["title/modules/TasksModule.html",[0,1.606,12,2.732]],["body/modules/TasksModule.html",[0,2.377,2,2.233,3,2.926,7,0.013,12,5.196,13,3.216,14,3.384,15,2.584,16,2.339,17,0.148,18,0.132,19,0.116,21,2.729,39,0.301,41,0.994,45,2.895,46,0.803,47,1.682,64,2.377,65,3.574,66,0.132,67,0.246,94,0.01,95,0.01,473,2.233,474,3.088,475,4.563,620,4.35,621,4.35,864,4.851,877,4.002,917,4.002,918,4.002,919,4.002,920,4.594,921,4.594,922,4.594,923,4.594]],["title/injectables/TasksService.html",[210,1.082,475,2.286]],["body/injectables/TasksService.html",[7,0.013,17,0.091,18,0.081,19,0.071,22,0.99,26,0.796,28,1.949,29,1.638,30,0.789,31,1.427,33,1.427,35,1.723,39,0.257,41,0.611,46,0.746,47,1.034,54,0.997,61,1.116,66,0.081,67,0.151,72,1.95,94,0.007,95,0.007,100,0.239,113,2.785,118,0.864,131,1.825,159,1.815,173,1.722,210,1.136,211,1.373,214,1.208,222,1.753,227,2.785,230,0.633,235,2.787,254,1.373,263,1.506,268,2.28,297,1.438,305,1.851,306,1.438,310,1.438,311,1.438,338,1.622,339,2.179,340,2.031,341,2.074,349,1.753,352,1.753,361,1.313,363,1.116,406,3.222,413,0.55,440,1.685,441,1.901,444,1.779,445,1.509,446,1.677,451,2.554,455,2.534,458,2.618,459,2.534,463,1.677,470,2.041,471,2.868,472,3.403,473,3.145,474,1.898,475,2.399,476,2.22,477,3.354,478,4.505,479,2.22,480,2.22,481,2.22,482,2.22,483,4.505,484,2.22,485,2.22,486,2.22,487,2.22,628,2.22,924,2.824,925,2.824,926,2.824,927,2.824,928,2.824,929,2.824,930,2.824]],["title/classes/UpdateChoreDto.html",[67,0.218,353,2.732]],["body/classes/UpdateChoreDto.html",[7,0.013,17,0.188,18,0.167,19,0.146,39,0.277,66,0.167,67,0.312,94,0.011,95,0.011,137,1.909,333,1.259,338,2.211,343,3.665,353,4.691,362,4.573,389,4.573,413,1.133,931,5.066,932,4.204,933,5.816]],["title/classes/UpdateListDto.html",[67,0.218,448,2.414]],["body/classes/UpdateListDto.html",[7,0.013,17,0.187,18,0.166,19,0.146,39,0.276,66,0.166,67,0.31,94,0.011,95,0.011,333,1.253,338,2.202,390,3.257,392,4.553,413,1.128,447,3.892,448,4.134,932,4.186,934,5.044,935,5.044,936,5.044,937,5.79]],["title/classes/UpdateProfileDto.html",[67,0.218,492,2.414]],["body/classes/UpdateProfileDto.html",[7,0.013,17,0.152,18,0.135,19,0.119,26,0.836,30,0.872,31,1.771,39,0.187,66,0.135,67,0.252,70,3.705,94,0.01,95,0.01,100,0.398,105,1.938,137,1.546,213,1.419,230,1.711,244,2.905,333,1.019,398,3.325,492,3.633,938,6.263,939,4.102,940,4.91,941,4.91,942,4.709,943,4.709,944,4.709]],["title/classes/UpdateRoomDto.html",[67,0.218,805,2.732]],["body/classes/UpdateRoomDto.html",[7,0.013,17,0.188,18,0.167,19,0.146,39,0.277,66,0.167,67,0.312,94,0.011,95,0.011,137,1.909,333,1.259,338,2.211,402,3.665,404,4.573,413,1.133,805,4.691,809,4.573,932,4.204,945,5.066,946,5.816]],["title/classes/UpdateTaskDto.html",[67,0.218,472,2.414]],["body/classes/UpdateTaskDto.html",[7,0.013,17,0.187,18,0.166,19,0.146,39,0.276,66,0.166,67,0.31,94,0.011,95,0.011,333,1.253,338,2.202,406,3.257,408,4.553,413,1.128,471,3.892,472,4.134,932,4.186,935,5.044,936,5.044,947,5.044,948,5.79]],["title/entities/User.html",[108,1.12,272,1.738]],["body/entities/User.html",[7,0.013,17,0.097,18,0.086,19,0.076,26,0.815,29,1.573,30,0.758,39,0.251,46,0.525,54,1.061,61,2.108,66,0.086,67,0.161,94,0.007,95,0.007,100,0.254,105,1.889,108,1.629,118,1.808,137,0.986,157,2.511,162,3.009,166,3.894,198,2.363,213,1.037,230,1.579,242,3.001,244,2.702,251,2.275,252,2.514,264,1.53,271,3.752,272,1.912,274,2.618,319,2.514,320,1.69,398,2.832,413,0.585,438,3.894,449,2.749,488,3.231,506,3.071,569,3.514,572,2.02,573,2.02,574,2.02,575,3.514,584,2.363,680,3.376,688,3.894,798,4.196,850,3.894,940,3.858,941,3.858,949,2.618,950,5.337,951,4.47,952,5.91,953,4.47,954,3.005,955,4.47,956,4.47,957,3.005,958,5.91,959,4.47,960,3.005,961,4.47,962,3.005,963,3.005,964,3.005,965,3.005,966,4.47,967,3.005,968,3.005,969,3.005,970,4.47,971,4.47,972,4.47,973,3.005,974,2.618,975,5.337,976,4.47,977,3.005,978,4.47]],["title/classes/UserDto.html",[67,0.218,138,2.286]],["body/classes/UserDto.html",[7,0.013,17,0.128,18,0.114,19,0.1,26,0.866,28,1.257,29,1.056,30,0.903,31,0.92,39,0.247,66,0.114,67,0.292,70,3.688,94,0.009,95,0.009,100,0.336,105,1.915,108,1.094,137,1.303,138,3.068,213,1.265,222,2.241,230,1.7,233,5.43,244,2.666,305,1.717,333,0.859,398,3.009,494,2.5,499,3.702,940,4.505,941,4.505,979,3.457,980,3.968,981,3.968,982,6.711,983,3.968,984,3.968,985,3.968,986,3.968,987,5.455,988,7.036,989,3.457,990,3.457,991,3.968,992,3.968,993,3.968,994,3.12,995,3.968,996,3.968,997,3.968,998,3.968]],["title/classes/UserFactory.html",[67,0.218,426,2.938]],["body/classes/UserFactory.html",[7,0.013,17,0.147,18,0.131,19,0.114,22,1.386,26,0.736,28,1.44,29,1.21,30,0.583,31,1.054,33,1.054,39,0.265,46,0.795,66,0.131,67,0.244,94,0.01,95,0.01,100,0.384,108,1.84,159,2.109,173,1.21,213,1.386,242,2.557,244,1.944,251,2.314,252,2.557,256,4.32,259,2.7,333,0.984,413,1.164,420,3.056,426,4.32,499,3.55,577,5.25,578,5.25,579,4.699,581,4.699,582,5.793,940,4.32,941,4.826,999,3.96,1000,4.546,1001,4.546,1002,4.546,1003,4.546,1004,4.546,1005,4.546]],["title/controllers/UsersController.html",[96,1.67,1006,2.938]],["body/controllers/UsersController.html",[7,0.013,17,0.092,18,0.081,19,0.071,22,0.993,26,0.707,28,1.633,29,1.372,30,0.909,31,1.196,33,1.503,35,1.644,39,0.275,41,0.614,64,1.12,66,0.081,67,0.152,69,1.595,70,1.319,72,1.754,94,0.007,95,0.007,96,1.165,99,1.684,100,0.24,105,1.638,108,2.177,109,3.728,113,2.506,118,1.756,130,2.407,132,1.906,135,4.491,136,2.05,137,0.931,138,3.783,152,1.906,157,2.103,159,1.819,173,1.529,178,3.728,224,2.624,230,1.155,244,2.205,263,1.819,264,2.179,278,2.23,306,2.923,339,2.183,340,1.691,357,1.906,363,1.12,492,3.411,493,2.05,494,1.787,543,1.684,544,1.906,598,2.23,600,2.697,601,1.906,602,2.05,605,2.05,811,3.365,870,3.728,871,5.002,876,3.728,883,2.47,1006,3.094,1007,2.47,1008,4.28,1009,2.836,1010,2.836,1011,2.836,1012,2.836,1013,2.836,1014,2.836,1015,2.836,1016,2.836,1017,5.742,1018,2.836,1019,2.836,1020,2.836,1021,2.47,1022,2.836,1023,2.836,1024,2.836,1025,2.836,1026,2.836,1027,2.836,1028,2.836,1029,2.836,1030,4.28,1031,2.836,1032,2.836,1033,2.836,1034,2.836]],["title/modules/UsersModule.html",[0,1.606,13,2.172]],["body/modules/UsersModule.html",[0,2.377,2,2.233,3,2.926,7,0.013,10,3.792,13,4.13,14,3.384,15,2.584,16,2.339,17,0.148,18,0.132,19,0.116,21,2.729,39,0.301,41,0.994,45,2.895,46,0.803,47,1.682,52,4.002,64,2.377,65,3.574,66,0.132,67,0.246,94,0.01,95,0.01,108,1.266,224,4.131,494,2.895,620,4.35,621,4.35,1006,4.851,1021,4.002,1035,4.002,1036,4.002,1037,4.002,1038,4.594,1039,4.594,1040,4.594]],["title/injectables/UsersService.html",[210,1.082,224,2.069]],["body/injectables/UsersService.html",[7,0.014,17,0.093,18,0.082,19,0.072,22,1.001,26,0.801,28,1.962,29,1.648,30,0.795,31,1.436,33,1.436,35,1.649,39,0.246,41,0.62,46,0.755,47,1.05,54,1.012,61,1.133,66,0.082,67,0.154,72,1.965,94,0.007,95,0.007,100,0.242,108,1.706,113,2.523,118,0.877,131,1.226,159,1.523,173,1.797,210,1.149,211,1.394,214,1.226,222,1.773,224,2.197,227,2.807,230,0.967,235,2.642,244,2.469,254,1.394,263,1.523,301,1.703,305,1.996,338,1.641,339,2.354,340,2.05,341,2.098,349,1.773,352,1.773,363,1.133,413,0.558,440,1.705,441,1.923,445,1.532,451,2.573,489,2.072,490,2.254,491,2.254,492,3.429,493,2.072,494,1.806,495,4.539,496,2.254,497,3.393,498,3.393,499,3.082,500,2.254,501,2.254,502,2.254,503,4.08,504,2.254,505,2.254,506,1.394,507,2.254,508,2.254,509,4.539,510,2.254,511,2.254,512,2.254,513,2.254,628,2.254,1041,2.867,1042,2.867,1043,2.867,1044,2.867,1045,2.867,1046,2.867,1047,2.867,1048,2.867]],["title/changelog.html",[1049,2.958,1050,2.958,1051,2.958]],["body/changelog.html",[3,2.986,7,0.009,16,2.559,19,0.056,41,0.479,49,1.928,53,3.076,66,0.064,85,1.741,94,0.006,95,0.006,101,3.076,118,1.538,119,1.741,262,3.076,263,2.379,268,1.183,337,1.741,338,0.842,341,2.141,386,3.076,414,1.928,473,2.141,675,2.796,708,1.6,755,1.741,761,1.741,974,1.928,990,3.076,994,1.741,1051,1.928,1052,2.214,1053,2.214,1054,2.214,1055,2.214,1056,2.214,1057,5.853,1058,3.531,1059,3.531,1060,3.531,1061,3.531,1062,3.531,1063,3.531,1064,3.076,1065,3.531,1066,6.378,1067,3.076,1068,4.405,1069,2.214,1070,2.214,1071,2.214,1072,7.367,1073,2.214,1074,2.214,1075,2.214,1076,1.928,1077,2.214,1078,2.214,1079,2.214,1080,2.214,1081,2.214,1082,2.214,1083,3.531,1084,2.214,1085,2.214,1086,4.405,1087,2.214,1088,2.214,1089,4.405,1090,2.214,1091,2.214,1092,2.214,1093,2.214,1094,2.214,1095,2.214,1096,2.214,1097,2.214,1098,3.076,1099,2.214,1100,2.214,1101,2.214,1102,3.076,1103,2.214,1104,2.214,1105,2.214,1106,2.214,1107,2.214,1108,2.214,1109,2.214,1110,2.214,1111,2.214,1112,2.214,1113,2.214,1114,2.214,1115,5.027,1116,2.214,1117,2.214,1118,2.214,1119,2.214,1120,7.965,1121,3.531,1122,2.214,1123,2.214,1124,2.214,1125,2.214,1126,2.214,1127,2.214,1128,3.531,1129,2.214,1130,2.214,1131,2.214,1132,2.214,1133,2.214,1134,2.214,1135,2.214,1136,5.027,1137,2.214,1138,2.214,1139,2.214,1140,2.214,1141,2.214,1142,3.531,1143,2.214,1144,2.214,1145,2.214,1146,2.214,1147,7.435,1148,2.214,1149,5.492,1150,2.214,1151,2.214,1152,4.405,1153,2.214,1154,5.853,1155,2.214,1156,5.027,1157,2.214,1158,2.214,1159,2.214,1160,2.214,1161,2.214,1162,2.214,1163,4.405,1164,2.214,1165,2.214,1166,2.214,1167,2.214,1168,2.214,1169,2.214,1170,5.027,1171,2.214,1172,2.214,1173,2.214,1174,1.928,1175,2.214,1176,2.214,1177,2.214,1178,2.214,1179,2.214,1180,2.214,1181,2.214,1182,4.405,1183,2.214,1184,2.214,1185,3.531,1186,2.214,1187,2.214,1188,2.214,1189,2.214,1190,2.214,1191,1.928,1192,2.214,1193,2.214,1194,2.214,1195,5.492,1196,3.531,1197,5.027,1198,5.027,1199,2.214,1200,3.531,1201,3.531,1202,2.214,1203,2.214,1204,2.214,1205,2.214,1206,2.214,1207,3.531,1208,2.214,1209,2.214,1210,2.214,1211,2.214,1212,2.214,1213,3.076,1214,2.214,1215,2.214,1216,1.928,1217,2.214,1218,2.214,1219,2.214,1220,2.214,1221,2.214,1222,1.928,1223,2.214,1224,1.928,1225,2.214,1226,2.214,1227,2.214,1228,2.214,1229,2.214,1230,1.928,1231,2.214,1232,2.214,1233,2.214,1234,2.214,1235,1.928,1236,1.741,1237,2.214,1238,2.214,1239,2.214]],["title/coverage.html",[1240,4.359]],["body/coverage.html",[7,0.013,19,0.054,30,0.273,46,0.373,67,0.426,94,0.005,95,0.005,96,2.485,97,1.54,98,1.856,108,0.587,110,1.54,115,1.54,118,0.652,120,1.54,124,1.54,127,1.54,138,1.199,140,1.266,142,1.54,150,1.54,162,1.085,188,1.433,189,1.433,210,1.773,212,1.856,224,1.085,272,2.461,319,1.199,321,1.856,322,1.856,332,1.54,334,1.856,335,1.54,336,1.856,343,1.343,353,1.433,359,1.343,378,1.856,388,1.856,389,2.693,390,1.199,391,1.856,392,2.693,402,1.343,403,1.856,404,2.693,406,1.199,407,1.856,408,2.693,411,1.676,412,1.856,422,1.54,424,1.54,426,1.54,440,2.274,441,1.914,443,3.104,448,1.266,449,0.991,451,1.914,452,1.199,470,3.104,472,1.266,473,1.036,475,1.199,489,3.104,492,1.266,514,1.54,515,1.856,543,1.266,544,1.433,545,2.693,548,1.856,566,1.856,576,1.856,587,1.54,588,1.856,600,1.343,601,1.433,632,1.856,634,1.856,641,2.693,642,2.693,646,2.693,650,1.676,651,1.856,657,1.085,682,1.676,683,1.856,692,1.676,693,1.856,700,1.676,701,1.856,704,1.676,705,1.856,712,1.676,713,1.856,719,1.676,720,1.856,727,1.676,728,1.856,734,1.676,735,1.856,740,1.676,741,1.856,774,1.856,775,1.856,783,2.693,784,1.856,786,1.856,789,2.693,790,1.433,791,1.856,799,1.54,800,1.856,805,1.433,807,1.343,827,1.856,845,1.856,860,1.856,864,1.54,865,1.856,887,1.676,888,1.856,931,1.856,934,1.856,938,1.856,939,1.856,945,1.856,947,1.856,949,1.856,979,1.856,999,1.856,1006,1.54,1007,1.856,1098,1.856,1236,1.676,1240,1.676,1241,2.131,1242,2.131,1243,1.856,1244,3.425,1245,8.313,1246,7.379,1247,5.755,1248,6.049,1249,2.131,1250,1.856,1251,7.601,1252,5.755,1253,4.918,1254,1.856,1255,2.131,1256,1.856,1257,2.131,1258,2.131,1259,2.131,1260,2.131]],["title/dependencies.html",[3,2.376,1261,2.958]],["body/dependencies.html",[3,1.983,7,0.014,41,0.883,43,2.949,46,1.312,47,1.494,54,1.44,67,0.298,94,0.009,95,0.009,137,1.339,193,3.208,195,2.57,256,2.949,401,2.57,419,3.554,420,2.742,527,3.208,540,3.554,556,4.971,557,3.554,639,3.554,655,2.077,755,4.371,756,4.371,758,3.554,759,3.554,761,3.208,904,3.554,906,3.554,989,3.554,1213,3.554,1216,3.554,1222,3.554,1224,3.554,1262,7.104,1263,4.08,1264,4.08,1265,4.08,1266,3.554,1267,5.559,1268,6.79,1269,4.08,1270,5.559,1271,4.08,1272,4.08,1273,4.08,1274,4.08,1275,4.08,1276,4.08,1277,4.08,1278,5.559,1279,4.08,1280,4.08,1281,4.08,1282,4.08,1283,4.08,1284,4.08,1285,4.08,1286,4.08,1287,4.08,1288,4.08,1289,4.08,1290,4.08,1291,4.08,1292,4.08,1293,4.08,1294,4.08]],["title/miscellaneous/functions.html",[1295,2.454,1296,4.258]],["body/miscellaneous/functions.html",[7,0.012,94,0.012,95,0.012,100,0.529,1254,5.453,1256,6.717,1295,4.525,1296,5.453,1297,6.26]],["title/index.html",[100,0.287,1049,2.958,1050,2.958]],["body/index.html",[7,0.013,18,0.128,94,0.009,95,0.009,157,1.636,415,6.557,771,3.513,994,3.513,1064,3.893,1067,3.893,1076,3.893,1102,5.148,1174,5.768,1230,3.893,1235,3.893,1240,3.513,1298,4.469,1299,4.469,1300,5.909,1301,4.469,1302,4.469,1303,4.469,1304,4.469,1305,4.469,1306,4.469,1307,4.469,1308,7.677,1309,4.469,1310,4.469,1311,4.469,1312,5.909,1313,4.469,1314,4.469,1315,4.469,1316,4.469,1317,5.909,1318,4.469,1319,4.469,1320,4.469,1321,5.148,1322,5.909,1323,4.469,1324,4.469,1325,4.469,1326,4.469,1327,4.469,1328,3.893,1329,4.469,1330,4.469,1331,4.469,1332,4.469,1333,4.469,1334,4.469,1335,4.469,1336,4.469,1337,3.893,1338,4.469,1339,4.469,1340,4.469,1341,4.469,1342,4.469,1343,4.469,1344,3.893]],["title/modules.html",[2,2.695]],["body/modules.html",[1,3.926,2,2.64,6,3.651,7,0.011,8,3.651,9,3.651,10,3.422,11,3.651,12,3.651,13,2.902,94,0.011,95,0.011,1328,6.992,1345,8.026,1346,8.026,1347,8.107,1348,5.431,1349,5.431]],["title/overview.html",[1350,4.83]],["body/overview.html",[1,5.802,2,1.779,3,2.506,4,3.187,5,3.187,6,5.207,7,0.013,8,4.592,9,4.012,10,4.465,11,4.764,12,4.764,13,3.891,14,2.899,15,2.058,16,1.863,64,1.445,94,0.008,95,0.008,140,3.545,185,3.187,187,3.187,188,4.012,189,4.012,211,1.779,224,3.707,317,2.877,320,2.058,333,0.792,359,3.76,374,3.187,375,3.187,442,2.173,452,4.095,475,4.095,616,3.187,617,3.187,618,3.187,807,4.588,820,3.187,821,3.187,822,3.187,917,3.187,918,3.187,919,3.187,1035,3.187,1036,3.187,1037,3.187,1350,3.187,1351,3.659,1352,3.659,1353,5.155,1354,3.659]],["title/properties.html",[213,1.134,1261,2.958]],["body/properties.html",[7,0.013,94,0.012,95,0.012,157,2.26,213,1.432,1191,5.376,1321,5.376,1337,5.376,1344,5.376,1355,6.172]],["title/miscellaneous/variables.html",[1295,2.454,1356,4.258]],["body/miscellaneous/variables.html",[7,0.013,30,0.796,46,1.085,61,1.902,81,3.784,94,0.01,95,0.01,100,0.407,108,1.326,118,1.472,159,1.699,173,1.281,242,2.707,251,3.158,252,3.488,320,2.707,564,3.235,600,3.908,601,3.235,750,4.193,753,4.193,1236,4.877,1243,5.403,1250,5.403,1266,4.193,1295,3.479,1356,4.193,1357,4.813,1358,4.813,1359,4.813,1360,4.813,1361,4.813,1362,4.813,1363,4.813,1364,4.813,1365,4.813,1366,4.813,1367,4.813,1368,4.813,1369,4.813,1370,4.813,1371,4.813,1372,4.813,1373,4.813,1374,4.813,1375,4.813,1376,4.813,1377,4.813,1378,4.813,1379,4.813,1380,4.813,1381,4.813,1382,4.813,1383,4.813,1384,4.813]]],"invertedIndex":[["",{"_index":7,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"entities/BaseEntity.html":{},"classes/Chore.html":{},"controllers/ChoresController.html":{},"modules/ChoresModule.html":{},"injectables/ChoresService.html":{},"classes/CreateChoreDto.html":{},"classes/CreateListDto.html":{},"classes/CreateRoomDto.html":{},"classes/CreateTaskDto.html":{},"classes/DatabaseSeeder.html":{},"interfaces/FindAllArgs.html":{},"interfaces/FindAllArgs-1.html":{},"interfaces/FindAllArgs-2.html":{},"interfaces/FindOneArgs.html":{},"interfaces/FindOneArgs-1.html":{},"interfaces/FindOneArgs-2.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"entities/List.html":{},"classes/ListFactory.html":{},"controllers/ListsController.html":{},"modules/ListsModule.html":{},"injectables/ListsService.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/LoginUserBody.html":{},"classes/LoginUserResponse.html":{},"classes/Migration20220926031634.html":{},"classes/Migration20220926213133.html":{},"classes/Migration20220926214650.html":{},"classes/Migration20220926222224.html":{},"classes/Migration20220926231541.html":{},"classes/Migration20221013014335.html":{},"classes/Migration20221023001353.html":{},"classes/Migration20221031000536.html":{},"classes/Migration20221129042732.html":{},"classes/RedisIoAdapter.html":{},"entities/RefreshToken.html":{},"classes/RefreshTokenBody.html":{},"classes/RefreshTokenResponse.html":{},"classes/RegisterUserBody.html":{},"classes/RegisterUserResponse.html":{},"entities/Room.html":{},"controllers/RoomsController.html":{},"modules/RoomsModule.html":{},"injectables/RoomsService.html":{},"entities/Task.html":{},"classes/TaskFactory.html":{},"controllers/TasksController.html":{},"classes/TasksGateway.html":{},"modules/TasksModule.html":{},"injectables/TasksService.html":{},"classes/UpdateChoreDto.html":{},"classes/UpdateListDto.html":{},"classes/UpdateProfileDto.html":{},"classes/UpdateRoomDto.html":{},"classes/UpdateTaskDto.html":{},"entities/User.html":{},"classes/UserDto.html":{},"classes/UserFactory.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":1245,"title":{},"body":{"coverage.html":{}}}],["0.0.2",{"_index":1187,"title":{},"body":{"changelog.html":{}}}],["0.1.0",{"_index":1189,"title":{},"body":{"changelog.html":{}}}],["0.1.13",{"_index":1290,"title":{},"body":{"dependencies.html":{}}}],["0.13.2",{"_index":1277,"title":{},"body":{"dependencies.html":{}}}],["0.2.0",{"_index":1191,"title":{},"body":{"changelog.html":{},"properties.html":{}}}],["0.3.0",{"_index":1052,"title":{},"body":{"changelog.html":{}}}],["0.5.1",{"_index":1276,"title":{},"body":{"dependencies.html":{}}}],["0.6.0",{"_index":1282,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":1246,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":1249,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":1247,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":1251,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":1248,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":1257,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":1252,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":1253,"title":{},"body":{"coverage.html":{}}}],["005bf2a",{"_index":1088,"title":{},"body":{"changelog.html":{}}}],["03b1db5",{"_index":1234,"title":{},"body":{"changelog.html":{}}}],["084fd38",{"_index":1159,"title":{},"body":{"changelog.html":{}}}],["094acfa",{"_index":1123,"title":{},"body":{"changelog.html":{}}}],["0a4e3b5",{"_index":1085,"title":{},"body":{"changelog.html":{}}}],["0d09d6e",{"_index":1239,"title":{},"body":{"changelog.html":{}}}],["0f2288a",{"_index":1108,"title":{},"body":{"changelog.html":{}}}],["1",{"_index":469,"title":{"interfaces/FindAllArgs-1.html":{},"interfaces/FindOneArgs-1.html":{}},"body":{}}],["1.0.0",{"_index":1284,"title":{},"body":{"dependencies.html":{}}}],["1.0.1",{"_index":1267,"title":{},"body":{"dependencies.html":{}}}],["1/2",{"_index":1259,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":317,"title":{},"body":{"injectables/AuthService.html":{},"classes/DatabaseSeeder.html":{},"overview.html":{}}}],["1024",{"_index":537,"title":{},"body":{"controllers/HealthController.html":{}}}],["11",{"_index":1054,"title":{},"body":{"changelog.html":{}}}],["12f25ae",{"_index":1190,"title":{},"body":{"changelog.html":{}}}],["13.7.7",{"_index":1208,"title":{},"body":{"changelog.html":{}}}],["13.7.8",{"_index":1209,"title":{},"body":{"changelog.html":{}}}],["13.7.9",{"_index":1218,"title":{},"body":{"changelog.html":{}}}],["1385863",{"_index":1237,"title":{},"body":{"changelog.html":{}}}],["150",{"_index":536,"title":{},"body":{"controllers/HealthController.html":{}}}],["15c8bb6",{"_index":1176,"title":{},"body":{"changelog.html":{}}}],["16.6.0",{"_index":1279,"title":{},"body":{"dependencies.html":{}}}],["17.6.0",{"_index":1223,"title":{},"body":{"changelog.html":{}}}],["17.6.1",{"_index":1224,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["1746310",{"_index":1202,"title":{},"body":{"changelog.html":{}}}],["1fbfb15",{"_index":1220,"title":{},"body":{"changelog.html":{}}}],["2",{"_index":488,"title":{"interfaces/FindAllArgs-2.html":{},"interfaces/FindOneArgs-2.html":{}},"body":{"classes/TasksGateway.html":{},"entities/User.html":{}}}],["2.2.0",{"_index":1269,"title":{},"body":{"dependencies.html":{}}}],["200",{"_index":870,"title":{},"body":{"controllers/TasksController.html":{},"controllers/UsersController.html":{}}}],["2022",{"_index":1053,"title":{},"body":{"changelog.html":{}}}],["21fa4d5",{"_index":1181,"title":{},"body":{"changelog.html":{}}}],["222a6bd",{"_index":1150,"title":{},"body":{"changelog.html":{}}}],["24",{"_index":166,"title":{},"body":{"controllers/AuthController.html":{},"entities/User.html":{}}}],["24h",{"_index":207,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{}}}],["28c50ef",{"_index":1212,"title":{},"body":{"changelog.html":{}}}],["29",{"_index":1055,"title":{},"body":{"changelog.html":{}}}],["29.0.2",{"_index":1204,"title":{},"body":{"changelog.html":{}}}],["29.0.3",{"_index":1205,"title":{},"body":{"changelog.html":{}}}],["29b1cc1",{"_index":1155,"title":{},"body":{"changelog.html":{}}}],["2be75ef",{"_index":1097,"title":{},"body":{"changelog.html":{}}}],["3",{"_index":1143,"title":{},"body":{"changelog.html":{}}}],["3.0.2",{"_index":1292,"title":{},"body":{"dependencies.html":{}}}],["30",{"_index":167,"title":{},"body":{"controllers/AuthController.html":{}}}],["32",{"_index":1354,"title":{},"body":{"overview.html":{}}}],["336a417",{"_index":1114,"title":{},"body":{"changelog.html":{}}}],["3850ca4",{"_index":1078,"title":{},"body":{"changelog.html":{}}}],["3]).pipe",{"_index":911,"title":{},"body":{"classes/TasksGateway.html":{}}}],["4.0.0",{"_index":1283,"title":{},"body":{"dependencies.html":{}}}],["4.3.1",{"_index":1287,"title":{},"body":{"dependencies.html":{}}}],["4.5.3",{"_index":1294,"title":{},"body":{"dependencies.html":{}}}],["42a292a",{"_index":1110,"title":{},"body":{"changelog.html":{}}}],["46e05fc",{"_index":1135,"title":{},"body":{"changelog.html":{}}}],["4780c9e",{"_index":1071,"title":{},"body":{"changelog.html":{}}}],["4ac7514",{"_index":1096,"title":{},"body":{"changelog.html":{}}}],["4b3ce51",{"_index":1099,"title":{},"body":{"changelog.html":{}}}],["4c52515",{"_index":1221,"title":{},"body":{"changelog.html":{}}}],["5.0.1",{"_index":1275,"title":{},"body":{"dependencies.html":{}}}],["5.1.2",{"_index":1263,"title":{},"body":{"dependencies.html":{}}}],["5.4.2",{"_index":1262,"title":{},"body":{"dependencies.html":{}}}],["50",{"_index":1258,"title":{},"body":{"coverage.html":{}}}],["5b43abd",{"_index":1070,"title":{},"body":{"changelog.html":{}}}],["5bb4d01",{"_index":1082,"title":{},"body":{"changelog.html":{}}}],["5c15f52",{"_index":1219,"title":{},"body":{"changelog.html":{}}}],["5ca205b",{"_index":1171,"title":{},"body":{"changelog.html":{}}}],["6",{"_index":1353,"title":{},"body":{"overview.html":{}}}],["6.1.2",{"_index":1271,"title":{},"body":{"dependencies.html":{}}}],["60",{"_index":165,"title":{},"body":{"controllers/AuthController.html":{}}}],["6041307",{"_index":1075,"title":{},"body":{"changelog.html":{}}}],["697fdec",{"_index":1192,"title":{},"body":{"changelog.html":{}}}],["6a95924",{"_index":1144,"title":{},"body":{"changelog.html":{}}}],["6d3da2c",{"_index":1141,"title":{},"body":{"changelog.html":{}}}],["7",{"_index":1352,"title":{},"body":{"overview.html":{}}}],["7.2.0",{"_index":1274,"title":{},"body":{"dependencies.html":{}}}],["7.5.6",{"_index":1293,"title":{},"body":{"dependencies.html":{}}}],["7207845",{"_index":1161,"title":{},"body":{"changelog.html":{}}}],["736efc2",{"_index":1173,"title":{},"body":{"changelog.html":{}}}],["7b3fad9",{"_index":1094,"title":{},"body":{"changelog.html":{}}}],["7da214f",{"_index":1146,"title":{},"body":{"changelog.html":{}}}],["7e70996",{"_index":1194,"title":{},"body":{"changelog.html":{}}}],["8",{"_index":1351,"title":{},"body":{"overview.html":{}}}],["8.3.6",{"_index":1281,"title":{},"body":{"dependencies.html":{}}}],["8.8.0",{"_index":1286,"title":{},"body":{"dependencies.html":{}}}],["84309a7",{"_index":1211,"title":{},"body":{"changelog.html":{}}}],["84b661f",{"_index":1127,"title":{},"body":{"changelog.html":{}}}],["8a1e98b",{"_index":1119,"title":{},"body":{"changelog.html":{}}}],["8a9e6cc",{"_index":1178,"title":{},"body":{"changelog.html":{}}}],["8f05193",{"_index":1215,"title":{},"body":{"changelog.html":{}}}],["9.0.0",{"_index":1270,"title":{},"body":{"dependencies.html":{}}}],["9.1.1",{"_index":1197,"title":{},"body":{"changelog.html":{}}}],["9.1.2",{"_index":1198,"title":{},"body":{"changelog.html":{}}}],["9.1.4",{"_index":1272,"title":{},"body":{"dependencies.html":{}}}],["9.1.5",{"_index":1273,"title":{},"body":{"dependencies.html":{}}}],["9.1.6",{"_index":1200,"title":{},"body":{"changelog.html":{}}}],["9.2.0",{"_index":1201,"title":{},"body":{"changelog.html":{}}}],["9.2.1",{"_index":1268,"title":{},"body":{"dependencies.html":{}}}],["92b43eb",{"_index":1148,"title":{},"body":{"changelog.html":{}}}],["931da67",{"_index":1077,"title":{},"body":{"changelog.html":{}}}],["97f6f20",{"_index":1104,"title":{},"body":{"changelog.html":{}}}],["9c159b1",{"_index":1229,"title":{},"body":{"changelog.html":{}}}],["a268176",{"_index":1186,"title":{},"body":{"changelog.html":{}}}],["a7777f9",{"_index":1188,"title":{},"body":{"changelog.html":{}}}],["aabaa96",{"_index":1091,"title":{},"body":{"changelog.html":{}}}],["aac9a3e",{"_index":1214,"title":{},"body":{"changelog.html":{}}}],["abstract",{"_index":330,"title":{},"body":{"entities/BaseEntity.html":{}}}],["access",{"_index":85,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"changelog.html":{}}}],["accesstoken",{"_index":160,"title":{},"body":{"controllers/AuthController.html":{},"classes/LoginUserResponse.html":{},"classes/RefreshTokenResponse.html":{},"classes/RegisterUserResponse.html":{}}}],["action",{"_index":384,"title":{},"body":{"injectables/ChoresService.html":{}}}],["adapter",{"_index":759,"title":{},"body":{"classes/RedisIoAdapter.html":{},"dependencies.html":{}}}],["adapterconstructor",{"_index":743,"title":{},"body":{"classes/RedisIoAdapter.html":{}}}],["adce1c9",{"_index":1165,"title":{},"body":{"changelog.html":{}}}],["adcec01",{"_index":1153,"title":{},"body":{"changelog.html":{}}}],["add",{"_index":675,"title":{},"body":{"classes/Migration20220926031634.html":{},"classes/Migration20220926213133.html":{},"classes/Migration20220926214650.html":{},"classes/Migration20220926222224.html":{},"classes/Migration20220926231541.html":{},"classes/Migration20221013014335.html":{},"classes/Migration20221023001353.html":{},"classes/Migration20221031000536.html":{},"classes/Migration20221129042732.html":{},"changelog.html":{}}}],["adds",{"_index":385,"title":{},"body":{"injectables/ChoresService.html":{}}}],["allow",{"_index":266,"title":{},"body":{"injectables/AuthService.html":{}}}],["alphanumeric",{"_index":971,"title":{},"body":{"entities/User.html":{}}}],["alter",{"_index":674,"title":{},"body":{"classes/Migration20220926031634.html":{},"classes/Migration20220926213133.html":{},"classes/Migration20220926214650.html":{},"classes/Migration20220926222224.html":{},"classes/Migration20220926231541.html":{},"classes/Migration20221013014335.html":{},"classes/Migration20221031000536.html":{}}}],["amazing",{"_index":1329,"title":{},"body":{"index.html":{}}}],["api",{"_index":1072,"title":{},"body":{"changelog.html":{}}}],["api/auth",{"_index":1112,"title":{},"body":{"changelog.html":{}}}],["api/tasks",{"_index":1059,"title":{},"body":{"changelog.html":{}}}],["apibearerauth",{"_index":811,"title":{},"body":{"controllers/RoomsController.html":{},"controllers/TasksController.html":{},"controllers/UsersController.html":{}}}],["apibody",{"_index":133,"title":{},"body":{"controllers/AuthController.html":{}}}],["apicreatedresponse",{"_index":134,"title":{},"body":{"controllers/AuthController.html":{}}}],["apihideproperty",{"_index":976,"title":{},"body":{"entities/User.html":{}}}],["apiokresponse",{"_index":135,"title":{},"body":{"controllers/AuthController.html":{},"controllers/UsersController.html":{}}}],["apioperation",{"_index":875,"title":{},"body":{"controllers/TasksController.html":{}}}],["apiproperty",{"_index":398,"title":{},"body":{"classes/CreateListDto.html":{},"classes/CreateRoomDto.html":{},"classes/CreateTaskDto.html":{},"classes/LoginUserBody.html":{},"classes/LoginUserResponse.html":{},"classes/RefreshTokenBody.html":{},"classes/RefreshTokenResponse.html":{},"classes/RegisterUserBody.html":{},"classes/RegisterUserResponse.html":{},"entities/Room.html":{},"entities/Task.html":{},"classes/UpdateProfileDto.html":{},"entities/User.html":{},"classes/UserDto.html":{}}}],["apiproperty()@isstring",{"_index":396,"title":{},"body":{"classes/CreateListDto.html":{},"classes/CreateRoomDto.html":{},"classes/CreateTaskDto.html":{},"classes/RegisterUserBody.html":{}}}],["apiproperty()@isstring()@isoptional",{"_index":394,"title":{},"body":{"classes/CreateListDto.html":{},"classes/CreateTaskDto.html":{}}}],["apiresponse",{"_index":876,"title":{},"body":{"controllers/TasksController.html":{},"controllers/UsersController.html":{}}}],["apitags",{"_index":136,"title":{},"body":{"controllers/AuthController.html":{},"controllers/RoomsController.html":{},"controllers/TasksController.html":{},"controllers/UsersController.html":{}}}],["apitags('auth",{"_index":154,"title":{},"body":{"controllers/AuthController.html":{}}}],["apitags('rooms",{"_index":813,"title":{},"body":{"controllers/RoomsController.html":{}}}],["apitags('tasks",{"_index":878,"title":{},"body":{"controllers/TasksController.html":{}}}],["apitags('users",{"_index":1023,"title":{},"body":{"controllers/UsersController.html":{}}}],["app",{"_index":1310,"title":{},"body":{"index.html":{}}}],["applications",{"_index":1305,"title":{},"body":{"index.html":{}}}],["appmodule",{"_index":1,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["aren't",{"_index":613,"title":{},"body":{"controllers/ListsController.html":{},"controllers/TasksController.html":{}}}],["args",{"_index":490,"title":{},"body":{"interfaces/FindAllArgs-2.html":{},"interfaces/FindOneArgs-2.html":{},"injectables/UsersService.html":{}}}],["around",{"_index":91,"title":{},"body":{"modules/AppModule.html":{}}}],["article",{"_index":78,"title":{},"body":{"modules/AppModule.html":{}}}],["async",{"_index":35,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/DatabaseSeeder.html":{},"interfaces/FindAllArgs.html":{},"interfaces/FindAllArgs-1.html":{},"interfaces/FindAllArgs-2.html":{},"interfaces/FindOneArgs.html":{},"interfaces/FindOneArgs-1.html":{},"interfaces/FindOneArgs-2.html":{},"injectables/JwtStrategy.html":{},"controllers/ListsController.html":{},"injectables/ListsService.html":{},"injectables/LocalStrategy.html":{},"classes/Migration20220926031634.html":{},"classes/Migration20220926213133.html":{},"classes/Migration20220926214650.html":{},"classes/Migration20220926222224.html":{},"classes/Migration20220926231541.html":{},"classes/Migration20221013014335.html":{},"classes/Migration20221023001353.html":{},"classes/Migration20221031000536.html":{},"classes/Migration20221129042732.html":{},"classes/RedisIoAdapter.html":{},"injectables/RoomsService.html":{},"controllers/TasksController.html":{},"classes/TasksGateway.html":{},"injectables/TasksService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["attribute",{"_index":1061,"title":{},"body":{"changelog.html":{}}}],["auth",{"_index":75,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{}}}],["auth.controller",{"_index":196,"title":{},"body":{"modules/AuthModule.html":{}}}],["auth.guard",{"_index":152,"title":{},"body":{"controllers/AuthController.html":{},"controllers/ListsController.html":{},"controllers/RoomsController.html":{},"controllers/TasksController.html":{},"controllers/UsersController.html":{}}}],["auth.guard.ts",{"_index":545,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"injectables/LocalAuthGuard.html":{},"coverage.html":{}}}],["auth.service",{"_index":141,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/LocalStrategy.html":{}}}],["auth/auth.module",{"_index":48,"title":{},"body":{"modules/AppModule.html":{}}}],["auth/decorator/current",{"_index":810,"title":{},"body":{"controllers/RoomsController.html":{}}}],["auth/entities/refresh",{"_index":977,"title":{},"body":{"entities/User.html":{}}}],["auth/guards/jwt",{"_index":812,"title":{},"body":{"controllers/RoomsController.html":{}}}],["authcontroller",{"_index":97,"title":{"controllers/AuthController.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"coverage.html":{}}}],["authentication",{"_index":1066,"title":{},"body":{"changelog.html":{}}}],["authguard",{"_index":546,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"injectables/LocalAuthGuard.html":{}}}],["authguard('jwt",{"_index":547,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["authguard('local",{"_index":633,"title":{},"body":{"injectables/LocalAuthGuard.html":{}}}],["authmodule",{"_index":6,"title":{"modules/AuthModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules.html":{},"overview.html":{}}}],["author",{"_index":1337,"title":{},"body":{"index.html":{},"properties.html":{}}}],["author_id",{"_index":673,"title":{},"body":{"classes/Migration20220926031634.html":{},"classes/Migration20220926214650.html":{}}}],["authorid",{"_index":444,"title":{},"body":{"interfaces/FindAllArgs.html":{},"interfaces/FindAllArgs-1.html":{},"interfaces/FindOneArgs.html":{},"interfaces/FindOneArgs-1.html":{},"injectables/ListsService.html":{},"injectables/TasksService.html":{}}}],["authservice",{"_index":140,"title":{"injectables/AuthService.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/LocalStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["available",{"_index":1349,"title":{},"body":{"modules.html":{}}}],["await",{"_index":72,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/DatabaseSeeder.html":{},"interfaces/FindAllArgs.html":{},"interfaces/FindAllArgs-1.html":{},"interfaces/FindAllArgs-2.html":{},"interfaces/FindOneArgs.html":{},"interfaces/FindOneArgs-1.html":{},"interfaces/FindOneArgs-2.html":{},"injectables/JwtStrategy.html":{},"controllers/ListsController.html":{},"injectables/ListsService.html":{},"injectables/LocalStrategy.html":{},"classes/RedisIoAdapter.html":{},"injectables/RoomsService.html":{},"controllers/TasksController.html":{},"injectables/TasksService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["b0fe04a",{"_index":1183,"title":{},"body":{"changelog.html":{}}}],["b42d995",{"_index":1093,"title":{},"body":{"changelog.html":{}}}],["ba9e4ea",{"_index":1118,"title":{},"body":{"changelog.html":{}}}],["back",{"_index":273,"title":{},"body":{"injectables/AuthService.html":{}}}],["backers",{"_index":1330,"title":{},"body":{"index.html":{}}}],["base",{"_index":1095,"title":{},"body":{"changelog.html":{}}}],["baseentity",{"_index":319,"title":{"entities/BaseEntity.html":{}},"body":{"entities/BaseEntity.html":{},"entities/List.html":{},"entities/RefreshToken.html":{},"entities/Room.html":{},"entities/Task.html":{},"entities/User.html":{},"coverage.html":{}}}],["basic",{"_index":1073,"title":{},"body":{"changelog.html":{}}}],["bcrypt",{"_index":256,"title":{},"body":{"injectables/AuthService.html":{},"classes/DatabaseSeeder.html":{},"classes/UserFactory.html":{},"dependencies.html":{}}}],["bcrypt.compare(plaintextpassword",{"_index":282,"title":{},"body":{"injectables/AuthService.html":{}}}],["bcrypt.hash('p@ssw0rd",{"_index":428,"title":{},"body":{"classes/DatabaseSeeder.html":{}}}],["bcrypt.hash(password",{"_index":316,"title":{},"body":{"injectables/AuthService.html":{}}}],["be38bae",{"_index":1225,"title":{},"body":{"changelog.html":{}}}],["bedroom",{"_index":796,"title":{},"body":{"entities/Room.html":{}}}],["before",{"_index":80,"title":{},"body":{"modules/AppModule.html":{}}}],["belongs",{"_index":855,"title":{},"body":{"entities/Task.html":{}}}],["bf06bcb",{"_index":1151,"title":{},"body":{"changelog.html":{}}}],["body",{"_index":130,"title":{},"body":{"controllers/AuthController.html":{},"controllers/ChoresController.html":{},"controllers/ListsController.html":{},"classes/Migration20220926031634.html":{},"classes/Migration20220926213133.html":{},"controllers/RoomsController.html":{},"controllers/TasksController.html":{},"controllers/UsersController.html":{}}}],["boolean",{"_index":671,"title":{},"body":{"classes/Migration20220926031634.html":{},"classes/Migration20221031000536.html":{},"entities/Task.html":{}}}],["bootstrap",{"_index":1256,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["breaking",{"_index":1056,"title":{},"body":{"changelog.html":{}}}],["browse",{"_index":1347,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":1345,"title":{},"body":{"modules.html":{}}}],["bug",{"_index":1111,"title":{},"body":{"changelog.html":{}}}],["build",{"_index":1142,"title":{},"body":{"changelog.html":{}}}],["building",{"_index":1301,"title":{},"body":{"index.html":{}}}],["bump",{"_index":1147,"title":{},"body":{"changelog.html":{}}}],["cascade",{"_index":680,"title":{},"body":{"classes/Migration20220926031634.html":{},"classes/Migration20220926214650.html":{},"classes/Migration20220926222224.html":{},"classes/Migration20220926231541.html":{},"classes/Migration20221013014335.html":{},"classes/Migration20221023001353.html":{},"classes/Migration20221129042732.html":{},"entities/RefreshToken.html":{},"entities/User.html":{}}}],["cascade.remove",{"_index":978,"title":{},"body":{"entities/User.html":{}}}],["catch",{"_index":310,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/FindAllArgs.html":{},"interfaces/FindAllArgs-1.html":{},"interfaces/FindOneArgs.html":{},"interfaces/FindOneArgs-1.html":{},"controllers/ListsController.html":{},"injectables/ListsService.html":{},"injectables/RoomsService.html":{},"controllers/TasksController.html":{},"injectables/TasksService.html":{}}}],["cb60ee5",{"_index":1169,"title":{},"body":{"changelog.html":{}}}],["changelog",{"_index":1051,"title":{"changelog.html":{}},"body":{"changelog.html":{}}}],["changes",{"_index":1057,"title":{},"body":{"changelog.html":{}}}],["characters",{"_index":972,"title":{},"body":{"entities/User.html":{}}}],["chore",{"_index":332,"title":{"classes/Chore.html":{}},"body":{"classes/Chore.html":{},"injectables/ChoresService.html":{},"coverage.html":{}}}],["chore.dto",{"_index":362,"title":{},"body":{"controllers/ChoresController.html":{},"injectables/ChoresService.html":{},"classes/UpdateChoreDto.html":{}}}],["chore.dto.ts",{"_index":389,"title":{},"body":{"classes/CreateChoreDto.html":{},"classes/UpdateChoreDto.html":{},"coverage.html":{}}}],["chores",{"_index":337,"title":{},"body":{"controllers/ChoresController.html":{},"injectables/ChoresService.html":{},"changelog.html":{}}}],["chores.controller",{"_index":377,"title":{},"body":{"modules/ChoresModule.html":{}}}],["chores.service",{"_index":360,"title":{},"body":{"controllers/ChoresController.html":{},"modules/ChoresModule.html":{}}}],["chores/chores.module",{"_index":56,"title":{},"body":{"modules/AppModule.html":{}}}],["chorescontroller",{"_index":335,"title":{"controllers/ChoresController.html":{}},"body":{"controllers/ChoresController.html":{},"modules/ChoresModule.html":{},"coverage.html":{}}}],["choresmodule",{"_index":8,"title":{"modules/ChoresModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ChoresModule.html":{},"modules.html":{},"overview.html":{}}}],["choresservice",{"_index":359,"title":{"injectables/ChoresService.html":{}},"body":{"controllers/ChoresController.html":{},"modules/ChoresModule.html":{},"injectables/ChoresService.html":{},"coverage.html":{},"overview.html":{}}}],["ci",{"_index":1228,"title":{},"body":{"changelog.html":{}}}],["class",{"_index":67,"title":{"classes/Chore.html":{},"classes/CreateChoreDto.html":{},"classes/CreateListDto.html":{},"classes/CreateRoomDto.html":{},"classes/CreateTaskDto.html":{},"classes/DatabaseSeeder.html":{},"classes/ListFactory.html":{},"classes/LoginUserBody.html":{},"classes/LoginUserResponse.html":{},"classes/Migration20220926031634.html":{},"classes/Migration20220926213133.html":{},"classes/Migration20220926214650.html":{},"classes/Migration20220926222224.html":{},"classes/Migration20220926231541.html":{},"classes/Migration20221013014335.html":{},"classes/Migration20221023001353.html":{},"classes/Migration20221031000536.html":{},"classes/Migration20221129042732.html":{},"classes/RedisIoAdapter.html":{},"classes/RefreshTokenBody.html":{},"classes/RefreshTokenResponse.html":{},"classes/RegisterUserBody.html":{},"classes/RegisterUserResponse.html":{},"classes/TaskFactory.html":{},"classes/TasksGateway.html":{},"classes/UpdateChoreDto.html":{},"classes/UpdateListDto.html":{},"classes/UpdateProfileDto.html":{},"classes/UpdateRoomDto.html":{},"classes/UpdateTaskDto.html":{},"classes/UserDto.html":{},"classes/UserFactory.html":{}},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"entities/BaseEntity.html":{},"classes/Chore.html":{},"controllers/ChoresController.html":{},"modules/ChoresModule.html":{},"injectables/ChoresService.html":{},"classes/CreateChoreDto.html":{},"classes/CreateListDto.html":{},"classes/CreateRoomDto.html":{},"classes/CreateTaskDto.html":{},"classes/DatabaseSeeder.html":{},"interfaces/FindAllArgs.html":{},"interfaces/FindAllArgs-1.html":{},"interfaces/FindAllArgs-2.html":{},"interfaces/FindOneArgs.html":{},"interfaces/FindOneArgs-1.html":{},"interfaces/FindOneArgs-2.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"entities/List.html":{},"classes/ListFactory.html":{},"controllers/ListsController.html":{},"modules/ListsModule.html":{},"injectables/ListsService.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/LoginUserBody.html":{},"classes/LoginUserResponse.html":{},"classes/Migration20220926031634.html":{},"classes/Migration20220926213133.html":{},"classes/Migration20220926214650.html":{},"classes/Migration20220926222224.html":{},"classes/Migration20220926231541.html":{},"classes/Migration20221013014335.html":{},"classes/Migration20221023001353.html":{},"classes/Migration20221031000536.html":{},"classes/Migration20221129042732.html":{},"classes/RedisIoAdapter.html":{},"entities/RefreshToken.html":{},"classes/RefreshTokenBody.html":{},"classes/RefreshTokenResponse.html":{},"classes/RegisterUserBody.html":{},"classes/RegisterUserResponse.html":{},"entities/Room.html":{},"controllers/RoomsController.html":{},"modules/RoomsModule.html":{},"injectables/RoomsService.html":{},"entities/Task.html":{},"classes/TaskFactory.html":{},"controllers/TasksController.html":{},"classes/TasksGateway.html":{},"modules/TasksModule.html":{},"injectables/TasksService.html":{},"classes/UpdateChoreDto.html":{},"classes/UpdateListDto.html":{},"classes/UpdateProfileDto.html":{},"classes/UpdateRoomDto.html":{},"classes/UpdateTaskDto.html":{},"entities/User.html":{},"classes/UserDto.html":{},"classes/UserFactory.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{}}}],["classes",{"_index":333,"title":{},"body":{"classes/Chore.html":{},"classes/CreateChoreDto.html":{},"classes/CreateListDto.html":{},"classes/CreateRoomDto.html":{},"classes/CreateTaskDto.html":{},"classes/DatabaseSeeder.html":{},"classes/ListFactory.html":{},"classes/LoginUserBody.html":{},"classes/LoginUserResponse.html":{},"classes/Migration20220926031634.html":{},"classes/Migration20220926213133.html":{},"classes/Migration20220926214650.html":{},"classes/Migration20220926222224.html":{},"classes/Migration20220926231541.html":{},"classes/Migration20221013014335.html":{},"classes/Migration20221023001353.html":{},"classes/Migration20221031000536.html":{},"classes/Migration20221129042732.html":{},"classes/RedisIoAdapter.html":{},"classes/RefreshTokenBody.html":{},"classes/RefreshTokenResponse.html":{},"classes/RegisterUserBody.html":{},"classes/RegisterUserResponse.html":{},"classes/TaskFactory.html":{},"classes/TasksGateway.html":{},"classes/UpdateChoreDto.html":{},"classes/UpdateListDto.html":{},"classes/UpdateProfileDto.html":{},"classes/UpdateRoomDto.html":{},"classes/UpdateTaskDto.html":{},"classes/UserDto.html":{},"classes/UserFactory.html":{},"overview.html":{}}}],["clean",{"_index":857,"title":{},"body":{"entities/Task.html":{}}}],["cluster_appmodule",{"_index":4,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":5,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_authmodule",{"_index":185,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_imports",{"_index":186,"title":{},"body":{"modules/AuthModule.html":{}}}],["cluster_authmodule_providers",{"_index":187,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_choresmodule",{"_index":374,"title":{},"body":{"modules/ChoresModule.html":{},"overview.html":{}}}],["cluster_choresmodule_providers",{"_index":375,"title":{},"body":{"modules/ChoresModule.html":{},"overview.html":{}}}],["cluster_listsmodule",{"_index":616,"title":{},"body":{"modules/ListsModule.html":{},"overview.html":{}}}],["cluster_listsmodule_exports",{"_index":618,"title":{},"body":{"modules/ListsModule.html":{},"overview.html":{}}}],["cluster_listsmodule_providers",{"_index":617,"title":{},"body":{"modules/ListsModule.html":{},"overview.html":{}}}],["cluster_roomsmodule",{"_index":820,"title":{},"body":{"modules/RoomsModule.html":{},"overview.html":{}}}],["cluster_roomsmodule_exports",{"_index":821,"title":{},"body":{"modules/RoomsModule.html":{},"overview.html":{}}}],["cluster_roomsmodule_providers",{"_index":822,"title":{},"body":{"modules/RoomsModule.html":{},"overview.html":{}}}],["cluster_tasksmodule",{"_index":917,"title":{},"body":{"modules/TasksModule.html":{},"overview.html":{}}}],["cluster_tasksmodule_exports",{"_index":918,"title":{},"body":{"modules/TasksModule.html":{},"overview.html":{}}}],["cluster_tasksmodule_providers",{"_index":919,"title":{},"body":{"modules/TasksModule.html":{},"overview.html":{}}}],["cluster_usersmodule",{"_index":1035,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["cluster_usersmodule_exports",{"_index":1037,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["cluster_usersmodule_providers",{"_index":1036,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["collection",{"_index":974,"title":{},"body":{"entities/User.html":{},"changelog.html":{}}}],["collection(this",{"_index":958,"title":{},"body":{"entities/User.html":{}}}],["column",{"_index":689,"title":{},"body":{"classes/Migration20220926213133.html":{},"classes/Migration20221013014335.html":{},"classes/Migration20221031000536.html":{}}}],["common/entities/base",{"_index":572,"title":{},"body":{"entities/List.html":{},"entities/RefreshToken.html":{},"entities/Room.html":{},"entities/Task.html":{},"entities/User.html":{}}}],["complete",{"_index":733,"title":{},"body":{"classes/Migration20221031000536.html":{},"entities/Task.html":{}}}],["completed",{"_index":1060,"title":{},"body":{"changelog.html":{}}}],["config",{"_index":1236,"title":{},"body":{"changelog.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["config/configuration",{"_index":50,"title":{},"body":{"modules/AppModule.html":{}}}],["configmodule",{"_index":42,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{}}}],["configmodule.forroot",{"_index":59,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice",{"_index":191,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{}}}],["configservice.get('auth.jwtkey",{"_index":204,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{}}}],["configuration",{"_index":49,"title":{},"body":{"modules/AppModule.html":{},"changelog.html":{}}}],["configure",{"_index":23,"title":{},"body":{"modules/AppModule.html":{}}}],["configure(consumer",{"_index":24,"title":{},"body":{"modules/AppModule.html":{}}}],["configureation",{"_index":1180,"title":{},"body":{"changelog.html":{}}}],["connecttoredis",{"_index":744,"title":{},"body":{"classes/RedisIoAdapter.html":{}}}],["const",{"_index":159,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/DatabaseSeeder.html":{},"interfaces/FindAllArgs.html":{},"interfaces/FindAllArgs-1.html":{},"interfaces/FindAllArgs-2.html":{},"interfaces/FindOneArgs.html":{},"interfaces/FindOneArgs-1.html":{},"interfaces/FindOneArgs-2.html":{},"injectables/JwtStrategy.html":{},"injectables/ListsService.html":{},"injectables/LocalStrategy.html":{},"classes/RedisIoAdapter.html":{},"injectables/RoomsService.html":{},"injectables/TasksService.html":{},"classes/UserFactory.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["constraint",{"_index":676,"title":{},"body":{"classes/Migration20220926031634.html":{},"classes/Migration20220926213133.html":{},"classes/Migration20220926214650.html":{},"classes/Migration20220926222224.html":{},"classes/Migration20220926231541.html":{},"classes/Migration20221013014335.html":{},"classes/Migration20221023001353.html":{},"classes/Migration20221129042732.html":{}}}],["constructor",{"_index":222,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/FindAllArgs.html":{},"interfaces/FindAllArgs-1.html":{},"interfaces/FindAllArgs-2.html":{},"interfaces/FindOneArgs.html":{},"interfaces/FindOneArgs-1.html":{},"interfaces/FindOneArgs-2.html":{},"controllers/HealthController.html":{},"injectables/JwtStrategy.html":{},"injectables/ListsService.html":{},"injectables/LocalStrategy.html":{},"injectables/RoomsService.html":{},"injectables/TasksService.html":{},"classes/UserDto.html":{},"injectables/UsersService.html":{}}}],["constructor(authservice",{"_index":635,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["constructor(configservice",{"_index":550,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["constructor(listsrepository",{"_index":624,"title":{},"body":{"injectables/ListsService.html":{}}}],["constructor(partial",{"_index":980,"title":{},"body":{"classes/UserDto.html":{}}}],["constructor(private",{"_index":69,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"controllers/ChoresController.html":{},"controllers/ListsController.html":{},"injectables/LocalStrategy.html":{},"controllers/RoomsController.html":{},"controllers/TasksController.html":{},"controllers/UsersController.html":{}}}],["constructor(roomsrepository",{"_index":828,"title":{},"body":{"injectables/RoomsService.html":{}}}],["constructor(tasksrepository",{"_index":924,"title":{},"body":{"injectables/TasksService.html":{}}}],["constructor(usersrepository",{"_index":1041,"title":{},"body":{"injectables/UsersService.html":{}}}],["constructor(usersservice",{"_index":223,"title":{},"body":{"injectables/AuthService.html":{}}}],["consumer",{"_index":32,"title":{},"body":{"modules/AppModule.html":{}}}],["consumer.apply(mikroormmiddleware).forroutes",{"_index":93,"title":{},"body":{"modules/AppModule.html":{}}}],["containters",{"_index":1231,"title":{},"body":{"changelog.html":{}}}],["context",{"_index":82,"title":{},"body":{"modules/AppModule.html":{}}}],["contextual",{"_index":86,"title":{},"body":{"modules/AppModule.html":{}}}],["controller",{"_index":96,"title":{"controllers/AuthController.html":{},"controllers/ChoresController.html":{},"controllers/HealthController.html":{},"controllers/ListsController.html":{},"controllers/RoomsController.html":{},"controllers/TasksController.html":{},"controllers/UsersController.html":{}},"body":{"controllers/AuthController.html":{},"controllers/ChoresController.html":{},"controllers/HealthController.html":{},"controllers/ListsController.html":{},"controllers/RoomsController.html":{},"controllers/TasksController.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["controller('auth",{"_index":153,"title":{},"body":{"controllers/AuthController.html":{}}}],["controller('chores",{"_index":364,"title":{},"body":{"controllers/ChoresController.html":{}}}],["controller('health",{"_index":528,"title":{},"body":{"controllers/HealthController.html":{}}}],["controller('lists",{"_index":604,"title":{},"body":{"controllers/ListsController.html":{}}}],["controller('rooms",{"_index":814,"title":{},"body":{"controllers/RoomsController.html":{}}}],["controller('tasks",{"_index":879,"title":{},"body":{"controllers/TasksController.html":{}}}],["controller('users",{"_index":1022,"title":{},"body":{"controllers/UsersController.html":{}}}],["controllers",{"_index":64,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"controllers/ChoresController.html":{},"modules/ChoresModule.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"controllers/ListsController.html":{},"modules/ListsModule.html":{},"controllers/RoomsController.html":{},"modules/RoomsModule.html":{},"controllers/TasksController.html":{},"modules/TasksModule.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["cors",{"_index":907,"title":{},"body":{"classes/TasksGateway.html":{}}}],["coverage",{"_index":1240,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["create",{"_index":338,"title":{},"body":{"controllers/ChoresController.html":{},"injectables/ChoresService.html":{},"controllers/ListsController.html":{},"injectables/ListsService.html":{},"classes/Migration20220926031634.html":{},"classes/Migration20220926214650.html":{},"classes/Migration20220926231541.html":{},"controllers/RoomsController.html":{},"injectables/RoomsService.html":{},"controllers/TasksController.html":{},"injectables/TasksService.html":{},"classes/UpdateChoreDto.html":{},"classes/UpdateListDto.html":{},"classes/UpdateRoomDto.html":{},"classes/UpdateTaskDto.html":{},"injectables/UsersService.html":{},"changelog.html":{}}}],["create(@body",{"_index":365,"title":{},"body":{"controllers/ChoresController.html":{}}}],["create(@currentuser",{"_index":606,"title":{},"body":{"controllers/ListsController.html":{},"controllers/RoomsController.html":{},"controllers/TasksController.html":{}}}],["create(createchoredto",{"_index":342,"title":{},"body":{"controllers/ChoresController.html":{},"injectables/ChoresService.html":{}}}],["create(createdbyid",{"_index":455,"title":{},"body":{"interfaces/FindAllArgs.html":{},"interfaces/FindAllArgs-1.html":{},"interfaces/FindOneArgs.html":{},"interfaces/FindOneArgs-1.html":{},"injectables/ListsService.html":{},"injectables/RoomsService.html":{},"injectables/TasksService.html":{}}}],["create(createuserinput",{"_index":498,"title":{},"body":{"interfaces/FindAllArgs-2.html":{},"interfaces/FindOneArgs-2.html":{},"injectables/UsersService.html":{}}}],["create(user",{"_index":589,"title":{},"body":{"controllers/ListsController.html":{},"controllers/RoomsController.html":{},"controllers/TasksController.html":{}}}],["createaccesstokenfromrefreshtoken",{"_index":216,"title":{},"body":{"injectables/AuthService.html":{}}}],["createaccesstokenfromrefreshtoken(refresh",{"_index":229,"title":{},"body":{"injectables/AuthService.html":{}}}],["createadapter",{"_index":757,"title":{},"body":{"classes/RedisIoAdapter.html":{}}}],["createadapter(pubclient",{"_index":770,"title":{},"body":{"classes/RedisIoAdapter.html":{}}}],["createchoredto",{"_index":343,"title":{"classes/CreateChoreDto.html":{}},"body":{"controllers/ChoresController.html":{},"injectables/ChoresService.html":{},"classes/CreateChoreDto.html":{},"classes/UpdateChoreDto.html":{},"coverage.html":{}}}],["createclient",{"_index":760,"title":{},"body":{"classes/RedisIoAdapter.html":{}}}],["created",{"_index":961,"title":{},"body":{"entities/User.html":{}}}],["created_at",{"_index":661,"title":{},"body":{"classes/Migration20220926031634.html":{},"classes/Migration20220926214650.html":{},"classes/Migration20220926231541.html":{},"classes/Migration20221023001353.html":{},"classes/Migration20221129042732.html":{}}}],["created_by_id",{"_index":696,"title":{},"body":{"classes/Migration20220926214650.html":{},"classes/Migration20220926222224.html":{},"classes/Migration20220926231541.html":{},"classes/Migration20221023001353.html":{},"classes/Migration20221129042732.html":{}}}],["createdat",{"_index":323,"title":{},"body":{"entities/BaseEntity.html":{}}}],["createdby",{"_index":458,"title":{},"body":{"interfaces/FindAllArgs.html":{},"interfaces/FindAllArgs-1.html":{},"interfaces/FindOneArgs.html":{},"interfaces/FindOneArgs-1.html":{},"entities/List.html":{},"injectables/ListsService.html":{},"entities/Room.html":{},"injectables/RoomsService.html":{},"entities/Task.html":{},"injectables/TasksService.html":{}}}],["createdbyid",{"_index":459,"title":{},"body":{"interfaces/FindAllArgs.html":{},"interfaces/FindAllArgs-1.html":{},"interfaces/FindOneArgs.html":{},"interfaces/FindOneArgs-1.html":{},"injectables/ListsService.html":{},"injectables/RoomsService.html":{},"injectables/TasksService.html":{}}}],["createioserver",{"_index":745,"title":{},"body":{"classes/RedisIoAdapter.html":{}}}],["createioserver(port",{"_index":749,"title":{},"body":{"classes/RedisIoAdapter.html":{}}}],["createlistdto",{"_index":390,"title":{"classes/CreateListDto.html":{}},"body":{"classes/CreateListDto.html":{},"interfaces/FindAllArgs.html":{},"interfaces/FindOneArgs.html":{},"controllers/ListsController.html":{},"injectables/ListsService.html":{},"classes/UpdateListDto.html":{},"coverage.html":{}}}],["createlistinput",{"_index":456,"title":{},"body":{"interfaces/FindAllArgs.html":{},"interfaces/FindOneArgs.html":{},"injectables/ListsService.html":{}}}],["createparamdecorator((_",{"_index":1381,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createrefreshtoken",{"_index":217,"title":{},"body":{"injectables/AuthService.html":{}}}],["createrefreshtoken(user",{"_index":232,"title":{},"body":{"injectables/AuthService.html":{}}}],["createroomdto",{"_index":402,"title":{"classes/CreateRoomDto.html":{}},"body":{"classes/CreateRoomDto.html":{},"controllers/RoomsController.html":{},"injectables/RoomsService.html":{},"classes/UpdateRoomDto.html":{},"coverage.html":{}}}],["createtaskdto",{"_index":406,"title":{"classes/CreateTaskDto.html":{}},"body":{"classes/CreateTaskDto.html":{},"interfaces/FindAllArgs-1.html":{},"interfaces/FindOneArgs-1.html":{},"controllers/TasksController.html":{},"injectables/TasksService.html":{},"classes/UpdateTaskDto.html":{},"coverage.html":{}}}],["createtaskinput",{"_index":478,"title":{},"body":{"interfaces/FindAllArgs-1.html":{},"interfaces/FindOneArgs-1.html":{},"injectables/TasksService.html":{}}}],["createuserinput",{"_index":1044,"title":{},"body":{"injectables/UsersService.html":{}}}],["creator",{"_index":614,"title":{},"body":{"controllers/ListsController.html":{},"entities/Room.html":{},"entities/Task.html":{},"controllers/TasksController.html":{}}}],["ctx",{"_index":1382,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ctx.switchtohttp().getrequest",{"_index":1383,"title":{},"body":{"miscellaneous/variables.html":{}}}],["currentuser",{"_index":600,"title":{},"body":{"controllers/ListsController.html":{},"controllers/RoomsController.html":{},"controllers/TasksController.html":{},"controllers/UsersController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["data",{"_index":895,"title":{},"body":{"classes/TasksGateway.html":{}}}],["database",{"_index":1083,"title":{},"body":{"changelog.html":{}}}],["databasecheck",{"_index":517,"title":{},"body":{"controllers/HealthController.html":{}}}],["databaseseeder",{"_index":411,"title":{"classes/DatabaseSeeder.html":{}},"body":{"classes/DatabaseSeeder.html":{},"coverage.html":{}}}],["date",{"_index":288,"title":{},"body":{"injectables/AuthService.html":{},"entities/BaseEntity.html":{},"entities/RefreshToken.html":{}}}],["db",{"_index":529,"title":{},"body":{"controllers/HealthController.html":{}}}],["dbname",{"_index":1364,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ddc6f5c",{"_index":1122,"title":{},"body":{"changelog.html":{}}}],["debug",{"_index":1369,"title":{},"body":{"miscellaneous/variables.html":{}}}],["decorators",{"_index":105,"title":{},"body":{"controllers/AuthController.html":{},"entities/BaseEntity.html":{},"controllers/ChoresController.html":{},"classes/CreateListDto.html":{},"classes/CreateRoomDto.html":{},"classes/CreateTaskDto.html":{},"controllers/HealthController.html":{},"entities/List.html":{},"controllers/ListsController.html":{},"classes/LoginUserBody.html":{},"classes/LoginUserResponse.html":{},"entities/RefreshToken.html":{},"classes/RefreshTokenBody.html":{},"classes/RefreshTokenResponse.html":{},"classes/RegisterUserBody.html":{},"classes/RegisterUserResponse.html":{},"entities/Room.html":{},"controllers/RoomsController.html":{},"entities/Task.html":{},"controllers/TasksController.html":{},"classes/TasksGateway.html":{},"classes/UpdateProfileDto.html":{},"entities/User.html":{},"classes/UserDto.html":{},"controllers/UsersController.html":{}}}],["default",{"_index":251,"title":{},"body":{"injectables/AuthService.html":{},"entities/BaseEntity.html":{},"classes/ListFactory.html":{},"classes/Migration20221031000536.html":{},"entities/RefreshToken.html":{},"entities/Task.html":{},"classes/TaskFactory.html":{},"entities/User.html":{},"classes/UserFactory.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":26,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"entities/BaseEntity.html":{},"controllers/ChoresController.html":{},"injectables/ChoresService.html":{},"classes/CreateListDto.html":{},"classes/CreateRoomDto.html":{},"classes/CreateTaskDto.html":{},"classes/DatabaseSeeder.html":{},"controllers/HealthController.html":{},"injectables/JwtStrategy.html":{},"entities/List.html":{},"classes/ListFactory.html":{},"controllers/ListsController.html":{},"injectables/ListsService.html":{},"injectables/LocalStrategy.html":{},"classes/LoginUserBody.html":{},"classes/LoginUserResponse.html":{},"classes/Migration20220926031634.html":{},"classes/Migration20220926213133.html":{},"classes/Migration20220926214650.html":{},"classes/Migration20220926222224.html":{},"classes/Migration20220926231541.html":{},"classes/Migration20221013014335.html":{},"classes/Migration20221023001353.html":{},"classes/Migration20221031000536.html":{},"classes/Migration20221129042732.html":{},"classes/RedisIoAdapter.html":{},"entities/RefreshToken.html":{},"classes/RefreshTokenBody.html":{},"classes/RefreshTokenResponse.html":{},"classes/RegisterUserBody.html":{},"classes/RegisterUserResponse.html":{},"entities/Room.html":{},"controllers/RoomsController.html":{},"injectables/RoomsService.html":{},"entities/Task.html":{},"classes/TaskFactory.html":{},"controllers/TasksController.html":{},"classes/TasksGateway.html":{},"injectables/TasksService.html":{},"classes/UpdateProfileDto.html":{},"entities/User.html":{},"classes/UserDto.html":{},"classes/UserFactory.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["definition",{"_index":579,"title":{},"body":{"classes/ListFactory.html":{},"classes/TaskFactory.html":{},"classes/UserFactory.html":{}}}],["definition(faker",{"_index":581,"title":{},"body":{"classes/ListFactory.html":{},"classes/TaskFactory.html":{},"classes/UserFactory.html":{}}}],["delete",{"_index":358,"title":{},"body":{"controllers/ChoresController.html":{},"controllers/ListsController.html":{},"classes/Migration20220926031634.html":{},"classes/Migration20220926214650.html":{},"classes/Migration20220926222224.html":{},"controllers/RoomsController.html":{},"controllers/TasksController.html":{}}}],["delete(':id",{"_index":350,"title":{},"body":{"controllers/ChoresController.html":{},"controllers/ListsController.html":{},"controllers/RoomsController.html":{},"controllers/TasksController.html":{}}}],["dependencies",{"_index":3,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ChoresModule.html":{},"modules/ListsModule.html":{},"modules/RoomsModule.html":{},"modules/TasksModule.html":{},"modules/UsersModule.html":{},"changelog.html":{},"dependencies.html":{},"overview.html":{}}}],["dependency",{"_index":1156,"title":{},"body":{"changelog.html":{}}}],["deps",{"_index":1120,"title":{},"body":{"changelog.html":{}}}],["description",{"_index":157,"title":{},"body":{"controllers/AuthController.html":{},"classes/CreateListDto.html":{},"classes/CreateTaskDto.html":{},"interfaces/FindAllArgs-2.html":{},"entities/List.html":{},"classes/ListFactory.html":{},"classes/Migration20220926213133.html":{},"classes/Migration20220926214650.html":{},"classes/Migration20220926231541.html":{},"classes/Migration20221023001353.html":{},"entities/Room.html":{},"entities/Task.html":{},"classes/TaskFactory.html":{},"controllers/TasksController.html":{},"entities/User.html":{},"controllers/UsersController.html":{},"index.html":{},"properties.html":{}}}],["dev",{"_index":1195,"title":{},"body":{"changelog.html":{}}}],["development",{"_index":1230,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["directly",{"_index":90,"title":{},"body":{"modules/AppModule.html":{}}}],["disable",{"_index":991,"title":{},"body":{"classes/UserDto.html":{}}}],["dist/**/*.entity.js",{"_index":1366,"title":{},"body":{"miscellaneous/variables.html":{}}}],["dist/database/migrations",{"_index":1378,"title":{},"body":{"miscellaneous/variables.html":{}}}],["docker",{"_index":1086,"title":{},"body":{"changelog.html":{}}}],["document",{"_index":1137,"title":{},"body":{"changelog.html":{}}}],["documentation",{"_index":1098,"title":{},"body":{"changelog.html":{},"coverage.html":{}}}],["doesn't",{"_index":276,"title":{},"body":{"injectables/AuthService.html":{}}}],["down",{"_index":684,"title":{},"body":{"classes/Migration20220926213133.html":{},"classes/Migration20220926214650.html":{},"classes/Migration20220926222224.html":{},"classes/Migration20220926231541.html":{},"classes/Migration20221013014335.html":{},"classes/Migration20221023001353.html":{},"classes/Migration20221031000536.html":{},"classes/Migration20221129042732.html":{}}}],["drop",{"_index":691,"title":{},"body":{"classes/Migration20220926213133.html":{},"classes/Migration20220926222224.html":{},"classes/Migration20221013014335.html":{},"classes/Migration20221031000536.html":{}}}],["dto/create",{"_index":361,"title":{},"body":{"controllers/ChoresController.html":{},"injectables/ChoresService.html":{},"interfaces/FindAllArgs.html":{},"interfaces/FindAllArgs-1.html":{},"interfaces/FindOneArgs.html":{},"interfaces/FindOneArgs-1.html":{},"controllers/ListsController.html":{},"injectables/ListsService.html":{},"controllers/RoomsController.html":{},"injectables/RoomsService.html":{},"controllers/TasksController.html":{},"injectables/TasksService.html":{}}}],["dto/login",{"_index":143,"title":{},"body":{"controllers/AuthController.html":{}}}],["dto/refresh",{"_index":146,"title":{},"body":{"controllers/AuthController.html":{}}}],["dto/register",{"_index":149,"title":{},"body":{"controllers/AuthController.html":{}}}],["dto/update",{"_index":363,"title":{},"body":{"controllers/ChoresController.html":{},"injectables/ChoresService.html":{},"interfaces/FindAllArgs.html":{},"interfaces/FindAllArgs-1.html":{},"interfaces/FindAllArgs-2.html":{},"interfaces/FindOneArgs.html":{},"interfaces/FindOneArgs-1.html":{},"interfaces/FindOneArgs-2.html":{},"controllers/ListsController.html":{},"injectables/ListsService.html":{},"controllers/RoomsController.html":{},"injectables/RoomsService.html":{},"controllers/TasksController.html":{},"injectables/TasksService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["dto/user.dto",{"_index":1020,"title":{},"body":{"controllers/UsersController.html":{}}}],["e",{"_index":311,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/FindAllArgs.html":{},"interfaces/FindAllArgs-1.html":{},"interfaces/FindOneArgs.html":{},"interfaces/FindOneArgs-1.html":{},"controllers/ListsController.html":{},"injectables/ListsService.html":{},"injectables/RoomsService.html":{},"controllers/TasksController.html":{},"injectables/TasksService.html":{}}}],["e2e",{"_index":1318,"title":{},"body":{"index.html":{}}}],["e3e57a6",{"_index":1217,"title":{},"body":{"changelog.html":{}}}],["e79eb10",{"_index":1199,"title":{},"body":{"changelog.html":{}}}],["each((list",{"_index":437,"title":{},"body":{"classes/DatabaseSeeder.html":{}}}],["each((task",{"_index":430,"title":{},"body":{"classes/DatabaseSeeder.html":{}}}],["each((user",{"_index":433,"title":{},"body":{"classes/DatabaseSeeder.html":{}}}],["ec3cec7",{"_index":1206,"title":{},"body":{"changelog.html":{}}}],["ed62f1c",{"_index":1138,"title":{},"body":{"changelog.html":{}}}],["ee0b054",{"_index":1232,"title":{},"body":{"changelog.html":{}}}],["efficient",{"_index":1302,"title":{},"body":{"index.html":{}}}],["em",{"_index":87,"title":{},"body":{"modules/AppModule.html":{},"classes/DatabaseSeeder.html":{}}}],["encoded",{"_index":247,"title":{},"body":{"injectables/AuthService.html":{}}}],["entities",{"_index":320,"title":{},"body":{"entities/BaseEntity.html":{},"entities/List.html":{},"entities/RefreshToken.html":{},"entities/Room.html":{},"entities/Task.html":{},"entities/User.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["entities/refresh",{"_index":197,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{}}}],["entitiests",{"_index":1367,"title":{},"body":{"miscellaneous/variables.html":{}}}],["entity",{"_index":272,"title":{"entities/BaseEntity.html":{},"entities/List.html":{},"entities/RefreshToken.html":{},"entities/Room.html":{},"entities/Task.html":{},"entities/User.html":{}},"body":{"injectables/AuthService.html":{},"entities/BaseEntity.html":{},"entities/List.html":{},"entities/RefreshToken.html":{},"entities/Room.html":{},"entities/Task.html":{},"entities/User.html":{},"coverage.html":{}}}],["entity.entity",{"_index":573,"title":{},"body":{"entities/List.html":{},"entities/RefreshToken.html":{},"entities/Room.html":{},"entities/Task.html":{},"entities/User.html":{}}}],["entity.entity.ts",{"_index":322,"title":{},"body":{"entities/BaseEntity.html":{},"coverage.html":{}}}],["entity.entity.ts:12",{"_index":329,"title":{},"body":{"entities/BaseEntity.html":{}}}],["entity.entity.ts:6",{"_index":327,"title":{},"body":{"entities/BaseEntity.html":{}}}],["entity.entity.ts:9",{"_index":325,"title":{},"body":{"entities/BaseEntity.html":{}}}],["entitymanager",{"_index":417,"title":{},"body":{"classes/DatabaseSeeder.html":{}}}],["entityrepository",{"_index":227,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/FindAllArgs.html":{},"interfaces/FindAllArgs-1.html":{},"interfaces/FindAllArgs-2.html":{},"interfaces/FindOneArgs.html":{},"interfaces/FindOneArgs-1.html":{},"interfaces/FindOneArgs-2.html":{},"injectables/ListsService.html":{},"injectables/RoomsService.html":{},"injectables/TasksService.html":{},"injectables/UsersService.html":{}}}],["error('one",{"_index":507,"title":{},"body":{"interfaces/FindAllArgs-2.html":{},"interfaces/FindOneArgs-2.html":{},"injectables/UsersService.html":{}}}],["eslint",{"_index":990,"title":{},"body":{"classes/UserDto.html":{},"changelog.html":{}}}],["eslint/no",{"_index":995,"title":{},"body":{"classes/UserDto.html":{}}}],["evaluating",{"_index":1233,"title":{},"body":{"changelog.html":{}}}],["event",{"_index":913,"title":{},"body":{"classes/TasksGateway.html":{}}}],["events",{"_index":914,"title":{},"body":{"classes/TasksGateway.html":{}}}],["example",{"_index":798,"title":{},"body":{"entities/Room.html":{},"entities/Task.html":{},"entities/User.html":{}}}],["exclude",{"_index":987,"title":{},"body":{"classes/UserDto.html":{}}}],["exists",{"_index":699,"title":{},"body":{"classes/Migration20220926214650.html":{},"classes/Migration20220926231541.html":{},"classes/Migration20221023001353.html":{},"classes/Migration20221129042732.html":{}}}],["expiration",{"_index":287,"title":{},"body":{"injectables/AuthService.html":{}}}],["expiration.settime(expiration.gettime",{"_index":289,"title":{},"body":{"injectables/AuthService.html":{}}}],["expired",{"_index":313,"title":{},"body":{"injectables/AuthService.html":{}}}],["expires",{"_index":291,"title":{},"body":{"injectables/AuthService.html":{},"classes/Migration20220926031634.html":{},"entities/RefreshToken.html":{}}}],["expiresin",{"_index":206,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["export",{"_index":66,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"entities/BaseEntity.html":{},"classes/Chore.html":{},"controllers/ChoresController.html":{},"modules/ChoresModule.html":{},"injectables/ChoresService.html":{},"classes/CreateChoreDto.html":{},"classes/CreateListDto.html":{},"classes/CreateRoomDto.html":{},"classes/CreateTaskDto.html":{},"classes/DatabaseSeeder.html":{},"interfaces/FindAllArgs.html":{},"interfaces/FindAllArgs-1.html":{},"interfaces/FindAllArgs-2.html":{},"interfaces/FindOneArgs.html":{},"interfaces/FindOneArgs-1.html":{},"interfaces/FindOneArgs-2.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"entities/List.html":{},"classes/ListFactory.html":{},"controllers/ListsController.html":{},"modules/ListsModule.html":{},"injectables/ListsService.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/LoginUserBody.html":{},"classes/LoginUserResponse.html":{},"classes/Migration20220926031634.html":{},"classes/Migration20220926213133.html":{},"classes/Migration20220926214650.html":{},"classes/Migration20220926222224.html":{},"classes/Migration20220926231541.html":{},"classes/Migration20221013014335.html":{},"classes/Migration20221023001353.html":{},"classes/Migration20221031000536.html":{},"classes/Migration20221129042732.html":{},"classes/RedisIoAdapter.html":{},"entities/RefreshToken.html":{},"classes/RefreshTokenBody.html":{},"classes/RefreshTokenResponse.html":{},"classes/RegisterUserBody.html":{},"classes/RegisterUserResponse.html":{},"entities/Room.html":{},"controllers/RoomsController.html":{},"modules/RoomsModule.html":{},"injectables/RoomsService.html":{},"entities/Task.html":{},"classes/TaskFactory.html":{},"controllers/TasksController.html":{},"classes/TasksGateway.html":{},"modules/TasksModule.html":{},"injectables/TasksService.html":{},"classes/UpdateChoreDto.html":{},"classes/UpdateListDto.html":{},"classes/UpdateProfileDto.html":{},"classes/UpdateRoomDto.html":{},"classes/UpdateTaskDto.html":{},"entities/User.html":{},"classes/UserDto.html":{},"classes/UserFactory.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"changelog.html":{}}}],["exports",{"_index":620,"title":{},"body":{"modules/ListsModule.html":{},"modules/RoomsModule.html":{},"modules/TasksModule.html":{},"modules/UsersModule.html":{}}}],["expose",{"_index":988,"title":{},"body":{"classes/UserDto.html":{}}}],["expose()@apiproperty",{"_index":982,"title":{},"body":{"classes/UserDto.html":{}}}],["expr",{"_index":491,"title":{},"body":{"interfaces/FindAllArgs-2.html":{},"interfaces/FindOneArgs-2.html":{},"injectables/UsersService.html":{}}}],["expr('lower(username",{"_index":504,"title":{},"body":{"interfaces/FindAllArgs-2.html":{},"interfaces/FindOneArgs-2.html":{},"injectables/UsersService.html":{}}}],["express",{"_index":1216,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["extends",{"_index":413,"title":{},"body":{"classes/DatabaseSeeder.html":{},"interfaces/FindAllArgs.html":{},"interfaces/FindAllArgs-1.html":{},"interfaces/FindAllArgs-2.html":{},"interfaces/FindOneArgs.html":{},"interfaces/FindOneArgs-1.html":{},"interfaces/FindOneArgs-2.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"entities/List.html":{},"classes/ListFactory.html":{},"injectables/ListsService.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/Migration20220926031634.html":{},"classes/Migration20220926213133.html":{},"classes/Migration20220926214650.html":{},"classes/Migration20220926222224.html":{},"classes/Migration20220926231541.html":{},"classes/Migration20221013014335.html":{},"classes/Migration20221023001353.html":{},"classes/Migration20221031000536.html":{},"classes/Migration20221129042732.html":{},"classes/RedisIoAdapter.html":{},"entities/RefreshToken.html":{},"entities/Room.html":{},"entities/Task.html":{},"classes/TaskFactory.html":{},"injectables/TasksService.html":{},"classes/UpdateChoreDto.html":{},"classes/UpdateListDto.html":{},"classes/UpdateRoomDto.html":{},"classes/UpdateTaskDto.html":{},"entities/User.html":{},"classes/UserFactory.html":{},"injectables/UsersService.html":{}}}],["extractjwt",{"_index":554,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["extractjwt.fromauthheaderasbearertoken",{"_index":562,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["f03e59c",{"_index":1210,"title":{},"body":{"changelog.html":{}}}],["f22950e",{"_index":1080,"title":{},"body":{"changelog.html":{}}}],["f451620",{"_index":1184,"title":{},"body":{"changelog.html":{}}}],["f84ee9e",{"_index":1132,"title":{},"body":{"changelog.html":{}}}],["factory",{"_index":577,"title":{},"body":{"classes/ListFactory.html":{},"classes/TaskFactory.html":{},"classes/UserFactory.html":{}}}],["fail",{"_index":84,"title":{},"body":{"modules/AppModule.html":{}}}],["faker",{"_index":582,"title":{},"body":{"classes/ListFactory.html":{},"classes/TaskFactory.html":{},"classes/UserFactory.html":{}}}],["faker.hacker.phrase",{"_index":586,"title":{},"body":{"classes/ListFactory.html":{},"classes/TaskFactory.html":{}}}],["faker.internet.password",{"_index":1005,"title":{},"body":{"classes/UserFactory.html":{}}}],["faker.internet.username(firstname",{"_index":1004,"title":{},"body":{"classes/UserFactory.html":{}}}],["faker.name.firstname",{"_index":1002,"title":{},"body":{"classes/UserFactory.html":{}}}],["faker.name.fullname",{"_index":585,"title":{},"body":{"classes/ListFactory.html":{},"classes/TaskFactory.html":{}}}],["faker.name.lastname",{"_index":1003,"title":{},"body":{"classes/UserFactory.html":{}}}],["false",{"_index":564,"title":{},"body":{"injectables/JwtStrategy.html":{},"classes/Migration20221031000536.html":{},"entities/RefreshToken.html":{},"entities/Task.html":{},"miscellaneous/variables.html":{}}}],["false})@apiproperty",{"_index":847,"title":{},"body":{"entities/Task.html":{}}}],["features",{"_index":1069,"title":{},"body":{"changelog.html":{}}}],["file",{"_index":19,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"entities/BaseEntity.html":{},"classes/Chore.html":{},"controllers/ChoresController.html":{},"modules/ChoresModule.html":{},"injectables/ChoresService.html":{},"classes/CreateChoreDto.html":{},"classes/CreateListDto.html":{},"classes/CreateRoomDto.html":{},"classes/CreateTaskDto.html":{},"classes/DatabaseSeeder.html":{},"interfaces/FindAllArgs.html":{},"interfaces/FindAllArgs-1.html":{},"interfaces/FindAllArgs-2.html":{},"interfaces/FindOneArgs.html":{},"interfaces/FindOneArgs-1.html":{},"interfaces/FindOneArgs-2.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"entities/List.html":{},"classes/ListFactory.html":{},"controllers/ListsController.html":{},"modules/ListsModule.html":{},"injectables/ListsService.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/LoginUserBody.html":{},"classes/LoginUserResponse.html":{},"classes/Migration20220926031634.html":{},"classes/Migration20220926213133.html":{},"classes/Migration20220926214650.html":{},"classes/Migration20220926222224.html":{},"classes/Migration20220926231541.html":{},"classes/Migration20221013014335.html":{},"classes/Migration20221023001353.html":{},"classes/Migration20221031000536.html":{},"classes/Migration20221129042732.html":{},"classes/RedisIoAdapter.html":{},"entities/RefreshToken.html":{},"classes/RefreshTokenBody.html":{},"classes/RefreshTokenResponse.html":{},"classes/RegisterUserBody.html":{},"classes/RegisterUserResponse.html":{},"entities/Room.html":{},"controllers/RoomsController.html":{},"modules/RoomsModule.html":{},"injectables/RoomsService.html":{},"entities/Task.html":{},"classes/TaskFactory.html":{},"controllers/TasksController.html":{},"classes/TasksGateway.html":{},"modules/TasksModule.html":{},"injectables/TasksService.html":{},"classes/UpdateChoreDto.html":{},"classes/UpdateListDto.html":{},"classes/UpdateProfileDto.html":{},"classes/UpdateRoomDto.html":{},"classes/UpdateTaskDto.html":{},"entities/User.html":{},"classes/UserDto.html":{},"classes/UserFactory.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"changelog.html":{},"coverage.html":{}}}],["files",{"_index":1130,"title":{},"body":{"changelog.html":{}}}],["findall",{"_index":339,"title":{},"body":{"controllers/ChoresController.html":{},"injectables/ChoresService.html":{},"interfaces/FindAllArgs.html":{},"interfaces/FindAllArgs-1.html":{},"interfaces/FindAllArgs-2.html":{},"interfaces/FindOneArgs.html":{},"interfaces/FindOneArgs-1.html":{},"interfaces/FindOneArgs-2.html":{},"controllers/ListsController.html":{},"injectables/ListsService.html":{},"controllers/RoomsController.html":{},"injectables/RoomsService.html":{},"controllers/TasksController.html":{},"classes/TasksGateway.html":{},"injectables/TasksService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["findall(@messagebody",{"_index":909,"title":{},"body":{"classes/TasksGateway.html":{}}}],["findall(data",{"_index":892,"title":{},"body":{"classes/TasksGateway.html":{}}}],["findallargs",{"_index":441,"title":{"interfaces/FindAllArgs.html":{},"interfaces/FindAllArgs-1.html":{},"interfaces/FindAllArgs-2.html":{}},"body":{"interfaces/FindAllArgs.html":{},"interfaces/FindAllArgs-1.html":{},"interfaces/FindAllArgs-2.html":{},"interfaces/FindOneArgs.html":{},"interfaces/FindOneArgs-1.html":{},"interfaces/FindOneArgs-2.html":{},"injectables/ListsService.html":{},"injectables/TasksService.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["findone",{"_index":340,"title":{},"body":{"controllers/ChoresController.html":{},"injectables/ChoresService.html":{},"interfaces/FindAllArgs.html":{},"interfaces/FindAllArgs-1.html":{},"interfaces/FindAllArgs-2.html":{},"interfaces/FindOneArgs.html":{},"interfaces/FindOneArgs-1.html":{},"interfaces/FindOneArgs-2.html":{},"controllers/ListsController.html":{},"injectables/ListsService.html":{},"controllers/RoomsController.html":{},"injectables/RoomsService.html":{},"controllers/TasksController.html":{},"injectables/TasksService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["findone(@param('id",{"_index":368,"title":{},"body":{"controllers/ChoresController.html":{},"controllers/ListsController.html":{},"controllers/RoomsController.html":{},"controllers/TasksController.html":{}}}],["findone(@param('username",{"_index":1028,"title":{},"body":{"controllers/UsersController.html":{}}}],["findone(id",{"_index":346,"title":{},"body":{"controllers/ChoresController.html":{},"injectables/ChoresService.html":{},"controllers/ListsController.html":{},"controllers/RoomsController.html":{},"injectables/RoomsService.html":{},"controllers/TasksController.html":{}}}],["findone(undefined",{"_index":628,"title":{},"body":{"injectables/ListsService.html":{},"injectables/TasksService.html":{},"injectables/UsersService.html":{}}}],["findone(username",{"_index":1010,"title":{},"body":{"controllers/UsersController.html":{}}}],["findoneargs",{"_index":451,"title":{"interfaces/FindOneArgs.html":{},"interfaces/FindOneArgs-1.html":{},"interfaces/FindOneArgs-2.html":{}},"body":{"interfaces/FindAllArgs.html":{},"interfaces/FindAllArgs-1.html":{},"interfaces/FindAllArgs-2.html":{},"interfaces/FindOneArgs.html":{},"interfaces/FindOneArgs-1.html":{},"interfaces/FindOneArgs-2.html":{},"injectables/ListsService.html":{},"injectables/TasksService.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["fired",{"_index":79,"title":{},"body":{"modules/AppModule.html":{}}}],["first",{"_index":953,"title":{},"body":{"entities/User.html":{}}}],["first_name",{"_index":665,"title":{},"body":{"classes/Migration20220926031634.html":{}}}],["firstname",{"_index":940,"title":{},"body":{"classes/UpdateProfileDto.html":{},"entities/User.html":{},"classes/UserDto.html":{},"classes/UserFactory.html":{}}}],["fix",{"_index":1117,"title":{},"body":{"changelog.html":{}}}],["fixes",{"_index":1068,"title":{},"body":{"changelog.html":{}}}],["folders",{"_index":1134,"title":{},"body":{"changelog.html":{}}}],["foreign",{"_index":678,"title":{},"body":{"classes/Migration20220926031634.html":{},"classes/Migration20220926214650.html":{},"classes/Migration20220926222224.html":{},"classes/Migration20220926231541.html":{},"classes/Migration20221013014335.html":{},"classes/Migration20221023001353.html":{},"classes/Migration20221129042732.html":{}}}],["formatting",{"_index":1116,"title":{},"body":{"changelog.html":{}}}],["forwardref",{"_index":621,"title":{},"body":{"modules/ListsModule.html":{},"modules/RoomsModule.html":{},"modules/TasksModule.html":{},"modules/UsersModule.html":{}}}],["found",{"_index":306,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/FindAllArgs.html":{},"interfaces/FindAllArgs-1.html":{},"interfaces/FindOneArgs.html":{},"interfaces/FindOneArgs-1.html":{},"injectables/ListsService.html":{},"injectables/RoomsService.html":{},"controllers/TasksController.html":{},"injectables/TasksService.html":{},"controllers/UsersController.html":{}}}],["framework",{"_index":1300,"title":{},"body":{"index.html":{}}}],["fridge",{"_index":858,"title":{},"body":{"entities/Task.html":{}}}],["from([1",{"_index":910,"title":{},"body":{"classes/TasksGateway.html":{}}}],["function",{"_index":1255,"title":{},"body":{"coverage.html":{}}}],["functionality",{"_index":1074,"title":{},"body":{"changelog.html":{}}}],["functions",{"_index":1296,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["general",{"_index":1179,"title":{},"body":{"changelog.html":{}}}],["generateaccesstoken",{"_index":218,"title":{},"body":{"injectables/AuthService.html":{}}}],["generateaccesstoken(user",{"_index":237,"title":{},"body":{"injectables/AuthService.html":{}}}],["generaterefreshtoken",{"_index":219,"title":{},"body":{"injectables/AuthService.html":{}}}],["generaterefreshtoken(user",{"_index":239,"title":{},"body":{"injectables/AuthService.html":{}}}],["generates",{"_index":117,"title":{},"body":{"controllers/AuthController.html":{}}}],["get('/database",{"_index":531,"title":{},"body":{"controllers/HealthController.html":{}}}],["get('/database')@healthcheck",{"_index":519,"title":{},"body":{"controllers/HealthController.html":{}}}],["get('/memory",{"_index":534,"title":{},"body":{"controllers/HealthController.html":{}}}],["get('/memory')@healthcheck",{"_index":521,"title":{},"body":{"controllers/HealthController.html":{}}}],["get(':id",{"_index":347,"title":{},"body":{"controllers/ChoresController.html":{},"controllers/ListsController.html":{},"controllers/RoomsController.html":{},"controllers/TasksController.html":{}}}],["get(':id')@apiresponse({status",{"_index":869,"title":{},"body":{"controllers/TasksController.html":{}}}],["get(':username",{"_index":1027,"title":{},"body":{"controllers/UsersController.html":{}}}],["get(':username')@apiresponse({status",{"_index":1011,"title":{},"body":{"controllers/UsersController.html":{}}}],["get('me",{"_index":1033,"title":{},"body":{"controllers/UsersController.html":{}}}],["get('me')@apiokresponse({description",{"_index":1014,"title":{},"body":{"controllers/UsersController.html":{}}}],["getprofile",{"_index":1008,"title":{},"body":{"controllers/UsersController.html":{}}}],["getprofile(@currentuser",{"_index":1034,"title":{},"body":{"controllers/UsersController.html":{}}}],["getprofile(user",{"_index":1013,"title":{},"body":{"controllers/UsersController.html":{}}}],["getting",{"_index":1049,"title":{"changelog.html":{},"index.html":{}},"body":{}}],["graph",{"_index":1348,"title":{},"body":{"modules.html":{}}}],["graphql",{"_index":1278,"title":{},"body":{"dependencies.html":{}}}],["grow",{"_index":1325,"title":{},"body":{"index.html":{}}}],["guards/local",{"_index":151,"title":{},"body":{"controllers/AuthController.html":{}}}],["hashed",{"_index":277,"title":{},"body":{"injectables/AuthService.html":{},"classes/DatabaseSeeder.html":{}}}],["health",{"_index":516,"title":{},"body":{"controllers/HealthController.html":{}}}],["health.controller",{"_index":542,"title":{},"body":{"modules/HealthModule.html":{}}}],["health/health.module",{"_index":58,"title":{},"body":{"modules/AppModule.html":{}}}],["healthcheck",{"_index":523,"title":{},"body":{"controllers/HealthController.html":{}}}],["healthcheckservice",{"_index":524,"title":{},"body":{"controllers/HealthController.html":{}}}],["healthcontroller",{"_index":514,"title":{"controllers/HealthController.html":{}},"body":{"controllers/HealthController.html":{},"modules/HealthModule.html":{},"coverage.html":{}}}],["healthmodule",{"_index":9,"title":{"modules/HealthModule.html":{}},"body":{"modules/AppModule.html":{},"modules/HealthModule.html":{},"modules.html":{},"overview.html":{}}}],["here",{"_index":1334,"title":{},"body":{"index.html":{}}}],["hidden",{"_index":274,"title":{},"body":{"injectables/AuthService.html":{},"entities/User.html":{}}}],["highlighter",{"_index":1266,"title":{},"body":{"dependencies.html":{},"miscellaneous/variables.html":{}}}],["host",{"_index":1359,"title":{},"body":{"miscellaneous/variables.html":{}}}],["httpmodule",{"_index":539,"title":{},"body":{"modules/HealthModule.html":{}}}],["https://nestjs.com",{"_index":1341,"title":{},"body":{"index.html":{}}}],["id",{"_index":305,"title":{},"body":{"injectables/AuthService.html":{},"entities/BaseEntity.html":{},"controllers/ChoresController.html":{},"injectables/ChoresService.html":{},"interfaces/FindAllArgs.html":{},"interfaces/FindAllArgs-1.html":{},"interfaces/FindAllArgs-2.html":{},"interfaces/FindOneArgs.html":{},"interfaces/FindOneArgs-1.html":{},"interfaces/FindOneArgs-2.html":{},"injectables/JwtStrategy.html":{},"controllers/ListsController.html":{},"injectables/ListsService.html":{},"classes/Migration20220926031634.html":{},"classes/Migration20220926214650.html":{},"classes/Migration20220926222224.html":{},"classes/Migration20220926231541.html":{},"classes/Migration20221013014335.html":{},"classes/Migration20221023001353.html":{},"classes/Migration20221129042732.html":{},"controllers/RoomsController.html":{},"injectables/RoomsService.html":{},"controllers/TasksController.html":{},"injectables/TasksService.html":{},"classes/UserDto.html":{},"injectables/UsersService.html":{}}}],["identifier",{"_index":1241,"title":{},"body":{"coverage.html":{}}}],["identity",{"_index":889,"title":{},"body":{"classes/TasksGateway.html":{}}}],["identity(@messagebody",{"_index":916,"title":{},"body":{"classes/TasksGateway.html":{}}}],["identity(data",{"_index":897,"title":{},"body":{"classes/TasksGateway.html":{}}}],["ignoreexpiration",{"_index":563,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["implements",{"_index":68,"title":{},"body":{"modules/AppModule.html":{}}}],["import",{"_index":39,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"entities/BaseEntity.html":{},"controllers/ChoresController.html":{},"modules/ChoresModule.html":{},"injectables/ChoresService.html":{},"classes/CreateListDto.html":{},"classes/CreateRoomDto.html":{},"classes/CreateTaskDto.html":{},"classes/DatabaseSeeder.html":{},"interfaces/FindAllArgs.html":{},"interfaces/FindAllArgs-1.html":{},"interfaces/FindAllArgs-2.html":{},"interfaces/FindOneArgs.html":{},"interfaces/FindOneArgs-1.html":{},"interfaces/FindOneArgs-2.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"entities/List.html":{},"classes/ListFactory.html":{},"controllers/ListsController.html":{},"modules/ListsModule.html":{},"injectables/ListsService.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/LoginUserBody.html":{},"classes/LoginUserResponse.html":{},"classes/Migration20220926031634.html":{},"classes/Migration20220926213133.html":{},"classes/Migration20220926214650.html":{},"classes/Migration20220926222224.html":{},"classes/Migration20220926231541.html":{},"classes/Migration20221013014335.html":{},"classes/Migration20221023001353.html":{},"classes/Migration20221031000536.html":{},"classes/Migration20221129042732.html":{},"classes/RedisIoAdapter.html":{},"entities/RefreshToken.html":{},"classes/RefreshTokenBody.html":{},"classes/RefreshTokenResponse.html":{},"classes/RegisterUserBody.html":{},"classes/RegisterUserResponse.html":{},"entities/Room.html":{},"controllers/RoomsController.html":{},"modules/RoomsModule.html":{},"injectables/RoomsService.html":{},"entities/Task.html":{},"classes/TaskFactory.html":{},"controllers/TasksController.html":{},"classes/TasksGateway.html":{},"modules/TasksModule.html":{},"injectables/TasksService.html":{},"classes/UpdateChoreDto.html":{},"classes/UpdateListDto.html":{},"classes/UpdateProfileDto.html":{},"classes/UpdateRoomDto.html":{},"classes/UpdateTaskDto.html":{},"entities/User.html":{},"classes/UserDto.html":{},"classes/UserFactory.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["imports",{"_index":21,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/HealthModule.html":{},"modules/ListsModule.html":{},"modules/RoomsModule.html":{},"modules/TasksModule.html":{},"modules/UsersModule.html":{}}}],["improvements",{"_index":1101,"title":{},"body":{"changelog.html":{}}}],["index",{"_index":100,"title":{"index.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"entities/BaseEntity.html":{},"controllers/ChoresController.html":{},"injectables/ChoresService.html":{},"classes/CreateListDto.html":{},"classes/CreateRoomDto.html":{},"classes/CreateTaskDto.html":{},"classes/DatabaseSeeder.html":{},"interfaces/FindAllArgs.html":{},"interfaces/FindAllArgs-1.html":{},"interfaces/FindAllArgs-2.html":{},"interfaces/FindOneArgs.html":{},"interfaces/FindOneArgs-1.html":{},"interfaces/FindOneArgs-2.html":{},"controllers/HealthController.html":{},"injectables/JwtStrategy.html":{},"entities/List.html":{},"classes/ListFactory.html":{},"controllers/ListsController.html":{},"injectables/ListsService.html":{},"injectables/LocalStrategy.html":{},"classes/LoginUserBody.html":{},"classes/LoginUserResponse.html":{},"classes/Migration20220926031634.html":{},"classes/Migration20220926213133.html":{},"classes/Migration20220926214650.html":{},"classes/Migration20220926222224.html":{},"classes/Migration20220926231541.html":{},"classes/Migration20221013014335.html":{},"classes/Migration20221023001353.html":{},"classes/Migration20221031000536.html":{},"classes/Migration20221129042732.html":{},"classes/RedisIoAdapter.html":{},"entities/RefreshToken.html":{},"classes/RefreshTokenBody.html":{},"classes/RefreshTokenResponse.html":{},"classes/RegisterUserBody.html":{},"classes/RegisterUserResponse.html":{},"entities/Room.html":{},"controllers/RoomsController.html":{},"injectables/RoomsService.html":{},"entities/Task.html":{},"classes/TaskFactory.html":{},"controllers/TasksController.html":{},"classes/TasksGateway.html":{},"injectables/TasksService.html":{},"classes/UpdateProfileDto.html":{},"entities/User.html":{},"classes/UserDto.html":{},"classes/UserFactory.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":17,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"entities/BaseEntity.html":{},"classes/Chore.html":{},"controllers/ChoresController.html":{},"modules/ChoresModule.html":{},"injectables/ChoresService.html":{},"classes/CreateChoreDto.html":{},"classes/CreateListDto.html":{},"classes/CreateRoomDto.html":{},"classes/CreateTaskDto.html":{},"classes/DatabaseSeeder.html":{},"interfaces/FindAllArgs.html":{},"interfaces/FindAllArgs-1.html":{},"interfaces/FindAllArgs-2.html":{},"interfaces/FindOneArgs.html":{},"interfaces/FindOneArgs-1.html":{},"interfaces/FindOneArgs-2.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"entities/List.html":{},"classes/ListFactory.html":{},"controllers/ListsController.html":{},"modules/ListsModule.html":{},"injectables/ListsService.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/LoginUserBody.html":{},"classes/LoginUserResponse.html":{},"classes/Migration20220926031634.html":{},"classes/Migration20220926213133.html":{},"classes/Migration20220926214650.html":{},"classes/Migration20220926222224.html":{},"classes/Migration20220926231541.html":{},"classes/Migration20221013014335.html":{},"classes/Migration20221023001353.html":{},"classes/Migration20221031000536.html":{},"classes/Migration20221129042732.html":{},"classes/RedisIoAdapter.html":{},"entities/RefreshToken.html":{},"classes/RefreshTokenBody.html":{},"classes/RefreshTokenResponse.html":{},"classes/RegisterUserBody.html":{},"classes/RegisterUserResponse.html":{},"entities/Room.html":{},"controllers/RoomsController.html":{},"modules/RoomsModule.html":{},"injectables/RoomsService.html":{},"entities/Task.html":{},"classes/TaskFactory.html":{},"controllers/TasksController.html":{},"classes/TasksGateway.html":{},"modules/TasksModule.html":{},"injectables/TasksService.html":{},"classes/UpdateChoreDto.html":{},"classes/UpdateListDto.html":{},"classes/UpdateProfileDto.html":{},"classes/UpdateRoomDto.html":{},"classes/UpdateTaskDto.html":{},"entities/User.html":{},"classes/UserDto.html":{},"classes/UserFactory.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["infra",{"_index":1105,"title":{},"body":{"changelog.html":{}}}],["init",{"_index":1092,"title":{},"body":{"changelog.html":{}}}],["inject",{"_index":208,"title":{},"body":{"modules/AuthModule.html":{}}}],["injectable",{"_index":210,"title":{"injectables/AuthService.html":{},"injectables/ChoresService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/ListsService.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"injectables/RoomsService.html":{},"injectables/TasksService.html":{},"injectables/UsersService.html":{}},"body":{"injectables/AuthService.html":{},"injectables/ChoresService.html":{},"interfaces/FindAllArgs.html":{},"interfaces/FindAllArgs-1.html":{},"interfaces/FindAllArgs-2.html":{},"interfaces/FindOneArgs.html":{},"interfaces/FindOneArgs-1.html":{},"interfaces/FindOneArgs-2.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/ListsService.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"injectables/RoomsService.html":{},"injectables/TasksService.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["injectables",{"_index":211,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ChoresService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/ListsService.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"injectables/RoomsService.html":{},"injectables/TasksService.html":{},"injectables/UsersService.html":{},"overview.html":{}}}],["injectrepository",{"_index":254,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/FindAllArgs.html":{},"interfaces/FindAllArgs-1.html":{},"interfaces/FindAllArgs-2.html":{},"interfaces/FindOneArgs.html":{},"interfaces/FindOneArgs-1.html":{},"interfaces/FindOneArgs-2.html":{},"injectables/ListsService.html":{},"injectables/RoomsService.html":{},"injectables/TasksService.html":{},"injectables/UsersService.html":{}}}],["injectrepository(list",{"_index":453,"title":{},"body":{"interfaces/FindAllArgs.html":{},"interfaces/FindOneArgs.html":{},"injectables/ListsService.html":{}}}],["injectrepository(refreshtoken",{"_index":261,"title":{},"body":{"injectables/AuthService.html":{}}}],["injectrepository(room",{"_index":836,"title":{},"body":{"injectables/RoomsService.html":{}}}],["injectrepository(task",{"_index":476,"title":{},"body":{"interfaces/FindAllArgs-1.html":{},"interfaces/FindOneArgs-1.html":{},"injectables/TasksService.html":{}}}],["injectrepository(user",{"_index":496,"title":{},"body":{"interfaces/FindAllArgs-2.html":{},"interfaces/FindOneArgs-2.html":{},"injectables/UsersService.html":{}}}],["input",{"_index":267,"title":{},"body":{"injectables/AuthService.html":{}}}],["installation",{"_index":1307,"title":{},"body":{"index.html":{}}}],["installrunning",{"_index":1309,"title":{},"body":{"index.html":{}}}],["instanceof",{"_index":312,"title":{},"body":{"injectables/AuthService.html":{}}}],["int",{"_index":669,"title":{},"body":{"classes/Migration20220926031634.html":{},"classes/Migration20220926214650.html":{},"classes/Migration20220926231541.html":{},"classes/Migration20221023001353.html":{},"classes/Migration20221129042732.html":{}}}],["interface",{"_index":440,"title":{"interfaces/FindAllArgs.html":{},"interfaces/FindAllArgs-1.html":{},"interfaces/FindAllArgs-2.html":{},"interfaces/FindOneArgs.html":{},"interfaces/FindOneArgs-1.html":{},"interfaces/FindOneArgs-2.html":{}},"body":{"interfaces/FindAllArgs.html":{},"interfaces/FindAllArgs-1.html":{},"interfaces/FindAllArgs-2.html":{},"interfaces/FindOneArgs.html":{},"interfaces/FindOneArgs-1.html":{},"interfaces/FindOneArgs-2.html":{},"injectables/ListsService.html":{},"injectables/TasksService.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["interfaces",{"_index":442,"title":{},"body":{"interfaces/FindAllArgs.html":{},"interfaces/FindAllArgs-1.html":{},"interfaces/FindAllArgs-2.html":{},"interfaces/FindOneArgs.html":{},"interfaces/FindOneArgs-1.html":{},"interfaces/FindOneArgs-2.html":{},"overview.html":{}}}],["ioadapter",{"_index":742,"title":{},"body":{"classes/RedisIoAdapter.html":{}}}],["is_revoked",{"_index":670,"title":{},"body":{"classes/Migration20220926031634.html":{},"classes/Migration20221031000536.html":{},"entities/RefreshToken.html":{}}}],["is_revoked\"::boolean",{"_index":732,"title":{},"body":{"classes/Migration20221031000536.html":{}}}],["isglobal",{"_index":60,"title":{},"body":{"modules/AppModule.html":{}}}],["isoptional",{"_index":399,"title":{},"body":{"classes/CreateListDto.html":{},"classes/CreateTaskDto.html":{}}}],["isstring",{"_index":400,"title":{},"body":{"classes/CreateListDto.html":{},"classes/CreateRoomDto.html":{},"classes/CreateTaskDto.html":{},"classes/LoginUserBody.html":{},"classes/RegisterUserBody.html":{}}}],["isstring()@apiproperty",{"_index":643,"title":{},"body":{"classes/LoginUserBody.html":{}}}],["issue",{"_index":92,"title":{},"body":{"modules/AppModule.html":{}}}],["issues",{"_index":1113,"title":{},"body":{"changelog.html":{}}}],["item",{"_index":915,"title":{},"body":{"classes/TasksGateway.html":{}}}],["jest",{"_index":1163,"title":{},"body":{"changelog.html":{}}}],["john",{"_index":951,"title":{},"body":{"entities/User.html":{}}}],["joi",{"_index":1222,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["join",{"_index":1332,"title":{},"body":{"index.html":{}}}],["joincolumn",{"_index":781,"title":{},"body":{"entities/RefreshToken.html":{}}}],["json",{"_index":1139,"title":{},"body":{"changelog.html":{}}}],["jsonwebtoken",{"_index":258,"title":{},"body":{"injectables/AuthService.html":{}}}],["jwt",{"_index":557,"title":{},"body":{"injectables/JwtStrategy.html":{},"dependencies.html":{}}}],["jwtauthguard",{"_index":543,"title":{"injectables/JwtAuthGuard.html":{}},"body":{"injectables/JwtAuthGuard.html":{},"controllers/ListsController.html":{},"controllers/RoomsController.html":{},"controllers/TasksController.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["jwtfromrequest",{"_index":561,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["jwtid",{"_index":295,"title":{},"body":{"injectables/AuthService.html":{}}}],["jwtmodule",{"_index":192,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtmodule.registerasync",{"_index":201,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtservice",{"_index":225,"title":{},"body":{"injectables/AuthService.html":{}}}],["jwtstrategy",{"_index":188,"title":{"injectables/JwtStrategy.html":{}},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["k8s",{"_index":1107,"title":{},"body":{"changelog.html":{}}}],["kamil",{"_index":1338,"title":{},"body":{"index.html":{}}}],["key",{"_index":660,"title":{},"body":{"classes/Migration20220926031634.html":{},"classes/Migration20220926214650.html":{},"classes/Migration20220926222224.html":{},"classes/Migration20220926231541.html":{},"classes/Migration20221013014335.html":{},"classes/Migration20221023001353.html":{},"classes/Migration20221129042732.html":{}}}],["keycloak",{"_index":1087,"title":{},"body":{"changelog.html":{}}}],["last",{"_index":956,"title":{},"body":{"entities/User.html":{}}}],["last_name",{"_index":666,"title":{},"body":{"classes/Migration20220926031634.html":{}}}],["lastname",{"_index":941,"title":{},"body":{"classes/UpdateProfileDto.html":{},"entities/User.html":{},"classes/UserDto.html":{},"classes/UserFactory.html":{}}}],["latest",{"_index":1149,"title":{},"body":{"changelog.html":{}}}],["lazy",{"_index":275,"title":{},"body":{"injectables/AuthService.html":{}}}],["license",{"_index":1344,"title":{},"body":{"index.html":{},"properties.html":{}}}],["licensed",{"_index":1322,"title":{},"body":{"index.html":{}}}],["line",{"_index":993,"title":{},"body":{"classes/UserDto.html":{}}}],["list",{"_index":449,"title":{"entities/List.html":{}},"body":{"interfaces/FindAllArgs.html":{},"interfaces/FindOneArgs.html":{},"entities/List.html":{},"classes/ListFactory.html":{},"controllers/ListsController.html":{},"modules/ListsModule.html":{},"injectables/ListsService.html":{},"injectables/RoomsService.html":{},"entities/Task.html":{},"entities/User.html":{},"coverage.html":{}}}],["list.createdby",{"_index":438,"title":{},"body":{"classes/DatabaseSeeder.html":{},"entities/User.html":{}}}],["list.dto",{"_index":447,"title":{},"body":{"interfaces/FindAllArgs.html":{},"interfaces/FindOneArgs.html":{},"controllers/ListsController.html":{},"injectables/ListsService.html":{},"classes/UpdateListDto.html":{}}}],["list.dto.ts",{"_index":392,"title":{},"body":{"classes/CreateListDto.html":{},"classes/UpdateListDto.html":{},"coverage.html":{}}}],["list.dto.ts:12",{"_index":395,"title":{},"body":{"classes/CreateListDto.html":{}}}],["list.dto.ts:7",{"_index":397,"title":{},"body":{"classes/CreateListDto.html":{}}}],["list.entity",{"_index":450,"title":{},"body":{"interfaces/FindAllArgs.html":{},"interfaces/FindOneArgs.html":{},"modules/ListsModule.html":{},"injectables/ListsService.html":{}}}],["list_id",{"_index":717,"title":{},"body":{"classes/Migration20221013014335.html":{},"classes/Migration20221023001353.html":{}}}],["listfactory",{"_index":422,"title":{"classes/ListFactory.html":{}},"body":{"classes/DatabaseSeeder.html":{},"classes/ListFactory.html":{},"coverage.html":{}}}],["listfactory(em",{"_index":436,"title":{},"body":{"classes/DatabaseSeeder.html":{}}}],["lists",{"_index":506,"title":{},"body":{"interfaces/FindAllArgs-2.html":{},"interfaces/FindOneArgs-2.html":{},"entities/List.html":{},"controllers/ListsController.html":{},"classes/Migration20220926214650.html":{},"classes/Migration20220926222224.html":{},"classes/Migration20220926231541.html":{},"classes/Migration20221013014335.html":{},"classes/Migration20221023001353.html":{},"entities/User.html":{},"injectables/UsersService.html":{}}}],["lists.controller",{"_index":622,"title":{},"body":{"modules/ListsModule.html":{}}}],["lists.service",{"_index":603,"title":{},"body":{"controllers/ListsController.html":{},"modules/ListsModule.html":{}}}],["lists/list.entity",{"_index":584,"title":{},"body":{"classes/ListFactory.html":{},"entities/Task.html":{},"entities/User.html":{}}}],["lists/lists.module",{"_index":52,"title":{},"body":{"modules/AppModule.html":{},"modules/UsersModule.html":{}}}],["lists_created_by_id_foreign",{"_index":697,"title":{},"body":{"classes/Migration20220926214650.html":{},"classes/Migration20220926222224.html":{}}}],["listscontroller",{"_index":587,"title":{"controllers/ListsController.html":{}},"body":{"controllers/ListsController.html":{},"modules/ListsModule.html":{},"coverage.html":{}}}],["listsmodule",{"_index":10,"title":{"modules/ListsModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ListsModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["listsrepository",{"_index":454,"title":{},"body":{"interfaces/FindAllArgs.html":{},"interfaces/FindOneArgs.html":{},"injectables/ListsService.html":{}}}],["listsservice",{"_index":452,"title":{"injectables/ListsService.html":{}},"body":{"interfaces/FindAllArgs.html":{},"interfaces/FindOneArgs.html":{},"controllers/ListsController.html":{},"modules/ListsModule.html":{},"injectables/ListsService.html":{},"coverage.html":{},"overview.html":{}}}],["load",{"_index":62,"title":{},"body":{"modules/AppModule.html":{}}}],["loadstrategy",{"_index":1370,"title":{},"body":{"miscellaneous/variables.html":{}}}],["loadstrategy.joined",{"_index":1371,"title":{},"body":{"miscellaneous/variables.html":{}}}],["local",{"_index":639,"title":{},"body":{"injectables/LocalStrategy.html":{},"dependencies.html":{}}}],["localauthguard",{"_index":150,"title":{"injectables/LocalAuthGuard.html":{}},"body":{"controllers/AuthController.html":{},"injectables/LocalAuthGuard.html":{},"coverage.html":{}}}],["localstrategy",{"_index":189,"title":{"injectables/LocalStrategy.html":{}},"body":{"modules/AuthModule.html":{},"injectables/LocalStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["lock",{"_index":1129,"title":{},"body":{"changelog.html":{}}}],["logged",{"_index":109,"title":{},"body":{"controllers/AuthController.html":{},"controllers/UsersController.html":{}}}],["logger",{"_index":215,"title":{},"body":{"injectables/AuthService.html":{}}}],["logger(authservice.name",{"_index":253,"title":{},"body":{"injectables/AuthService.html":{}}}],["login",{"_index":101,"title":{},"body":{"controllers/AuthController.html":{},"changelog.html":{}}}],["login(@request",{"_index":158,"title":{},"body":{"controllers/AuthController.html":{}}}],["login(req",{"_index":104,"title":{},"body":{"controllers/AuthController.html":{}}}],["loginuserbody",{"_index":142,"title":{"classes/LoginUserBody.html":{}},"body":{"controllers/AuthController.html":{},"classes/LoginUserBody.html":{},"coverage.html":{}}}],["loginuserbody})@apiokresponse({description",{"_index":107,"title":{},"body":{"controllers/AuthController.html":{}}}],["loginuserresponse",{"_index":110,"title":{"classes/LoginUserResponse.html":{}},"body":{"controllers/AuthController.html":{},"classes/LoginUserResponse.html":{},"coverage.html":{}}}],["main",{"_index":795,"title":{},"body":{"entities/Room.html":{}}}],["make(5",{"_index":439,"title":{},"body":{"classes/DatabaseSeeder.html":{}}}],["makeone",{"_index":434,"title":{},"body":{"classes/DatabaseSeeder.html":{}}}],["malformed",{"_index":303,"title":{},"body":{"injectables/AuthService.html":{}}}],["manytoone",{"_index":567,"title":{},"body":{"entities/List.html":{},"entities/RefreshToken.html":{},"entities/Room.html":{},"entities/Task.html":{}}}],["manytoone()@apiproperty({description",{"_index":792,"title":{},"body":{"entities/Room.html":{},"entities/Task.html":{}}}],["manytoone(undefined",{"_index":779,"title":{},"body":{"entities/RefreshToken.html":{}}}],["map",{"_index":905,"title":{},"body":{"classes/TasksGateway.html":{}}}],["map((item",{"_index":912,"title":{},"body":{"classes/TasksGateway.html":{}}}],["match",{"_index":281,"title":{},"body":{"injectables/AuthService.html":{}}}],["matching",{"_index":95,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"entities/BaseEntity.html":{},"classes/Chore.html":{},"controllers/ChoresController.html":{},"modules/ChoresModule.html":{},"injectables/ChoresService.html":{},"classes/CreateChoreDto.html":{},"classes/CreateListDto.html":{},"classes/CreateRoomDto.html":{},"classes/CreateTaskDto.html":{},"classes/DatabaseSeeder.html":{},"interfaces/FindAllArgs.html":{},"interfaces/FindAllArgs-1.html":{},"interfaces/FindAllArgs-2.html":{},"interfaces/FindOneArgs.html":{},"interfaces/FindOneArgs-1.html":{},"interfaces/FindOneArgs-2.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"entities/List.html":{},"classes/ListFactory.html":{},"controllers/ListsController.html":{},"modules/ListsModule.html":{},"injectables/ListsService.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/LoginUserBody.html":{},"classes/LoginUserResponse.html":{},"classes/Migration20220926031634.html":{},"classes/Migration20220926213133.html":{},"classes/Migration20220926214650.html":{},"classes/Migration20220926222224.html":{},"classes/Migration20220926231541.html":{},"classes/Migration20221013014335.html":{},"classes/Migration20221023001353.html":{},"classes/Migration20221031000536.html":{},"classes/Migration20221129042732.html":{},"classes/RedisIoAdapter.html":{},"entities/RefreshToken.html":{},"classes/RefreshTokenBody.html":{},"classes/RefreshTokenResponse.html":{},"classes/RegisterUserBody.html":{},"classes/RegisterUserResponse.html":{},"entities/Room.html":{},"controllers/RoomsController.html":{},"modules/RoomsModule.html":{},"injectables/RoomsService.html":{},"entities/Task.html":{},"classes/TaskFactory.html":{},"controllers/TasksController.html":{},"classes/TasksGateway.html":{},"modules/TasksModule.html":{},"injectables/TasksService.html":{},"classes/UpdateChoreDto.html":{},"classes/UpdateListDto.html":{},"classes/UpdateProfileDto.html":{},"classes/UpdateRoomDto.html":{},"classes/UpdateTaskDto.html":{},"entities/User.html":{},"classes/UserDto.html":{},"classes/UserFactory.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["means",{"_index":269,"title":{},"body":{"injectables/AuthService.html":{}}}],["memory",{"_index":530,"title":{},"body":{"controllers/HealthController.html":{}}}],["memorycheck",{"_index":518,"title":{},"body":{"controllers/HealthController.html":{}}}],["memoryhealthindicator",{"_index":525,"title":{},"body":{"controllers/HealthController.html":{}}}],["message",{"_index":612,"title":{},"body":{"controllers/ListsController.html":{},"controllers/TasksController.html":{}}}],["messagebody",{"_index":900,"title":{},"body":{"classes/TasksGateway.html":{}}}],["metadata",{"_index":1289,"title":{},"body":{"dependencies.html":{}}}],["metadataprovider",{"_index":1373,"title":{},"body":{"miscellaneous/variables.html":{}}}],["methods",{"_index":22,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/ChoresController.html":{},"injectables/ChoresService.html":{},"classes/DatabaseSeeder.html":{},"controllers/HealthController.html":{},"injectables/JwtStrategy.html":{},"classes/ListFactory.html":{},"controllers/ListsController.html":{},"injectables/ListsService.html":{},"injectables/LocalStrategy.html":{},"classes/Migration20220926031634.html":{},"classes/Migration20220926213133.html":{},"classes/Migration20220926214650.html":{},"classes/Migration20220926222224.html":{},"classes/Migration20220926231541.html":{},"classes/Migration20221013014335.html":{},"classes/Migration20221023001353.html":{},"classes/Migration20221031000536.html":{},"classes/Migration20221129042732.html":{},"classes/RedisIoAdapter.html":{},"controllers/RoomsController.html":{},"injectables/RoomsService.html":{},"classes/TaskFactory.html":{},"controllers/TasksController.html":{},"classes/TasksGateway.html":{},"injectables/TasksService.html":{},"classes/UserFactory.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["middleware",{"_index":89,"title":{},"body":{"modules/AppModule.html":{}}}],["middlewareconsumer",{"_index":25,"title":{},"body":{"modules/AppModule.html":{}}}],["middlewares",{"_index":76,"title":{},"body":{"modules/AppModule.html":{}}}],["migrate",{"_index":1106,"title":{},"body":{"changelog.html":{}}}],["migration",{"_index":652,"title":{},"body":{"classes/Migration20220926031634.html":{},"classes/Migration20220926213133.html":{},"classes/Migration20220926214650.html":{},"classes/Migration20220926222224.html":{},"classes/Migration20220926231541.html":{},"classes/Migration20221013014335.html":{},"classes/Migration20221023001353.html":{},"classes/Migration20221031000536.html":{},"classes/Migration20221129042732.html":{}}}],["migration20220926031634",{"_index":650,"title":{"classes/Migration20220926031634.html":{}},"body":{"classes/Migration20220926031634.html":{},"coverage.html":{}}}],["migration20220926213133",{"_index":682,"title":{"classes/Migration20220926213133.html":{}},"body":{"classes/Migration20220926213133.html":{},"coverage.html":{}}}],["migration20220926214650",{"_index":692,"title":{"classes/Migration20220926214650.html":{}},"body":{"classes/Migration20220926214650.html":{},"coverage.html":{}}}],["migration20220926222224",{"_index":700,"title":{"classes/Migration20220926222224.html":{}},"body":{"classes/Migration20220926222224.html":{},"coverage.html":{}}}],["migration20220926231541",{"_index":704,"title":{"classes/Migration20220926231541.html":{}},"body":{"classes/Migration20220926231541.html":{},"coverage.html":{}}}],["migration20221013014335",{"_index":712,"title":{"classes/Migration20221013014335.html":{}},"body":{"classes/Migration20221013014335.html":{},"coverage.html":{}}}],["migration20221023001353",{"_index":719,"title":{"classes/Migration20221023001353.html":{}},"body":{"classes/Migration20221023001353.html":{},"coverage.html":{}}}],["migration20221031000536",{"_index":727,"title":{"classes/Migration20221031000536.html":{}},"body":{"classes/Migration20221031000536.html":{},"coverage.html":{}}}],["migration20221129042732",{"_index":734,"title":{"classes/Migration20221129042732.html":{}},"body":{"classes/Migration20221129042732.html":{},"coverage.html":{}}}],["migrations",{"_index":1376,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mikro",{"_index":46,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"entities/BaseEntity.html":{},"classes/DatabaseSeeder.html":{},"interfaces/FindAllArgs.html":{},"interfaces/FindAllArgs-1.html":{},"interfaces/FindAllArgs-2.html":{},"interfaces/FindOneArgs.html":{},"interfaces/FindOneArgs-1.html":{},"interfaces/FindOneArgs-2.html":{},"entities/List.html":{},"classes/ListFactory.html":{},"modules/ListsModule.html":{},"injectables/ListsService.html":{},"classes/Migration20220926031634.html":{},"classes/Migration20220926213133.html":{},"classes/Migration20220926214650.html":{},"classes/Migration20220926222224.html":{},"classes/Migration20220926231541.html":{},"classes/Migration20221013014335.html":{},"classes/Migration20221023001353.html":{},"classes/Migration20221031000536.html":{},"classes/Migration20221129042732.html":{},"entities/RefreshToken.html":{},"entities/Room.html":{},"modules/RoomsModule.html":{},"injectables/RoomsService.html":{},"entities/Task.html":{},"classes/TaskFactory.html":{},"modules/TasksModule.html":{},"injectables/TasksService.html":{},"entities/User.html":{},"classes/UserFactory.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["mikroorm",{"_index":53,"title":{},"body":{"modules/AppModule.html":{},"changelog.html":{}}}],["mikroormhealthindicator",{"_index":526,"title":{},"body":{"controllers/HealthController.html":{}}}],["mikroormmiddleware",{"_index":44,"title":{},"body":{"modules/AppModule.html":{}}}],["mikroormmodule",{"_index":45,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ListsModule.html":{},"modules/RoomsModule.html":{},"modules/TasksModule.html":{},"modules/UsersModule.html":{}}}],["mikroormmodule.forfeature([list",{"_index":623,"title":{},"body":{"modules/ListsModule.html":{}}}],["mikroormmodule.forfeature([refreshtoken",{"_index":209,"title":{},"body":{"modules/AuthModule.html":{}}}],["mikroormmodule.forfeature([room",{"_index":826,"title":{},"body":{"modules/RoomsModule.html":{}}}],["mikroormmodule.forfeature([task",{"_index":923,"title":{},"body":{"modules/TasksModule.html":{}}}],["mikroormmodule.forfeature([user",{"_index":1040,"title":{},"body":{"modules/UsersModule.html":{}}}],["mikroormmodule.forroot",{"_index":63,"title":{},"body":{"modules/AppModule.html":{}}}],["miscellaneous",{"_index":1295,"title":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":1321,"title":{},"body":{"index.html":{},"properties.html":{}}}],["mode",{"_index":1312,"title":{},"body":{"index.html":{}}}],["model",{"_index":578,"title":{},"body":{"classes/ListFactory.html":{},"classes/TaskFactory.html":{},"classes/UserFactory.html":{}}}],["module",{"_index":0,"title":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ChoresModule.html":{},"modules/HealthModule.html":{},"modules/ListsModule.html":{},"modules/RoomsModule.html":{},"modules/TasksModule.html":{},"modules/UsersModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ChoresModule.html":{},"modules/HealthModule.html":{},"modules/ListsModule.html":{},"modules/RoomsModule.html":{},"modules/TasksModule.html":{},"modules/UsersModule.html":{}}}],["modules",{"_index":2,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ChoresModule.html":{},"modules/HealthModule.html":{},"modules/ListsModule.html":{},"modules/RoomsModule.html":{},"modules/TasksModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["monorepo",{"_index":1170,"title":{},"body":{"changelog.html":{}}}],["more",{"_index":1067,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["move",{"_index":1136,"title":{},"body":{"changelog.html":{}}}],["mutation",{"_index":1081,"title":{},"body":{"changelog.html":{}}}],["myśliwiec",{"_index":1339,"title":{},"body":{"index.html":{}}}],["name",{"_index":29,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/ChoresController.html":{},"injectables/ChoresService.html":{},"classes/CreateRoomDto.html":{},"classes/DatabaseSeeder.html":{},"injectables/JwtStrategy.html":{},"classes/ListFactory.html":{},"controllers/ListsController.html":{},"injectables/ListsService.html":{},"injectables/LocalStrategy.html":{},"classes/Migration20221129042732.html":{},"classes/RedisIoAdapter.html":{},"entities/RefreshToken.html":{},"entities/Room.html":{},"controllers/RoomsController.html":{},"injectables/RoomsService.html":{},"classes/TaskFactory.html":{},"controllers/TasksController.html":{},"classes/TasksGateway.html":{},"injectables/TasksService.html":{},"entities/User.html":{},"classes/UserDto.html":{},"classes/UserFactory.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["nest",{"_index":1174,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["nestframework",{"_index":1343,"title":{},"body":{"index.html":{}}}],["nestjs/axios",{"_index":540,"title":{},"body":{"modules/HealthModule.html":{},"dependencies.html":{}}}],["nestjs/cli",{"_index":1157,"title":{},"body":{"changelog.html":{}}}],["nestjs/common",{"_index":41,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/ChoresController.html":{},"modules/ChoresModule.html":{},"injectables/ChoresService.html":{},"interfaces/FindAllArgs.html":{},"interfaces/FindAllArgs-1.html":{},"interfaces/FindAllArgs-2.html":{},"interfaces/FindOneArgs.html":{},"interfaces/FindOneArgs-1.html":{},"interfaces/FindOneArgs-2.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"controllers/ListsController.html":{},"modules/ListsModule.html":{},"injectables/ListsService.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"controllers/RoomsController.html":{},"modules/RoomsModule.html":{},"injectables/RoomsService.html":{},"controllers/TasksController.html":{},"modules/TasksModule.html":{},"injectables/TasksService.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"changelog.html":{},"dependencies.html":{}}}],["nestjs/config",{"_index":43,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":1213,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["nestjs/jwt",{"_index":193,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"dependencies.html":{}}}],["nestjs/mapped",{"_index":935,"title":{},"body":{"classes/UpdateListDto.html":{},"classes/UpdateTaskDto.html":{}}}],["nestjs/passport",{"_index":195,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":755,"title":{},"body":{"classes/RedisIoAdapter.html":{},"changelog.html":{},"dependencies.html":{}}}],["nestjs/swagger",{"_index":137,"title":{},"body":{"controllers/AuthController.html":{},"classes/CreateListDto.html":{},"classes/CreateRoomDto.html":{},"classes/CreateTaskDto.html":{},"classes/LoginUserBody.html":{},"classes/LoginUserResponse.html":{},"classes/RefreshTokenBody.html":{},"classes/RefreshTokenResponse.html":{},"classes/RegisterUserBody.html":{},"classes/RegisterUserResponse.html":{},"entities/Room.html":{},"controllers/RoomsController.html":{},"entities/Task.html":{},"controllers/TasksController.html":{},"classes/UpdateChoreDto.html":{},"classes/UpdateProfileDto.html":{},"classes/UpdateRoomDto.html":{},"entities/User.html":{},"classes/UserDto.html":{},"controllers/UsersController.html":{},"dependencies.html":{}}}],["nestjs/terminus",{"_index":527,"title":{},"body":{"controllers/HealthController.html":{},"modules/HealthModule.html":{},"dependencies.html":{}}}],["nestjs/testing",{"_index":1196,"title":{},"body":{"changelog.html":{}}}],["nestjs/websockets",{"_index":904,"title":{},"body":{"classes/TasksGateway.html":{},"dependencies.html":{}}}],["nestmodule",{"_index":40,"title":{},"body":{"modules/AppModule.html":{}}}],["new",{"_index":118,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"entities/BaseEntity.html":{},"injectables/ChoresService.html":{},"classes/DatabaseSeeder.html":{},"interfaces/FindAllArgs.html":{},"interfaces/FindAllArgs-1.html":{},"interfaces/FindAllArgs-2.html":{},"interfaces/FindOneArgs.html":{},"interfaces/FindOneArgs-1.html":{},"interfaces/FindOneArgs-2.html":{},"controllers/ListsController.html":{},"injectables/ListsService.html":{},"injectables/LocalStrategy.html":{},"injectables/RoomsService.html":{},"controllers/TasksController.html":{},"injectables/TasksService.html":{},"entities/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["next",{"_index":992,"title":{},"body":{"classes/UserDto.html":{}}}],["node.js",{"_index":1299,"title":{},"body":{"index.html":{}}}],["notfounderror",{"_index":446,"title":{},"body":{"interfaces/FindAllArgs.html":{},"interfaces/FindAllArgs-1.html":{},"interfaces/FindOneArgs.html":{},"interfaces/FindOneArgs-1.html":{},"injectables/ListsService.html":{},"injectables/RoomsService.html":{},"injectables/TasksService.html":{}}}],["notfounderror(`not",{"_index":463,"title":{},"body":{"interfaces/FindAllArgs.html":{},"interfaces/FindAllArgs-1.html":{},"interfaces/FindOneArgs.html":{},"interfaces/FindOneArgs-1.html":{},"injectables/ListsService.html":{},"injectables/RoomsService.html":{},"injectables/TasksService.html":{}}}],["npm",{"_index":1308,"title":{},"body":{"index.html":{}}}],["null",{"_index":283,"title":{},"body":{"injectables/AuthService.html":{},"classes/Migration20220926031634.html":{},"classes/Migration20220926213133.html":{},"classes/Migration20220926214650.html":{},"classes/Migration20220926231541.html":{},"classes/Migration20221023001353.html":{},"classes/Migration20221031000536.html":{},"classes/Migration20221129042732.html":{}}}],["nullable",{"_index":575,"title":{},"body":{"entities/List.html":{},"entities/Task.html":{},"entities/User.html":{}}}],["number",{"_index":235,"title":{},"body":{"injectables/AuthService.html":{},"entities/BaseEntity.html":{},"injectables/ChoresService.html":{},"interfaces/FindAllArgs.html":{},"interfaces/FindAllArgs-1.html":{},"interfaces/FindAllArgs-2.html":{},"interfaces/FindOneArgs.html":{},"interfaces/FindOneArgs-1.html":{},"interfaces/FindOneArgs-2.html":{},"controllers/ListsController.html":{},"injectables/ListsService.html":{},"classes/RedisIoAdapter.html":{},"injectables/RoomsService.html":{},"controllers/TasksController.html":{},"classes/TasksGateway.html":{},"injectables/TasksService.html":{},"injectables/UsersService.html":{}}}],["nx",{"_index":1058,"title":{},"body":{"changelog.html":{}}}],["object.assign(this",{"_index":998,"title":{},"body":{"classes/UserDto.html":{}}}],["observable",{"_index":896,"title":{},"body":{"classes/TasksGateway.html":{}}}],["ondelete",{"_index":780,"title":{},"body":{"entities/RefreshToken.html":{}}}],["one",{"_index":83,"title":{},"body":{"modules/AppModule.html":{}}}],["onetomany",{"_index":975,"title":{},"body":{"entities/User.html":{}}}],["onetomany(undefined",{"_index":959,"title":{},"body":{"entities/User.html":{}}}],["onmoduleinit",{"_index":36,"title":{},"body":{"modules/AppModule.html":{}}}],["onupdate",{"_index":331,"title":{},"body":{"entities/BaseEntity.html":{}}}],["open",{"_index":1323,"title":{},"body":{"index.html":{}}}],["openapi",{"_index":1115,"title":{},"body":{"changelog.html":{}}}],["openapi/postman",{"_index":1133,"title":{},"body":{"changelog.html":{}}}],["optional",{"_index":31,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/ChoresController.html":{},"injectables/ChoresService.html":{},"classes/CreateListDto.html":{},"classes/CreateTaskDto.html":{},"classes/DatabaseSeeder.html":{},"interfaces/FindAllArgs.html":{},"interfaces/FindAllArgs-1.html":{},"interfaces/FindAllArgs-2.html":{},"interfaces/FindOneArgs-2.html":{},"injectables/JwtStrategy.html":{},"entities/List.html":{},"classes/ListFactory.html":{},"controllers/ListsController.html":{},"injectables/ListsService.html":{},"injectables/LocalStrategy.html":{},"classes/RedisIoAdapter.html":{},"controllers/RoomsController.html":{},"injectables/RoomsService.html":{},"entities/Task.html":{},"classes/TaskFactory.html":{},"controllers/TasksController.html":{},"classes/TasksGateway.html":{},"injectables/TasksService.html":{},"classes/UpdateProfileDto.html":{},"classes/UserDto.html":{},"classes/UserFactory.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["options",{"_index":750,"title":{},"body":{"classes/RedisIoAdapter.html":{},"miscellaneous/variables.html":{}}}],["origin",{"_index":908,"title":{},"body":{"classes/TasksGateway.html":{}}}],["orm",{"_index":71,"title":{},"body":{"modules/AppModule.html":{}}}],["orm.config.ts",{"_index":1243,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["orm/core",{"_index":54,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{},"entities/BaseEntity.html":{},"interfaces/FindAllArgs.html":{},"interfaces/FindAllArgs-1.html":{},"interfaces/FindAllArgs-2.html":{},"interfaces/FindOneArgs.html":{},"interfaces/FindOneArgs-1.html":{},"interfaces/FindOneArgs-2.html":{},"entities/List.html":{},"injectables/ListsService.html":{},"entities/RefreshToken.html":{},"entities/Room.html":{},"injectables/RoomsService.html":{},"entities/Task.html":{},"injectables/TasksService.html":{},"entities/User.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["orm/migrations",{"_index":655,"title":{},"body":{"classes/Migration20220926031634.html":{},"classes/Migration20220926213133.html":{},"classes/Migration20220926214650.html":{},"classes/Migration20220926222224.html":{},"classes/Migration20220926231541.html":{},"classes/Migration20221013014335.html":{},"classes/Migration20221023001353.html":{},"classes/Migration20221031000536.html":{},"classes/Migration20221129042732.html":{},"dependencies.html":{}}}],["orm/nestjs",{"_index":47,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"interfaces/FindAllArgs.html":{},"interfaces/FindAllArgs-1.html":{},"interfaces/FindAllArgs-2.html":{},"interfaces/FindOneArgs.html":{},"interfaces/FindOneArgs-1.html":{},"interfaces/FindOneArgs-2.html":{},"modules/ListsModule.html":{},"injectables/ListsService.html":{},"modules/RoomsModule.html":{},"injectables/RoomsService.html":{},"modules/TasksModule.html":{},"injectables/TasksService.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["orm/postgresql",{"_index":419,"title":{},"body":{"classes/DatabaseSeeder.html":{},"dependencies.html":{}}}],["orm/reflection",{"_index":1264,"title":{},"body":{"dependencies.html":{}}}],["orm/seeder",{"_index":420,"title":{},"body":{"classes/DatabaseSeeder.html":{},"classes/ListFactory.html":{},"classes/TaskFactory.html":{},"classes/UserFactory.html":{},"dependencies.html":{}}}],["orm/sql",{"_index":1265,"title":{},"body":{"dependencies.html":{}}}],["out",{"_index":16,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ChoresModule.html":{},"modules/ListsModule.html":{},"modules/RoomsModule.html":{},"entities/Task.html":{},"modules/TasksModule.html":{},"modules/UsersModule.html":{},"changelog.html":{},"overview.html":{}}}],["output",{"_index":1140,"title":{},"body":{"changelog.html":{}}}],["overview",{"_index":1350,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["p2",{"_index":1079,"title":{},"body":{"changelog.html":{}}}],["package",{"_index":1261,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["param",{"_index":357,"title":{},"body":{"controllers/ChoresController.html":{},"controllers/ListsController.html":{},"controllers/RoomsController.html":{},"controllers/TasksController.html":{},"controllers/UsersController.html":{}}}],["parameters",{"_index":28,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/ChoresController.html":{},"injectables/ChoresService.html":{},"classes/DatabaseSeeder.html":{},"injectables/JwtStrategy.html":{},"classes/ListFactory.html":{},"controllers/ListsController.html":{},"injectables/ListsService.html":{},"injectables/LocalStrategy.html":{},"classes/RedisIoAdapter.html":{},"controllers/RoomsController.html":{},"injectables/RoomsService.html":{},"classes/TaskFactory.html":{},"controllers/TasksController.html":{},"classes/TasksGateway.html":{},"injectables/TasksService.html":{},"classes/UserDto.html":{},"classes/UserFactory.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["parseint(process.env.postgres_port",{"_index":1361,"title":{},"body":{"miscellaneous/variables.html":{}}}],["partial",{"_index":499,"title":{},"body":{"interfaces/FindAllArgs-2.html":{},"interfaces/FindOneArgs-2.html":{},"classes/ListFactory.html":{},"classes/TaskFactory.html":{},"classes/UserDto.html":{},"classes/UserFactory.html":{},"injectables/UsersService.html":{}}}],["partialtype",{"_index":932,"title":{},"body":{"classes/UpdateChoreDto.html":{},"classes/UpdateListDto.html":{},"classes/UpdateRoomDto.html":{},"classes/UpdateTaskDto.html":{}}}],["partialtype(createchoredto",{"_index":933,"title":{},"body":{"classes/UpdateChoreDto.html":{}}}],["partialtype(createlistdto",{"_index":937,"title":{},"body":{"classes/UpdateListDto.html":{}}}],["partialtype(createroomdto",{"_index":946,"title":{},"body":{"classes/UpdateRoomDto.html":{}}}],["partialtype(createtaskdto",{"_index":948,"title":{},"body":{"classes/UpdateTaskDto.html":{}}}],["passport",{"_index":556,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"dependencies.html":{}}}],["passportmodule",{"_index":194,"title":{},"body":{"modules/AuthModule.html":{}}}],["passportstrategy",{"_index":558,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["passportstrategy(strategy",{"_index":559,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["password",{"_index":242,"title":{},"body":{"injectables/AuthService.html":{},"injectables/LocalStrategy.html":{},"classes/LoginUserBody.html":{},"classes/Migration20220926031634.html":{},"classes/RegisterUserBody.html":{},"entities/User.html":{},"classes/UserFactory.html":{},"miscellaneous/variables.html":{}}}],["patch",{"_index":356,"title":{},"body":{"controllers/ChoresController.html":{},"controllers/RoomsController.html":{}}}],["patch(':id",{"_index":354,"title":{},"body":{"controllers/ChoresController.html":{},"controllers/RoomsController.html":{}}}],["patches",{"_index":1152,"title":{},"body":{"changelog.html":{}}}],["path",{"_index":1377,"title":{},"body":{"miscellaneous/variables.html":{}}}],["paths",{"_index":1167,"title":{},"body":{"changelog.html":{}}}],["pathts",{"_index":1379,"title":{},"body":{"miscellaneous/variables.html":{}}}],["patrick",{"_index":970,"title":{},"body":{"entities/User.html":{}}}],["payload",{"_index":168,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["payload.accesstoken",{"_index":171,"title":{},"body":{"controllers/AuthController.html":{}}}],["payload.jwtid",{"_index":300,"title":{},"body":{"injectables/AuthService.html":{}}}],["payload.refreshtoken",{"_index":172,"title":{},"body":{"controllers/AuthController.html":{}}}],["payload.sub",{"_index":299,"title":{},"body":{"injectables/AuthService.html":{}}}],["payload.subject",{"_index":309,"title":{},"body":{"injectables/AuthService.html":{}}}],["payload.user",{"_index":169,"title":{},"body":{"controllers/AuthController.html":{}}}],["performance",{"_index":1100,"title":{},"body":{"changelog.html":{}}}],["pg",{"_index":1285,"title":{},"body":{"dependencies.html":{}}}],["pick",{"_index":233,"title":{},"body":{"injectables/AuthService.html":{},"classes/UserDto.html":{}}}],["pin",{"_index":1121,"title":{},"body":{"changelog.html":{}}}],["plaintextpassword",{"_index":249,"title":{},"body":{"injectables/AuthService.html":{}}}],["please",{"_index":1235,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["pnpm",{"_index":1226,"title":{},"body":{"changelog.html":{}}}],["populate",{"_index":268,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/FindAllArgs.html":{},"interfaces/FindAllArgs-1.html":{},"interfaces/FindOneArgs.html":{},"interfaces/FindOneArgs-1.html":{},"injectables/ListsService.html":{},"injectables/RoomsService.html":{},"injectables/TasksService.html":{},"changelog.html":{}}}],["port",{"_index":753,"title":{},"body":{"classes/RedisIoAdapter.html":{},"miscellaneous/variables.html":{}}}],["post",{"_index":131,"title":{},"body":{"controllers/AuthController.html":{},"controllers/ChoresController.html":{},"interfaces/FindAllArgs.html":{},"interfaces/FindAllArgs-1.html":{},"interfaces/FindAllArgs-2.html":{},"interfaces/FindOneArgs.html":{},"interfaces/FindOneArgs-1.html":{},"interfaces/FindOneArgs-2.html":{},"controllers/ListsController.html":{},"injectables/ListsService.html":{},"controllers/RoomsController.html":{},"controllers/TasksController.html":{},"injectables/TasksService.html":{},"injectables/UsersService.html":{}}}],["post('login",{"_index":156,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('refresh",{"_index":174,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('refresh')@apiokresponse({description",{"_index":116,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('register",{"_index":179,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('register')@apicreatedresponse({description",{"_index":125,"title":{},"body":{"controllers/AuthController.html":{}}}],["post()@apioperation({summary",{"_index":866,"title":{},"body":{"controllers/TasksController.html":{}}}],["postgresql",{"_index":1358,"title":{},"body":{"miscellaneous/variables.html":{}}}],["postid",{"_index":495,"title":{},"body":{"interfaces/FindAllArgs-2.html":{},"interfaces/FindOneArgs-2.html":{},"injectables/UsersService.html":{}}}],["postman",{"_index":1182,"title":{},"body":{"changelog.html":{}}}],["posts",{"_index":672,"title":{},"body":{"classes/Migration20220926031634.html":{},"classes/Migration20220926213133.html":{},"classes/Migration20220926214650.html":{}}}],["posts_author_id_foreign",{"_index":681,"title":{},"body":{"classes/Migration20220926031634.html":{},"classes/Migration20220926214650.html":{}}}],["prefix",{"_index":99,"title":{},"body":{"controllers/AuthController.html":{},"controllers/ChoresController.html":{},"controllers/HealthController.html":{},"controllers/ListsController.html":{},"controllers/RoomsController.html":{},"controllers/TasksController.html":{},"controllers/UsersController.html":{}}}],["pretty",{"_index":1124,"title":{},"body":{"changelog.html":{}}}],["primary",{"_index":659,"title":{},"body":{"classes/Migration20220926031634.html":{},"classes/Migration20220926214650.html":{},"classes/Migration20220926231541.html":{},"classes/Migration20221023001353.html":{},"classes/Migration20221129042732.html":{}}}],["primarykey",{"_index":326,"title":{},"body":{"entities/BaseEntity.html":{}}}],["print",{"_index":1125,"title":{},"body":{"changelog.html":{}}}],["private",{"_index":214,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/FindAllArgs.html":{},"interfaces/FindAllArgs-1.html":{},"interfaces/FindAllArgs-2.html":{},"interfaces/FindOneArgs.html":{},"interfaces/FindOneArgs-1.html":{},"interfaces/FindOneArgs-2.html":{},"controllers/HealthController.html":{},"injectables/JwtStrategy.html":{},"injectables/ListsService.html":{},"classes/RedisIoAdapter.html":{},"injectables/RoomsService.html":{},"injectables/TasksService.html":{},"injectables/UsersService.html":{}}}],["process.env.postgres_db",{"_index":1365,"title":{},"body":{"miscellaneous/variables.html":{}}}],["process.env.postgres_host",{"_index":1360,"title":{},"body":{"miscellaneous/variables.html":{}}}],["process.env.postgres_password",{"_index":1363,"title":{},"body":{"miscellaneous/variables.html":{}}}],["process.env.postgres_user",{"_index":1362,"title":{},"body":{"miscellaneous/variables.html":{}}}],["production",{"_index":1314,"title":{},"body":{"index.html":{}}}],["profile",{"_index":77,"title":{},"body":{"modules/AppModule.html":{}}}],["profile.dto",{"_index":493,"title":{},"body":{"interfaces/FindAllArgs-2.html":{},"interfaces/FindOneArgs-2.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["profile.dto.ts",{"_index":939,"title":{},"body":{"classes/UpdateProfileDto.html":{},"coverage.html":{}}}],["profile.dto.ts:11",{"_index":943,"title":{},"body":{"classes/UpdateProfileDto.html":{}}}],["profile.dto.ts:5",{"_index":944,"title":{},"body":{"classes/UpdateProfileDto.html":{}}}],["profile.dto.ts:8",{"_index":942,"title":{},"body":{"classes/UpdateProfileDto.html":{}}}],["progressive",{"_index":1298,"title":{},"body":{"index.html":{}}}],["project",{"_index":1324,"title":{},"body":{"index.html":{}}}],["promise",{"_index":38,"title":{},"body":{"modules/AppModule.html":{},"classes/DatabaseSeeder.html":{},"classes/Migration20220926031634.html":{},"classes/Migration20220926213133.html":{},"classes/Migration20220926214650.html":{},"classes/Migration20220926222224.html":{},"classes/Migration20220926231541.html":{},"classes/Migration20221013014335.html":{},"classes/Migration20221023001353.html":{},"classes/Migration20221031000536.html":{},"classes/Migration20221129042732.html":{},"classes/RedisIoAdapter.html":{},"classes/TasksGateway.html":{}}}],["promise.all([pubclient.connect",{"_index":767,"title":{},"body":{"classes/RedisIoAdapter.html":{}}}],["properties",{"_index":213,"title":{"properties.html":{}},"body":{"injectables/AuthService.html":{},"entities/BaseEntity.html":{},"classes/CreateListDto.html":{},"classes/CreateRoomDto.html":{},"classes/CreateTaskDto.html":{},"interfaces/FindAllArgs.html":{},"interfaces/FindAllArgs-1.html":{},"interfaces/FindAllArgs-2.html":{},"interfaces/FindOneArgs.html":{},"interfaces/FindOneArgs-1.html":{},"interfaces/FindOneArgs-2.html":{},"entities/List.html":{},"classes/ListFactory.html":{},"classes/LoginUserBody.html":{},"classes/LoginUserResponse.html":{},"classes/RedisIoAdapter.html":{},"entities/RefreshToken.html":{},"classes/RefreshTokenBody.html":{},"classes/RefreshTokenResponse.html":{},"classes/RegisterUserBody.html":{},"classes/RegisterUserResponse.html":{},"entities/Room.html":{},"entities/Task.html":{},"classes/TaskFactory.html":{},"classes/TasksGateway.html":{},"classes/UpdateProfileDto.html":{},"entities/User.html":{},"classes/UserDto.html":{},"classes/UserFactory.html":{},"properties.html":{}}}],["property",{"_index":271,"title":{},"body":{"injectables/AuthService.html":{},"entities/BaseEntity.html":{},"entities/List.html":{},"entities/RefreshToken.html":{},"entities/Room.html":{},"entities/Task.html":{},"entities/User.html":{}}}],["property()@apiproperty({example",{"_index":794,"title":{},"body":{"entities/Room.html":{},"entities/Task.html":{}}}],["property()@unique()@apiproperty({example",{"_index":969,"title":{},"body":{"entities/User.html":{}}}],["property({default",{"_index":846,"title":{},"body":{"entities/Task.html":{}}}],["property({hidden",{"_index":963,"title":{},"body":{"entities/User.html":{}}}],["property({name",{"_index":777,"title":{},"body":{"entities/RefreshToken.html":{}}}],["property({nullable",{"_index":569,"title":{},"body":{"entities/List.html":{},"entities/Task.html":{},"entities/User.html":{}}}],["property({onupdate",{"_index":328,"title":{},"body":{"entities/BaseEntity.html":{}}}],["provided",{"_index":508,"title":{},"body":{"interfaces/FindAllArgs-2.html":{},"interfaces/FindOneArgs-2.html":{},"injectables/UsersService.html":{}}}],["providers",{"_index":65,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ChoresModule.html":{},"modules/ListsModule.html":{},"modules/RoomsModule.html":{},"modules/TasksModule.html":{},"modules/UsersModule.html":{}}}],["pubclient",{"_index":762,"title":{},"body":{"classes/RedisIoAdapter.html":{}}}],["pubclient.duplicate",{"_index":766,"title":{},"body":{"classes/RedisIoAdapter.html":{}}}],["put",{"_index":598,"title":{},"body":{"controllers/ListsController.html":{},"controllers/TasksController.html":{},"controllers/UsersController.html":{}}}],["put(':id",{"_index":610,"title":{},"body":{"controllers/ListsController.html":{},"controllers/TasksController.html":{}}}],["put('profile",{"_index":1029,"title":{},"body":{"controllers/UsersController.html":{}}}],["put('profile')@apiokresponse({description",{"_index":1018,"title":{},"body":{"controllers/UsersController.html":{}}}],["read",{"_index":1333,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":70,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{},"controllers/ChoresController.html":{},"classes/CreateListDto.html":{},"classes/CreateRoomDto.html":{},"classes/CreateTaskDto.html":{},"controllers/ListsController.html":{},"controllers/RoomsController.html":{},"controllers/TasksController.html":{},"classes/UpdateProfileDto.html":{},"classes/UserDto.html":{},"controllers/UsersController.html":{}}}],["reason",{"_index":74,"title":{},"body":{"modules/AppModule.html":{}}}],["record",{"_index":871,"title":{},"body":{"controllers/TasksController.html":{},"controllers/UsersController.html":{}}}],["redis",{"_index":761,"title":{},"body":{"classes/RedisIoAdapter.html":{},"changelog.html":{},"dependencies.html":{}}}],["redis://${process.env.redis_host}:${process.env.redis_port",{"_index":764,"title":{},"body":{"classes/RedisIoAdapter.html":{}}}],["redisioadapter",{"_index":740,"title":{"classes/RedisIoAdapter.html":{}},"body":{"classes/RedisIoAdapter.html":{},"coverage.html":{}}}],["refactors",{"_index":1109,"title":{},"body":{"changelog.html":{}}}],["references",{"_index":679,"title":{},"body":{"classes/Migration20220926031634.html":{},"classes/Migration20220926214650.html":{},"classes/Migration20220926222224.html":{},"classes/Migration20220926231541.html":{},"classes/Migration20221013014335.html":{},"classes/Migration20221023001353.html":{},"classes/Migration20221129042732.html":{}}}],["reflect",{"_index":1288,"title":{},"body":{"dependencies.html":{}}}],["refresh",{"_index":102,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["refresh(@body",{"_index":175,"title":{},"body":{"controllers/AuthController.html":{}}}],["refresh(refreshinput",{"_index":114,"title":{},"body":{"controllers/AuthController.html":{}}}],["refresh_tokens",{"_index":667,"title":{},"body":{"classes/Migration20220926031634.html":{},"classes/Migration20221031000536.html":{},"entities/RefreshToken.html":{}}}],["refresh_tokens_user_id_foreign",{"_index":677,"title":{},"body":{"classes/Migration20220926031634.html":{}}}],["refreshinput",{"_index":122,"title":{},"body":{"controllers/AuthController.html":{}}}],["refreshinput.refreshtoken",{"_index":177,"title":{},"body":{"controllers/AuthController.html":{}}}],["refreshtoken",{"_index":162,"title":{"entities/RefreshToken.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/LoginUserResponse.html":{},"entities/RefreshToken.html":{},"classes/RefreshTokenBody.html":{},"classes/RegisterUserResponse.html":{},"entities/User.html":{},"coverage.html":{}}}],["refreshtoken.user",{"_index":966,"title":{},"body":{"entities/User.html":{}}}],["refreshtokenbody",{"_index":115,"title":{"classes/RefreshTokenBody.html":{}},"body":{"controllers/AuthController.html":{},"classes/RefreshTokenBody.html":{},"coverage.html":{}}}],["refreshtokenrepository",{"_index":226,"title":{},"body":{"injectables/AuthService.html":{}}}],["refreshtokenresponse",{"_index":120,"title":{"classes/RefreshTokenResponse.html":{}},"body":{"controllers/AuthController.html":{},"classes/RefreshTokenResponse.html":{},"coverage.html":{}}}],["refreshtokens",{"_index":950,"title":{},"body":{"entities/User.html":{}}}],["register",{"_index":103,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["register(@body",{"_index":180,"title":{},"body":{"controllers/AuthController.html":{}}}],["register(registerinput",{"_index":123,"title":{},"body":{"controllers/AuthController.html":{}}}],["register(username",{"_index":241,"title":{},"body":{"injectables/AuthService.html":{}}}],["registered",{"_index":126,"title":{},"body":{"controllers/AuthController.html":{}}}],["registering",{"_index":88,"title":{},"body":{"modules/AppModule.html":{}}}],["registerinput",{"_index":129,"title":{},"body":{"controllers/AuthController.html":{}}}],["registerinput.password",{"_index":183,"title":{},"body":{"controllers/AuthController.html":{}}}],["registerinput.username",{"_index":182,"title":{},"body":{"controllers/AuthController.html":{}}}],["registerrequestcontext",{"_index":1375,"title":{},"body":{"miscellaneous/variables.html":{}}}],["registeruserbody",{"_index":124,"title":{"classes/RegisterUserBody.html":{}},"body":{"controllers/AuthController.html":{},"classes/RegisterUserBody.html":{},"coverage.html":{}}}],["registeruserresponse",{"_index":127,"title":{"classes/RegisterUserResponse.html":{}},"body":{"controllers/AuthController.html":{},"classes/RegisterUserResponse.html":{},"coverage.html":{}}}],["relations",{"_index":445,"title":{},"body":{"interfaces/FindAllArgs.html":{},"interfaces/FindAllArgs-1.html":{},"interfaces/FindAllArgs-2.html":{},"interfaces/FindOneArgs.html":{},"interfaces/FindOneArgs-1.html":{},"interfaces/FindOneArgs-2.html":{},"injectables/ListsService.html":{},"injectables/TasksService.html":{},"injectables/UsersService.html":{}}}],["release",{"_index":1154,"title":{},"body":{"changelog.html":{}}}],["remove",{"_index":341,"title":{},"body":{"controllers/ChoresController.html":{},"injectables/ChoresService.html":{},"controllers/ListsController.html":{},"injectables/ListsService.html":{},"controllers/RoomsController.html":{},"injectables/RoomsService.html":{},"entities/Task.html":{},"controllers/TasksController.html":{},"injectables/TasksService.html":{},"injectables/UsersService.html":{},"changelog.html":{}}}],["remove(@param('id",{"_index":372,"title":{},"body":{"controllers/ChoresController.html":{},"controllers/ListsController.html":{},"controllers/RoomsController.html":{},"controllers/TasksController.html":{}}}],["remove(id",{"_index":349,"title":{},"body":{"controllers/ChoresController.html":{},"injectables/ChoresService.html":{},"interfaces/FindAllArgs.html":{},"interfaces/FindAllArgs-1.html":{},"interfaces/FindAllArgs-2.html":{},"interfaces/FindOneArgs.html":{},"interfaces/FindOneArgs-1.html":{},"interfaces/FindOneArgs-2.html":{},"controllers/ListsController.html":{},"injectables/ListsService.html":{},"controllers/RoomsController.html":{},"injectables/RoomsService.html":{},"controllers/TasksController.html":{},"injectables/TasksService.html":{},"injectables/UsersService.html":{}}}],["removes",{"_index":387,"title":{},"body":{"injectables/ChoresService.html":{}}}],["rename",{"_index":716,"title":{},"body":{"classes/Migration20221013014335.html":{}}}],["repository",{"_index":1306,"title":{},"body":{"index.html":{}}}],["req",{"_index":112,"title":{},"body":{"controllers/AuthController.html":{}}}],["req.user",{"_index":164,"title":{},"body":{"controllers/AuthController.html":{}}}],["request",{"_index":81,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"miscellaneous/variables.html":{}}}],["request.user",{"_index":1384,"title":{},"body":{"miscellaneous/variables.html":{}}}],["required",{"_index":1145,"title":{},"body":{"changelog.html":{}}}],["res",{"_index":1030,"title":{},"body":{"controllers/UsersController.html":{}}}],["reset",{"_index":15,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ChoresModule.html":{},"modules/ListsModule.html":{},"modules/RoomsModule.html":{},"modules/TasksModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["resolverefreshtoken",{"_index":220,"title":{},"body":{"injectables/AuthService.html":{}}}],["resolverefreshtoken(encoded",{"_index":245,"title":{},"body":{"injectables/AuthService.html":{}}}],["results",{"_index":94,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"entities/BaseEntity.html":{},"classes/Chore.html":{},"controllers/ChoresController.html":{},"modules/ChoresModule.html":{},"injectables/ChoresService.html":{},"classes/CreateChoreDto.html":{},"classes/CreateListDto.html":{},"classes/CreateRoomDto.html":{},"classes/CreateTaskDto.html":{},"classes/DatabaseSeeder.html":{},"interfaces/FindAllArgs.html":{},"interfaces/FindAllArgs-1.html":{},"interfaces/FindAllArgs-2.html":{},"interfaces/FindOneArgs.html":{},"interfaces/FindOneArgs-1.html":{},"interfaces/FindOneArgs-2.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"entities/List.html":{},"classes/ListFactory.html":{},"controllers/ListsController.html":{},"modules/ListsModule.html":{},"injectables/ListsService.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/LoginUserBody.html":{},"classes/LoginUserResponse.html":{},"classes/Migration20220926031634.html":{},"classes/Migration20220926213133.html":{},"classes/Migration20220926214650.html":{},"classes/Migration20220926222224.html":{},"classes/Migration20220926231541.html":{},"classes/Migration20221013014335.html":{},"classes/Migration20221023001353.html":{},"classes/Migration20221031000536.html":{},"classes/Migration20221129042732.html":{},"classes/RedisIoAdapter.html":{},"entities/RefreshToken.html":{},"classes/RefreshTokenBody.html":{},"classes/RefreshTokenResponse.html":{},"classes/RegisterUserBody.html":{},"classes/RegisterUserResponse.html":{},"entities/Room.html":{},"controllers/RoomsController.html":{},"modules/RoomsModule.html":{},"injectables/RoomsService.html":{},"entities/Task.html":{},"classes/TaskFactory.html":{},"controllers/TasksController.html":{},"classes/TasksGateway.html":{},"modules/TasksModule.html":{},"injectables/TasksService.html":{},"classes/UpdateChoreDto.html":{},"classes/UpdateListDto.html":{},"classes/UpdateProfileDto.html":{},"classes/UpdateRoomDto.html":{},"classes/UpdateTaskDto.html":{},"entities/User.html":{},"classes/UserDto.html":{},"classes/UserFactory.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":173,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/ChoresController.html":{},"injectables/ChoresService.html":{},"interfaces/FindAllArgs.html":{},"interfaces/FindAllArgs-1.html":{},"interfaces/FindAllArgs-2.html":{},"interfaces/FindOneArgs.html":{},"interfaces/FindOneArgs-1.html":{},"interfaces/FindOneArgs-2.html":{},"controllers/HealthController.html":{},"injectables/JwtStrategy.html":{},"classes/ListFactory.html":{},"controllers/ListsController.html":{},"injectables/ListsService.html":{},"injectables/LocalStrategy.html":{},"classes/RedisIoAdapter.html":{},"controllers/RoomsController.html":{},"injectables/RoomsService.html":{},"classes/TaskFactory.html":{},"controllers/TasksController.html":{},"classes/TasksGateway.html":{},"injectables/TasksService.html":{},"classes/UserFactory.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["returns",{"_index":33,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/ChoresController.html":{},"injectables/ChoresService.html":{},"classes/DatabaseSeeder.html":{},"controllers/HealthController.html":{},"injectables/JwtStrategy.html":{},"classes/ListFactory.html":{},"controllers/ListsController.html":{},"injectables/ListsService.html":{},"injectables/LocalStrategy.html":{},"classes/Migration20220926031634.html":{},"classes/Migration20220926213133.html":{},"classes/Migration20220926214650.html":{},"classes/Migration20220926222224.html":{},"classes/Migration20220926231541.html":{},"classes/Migration20221013014335.html":{},"classes/Migration20221023001353.html":{},"classes/Migration20221031000536.html":{},"classes/Migration20221129042732.html":{},"classes/RedisIoAdapter.html":{},"controllers/RoomsController.html":{},"injectables/RoomsService.html":{},"classes/TaskFactory.html":{},"controllers/TasksController.html":{},"classes/TasksGateway.html":{},"injectables/TasksService.html":{},"classes/UserFactory.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["returntype",{"_index":746,"title":{},"body":{"classes/RedisIoAdapter.html":{}}}],["revert",{"_index":1238,"title":{},"body":{"changelog.html":{}}}],["revoked",{"_index":308,"title":{},"body":{"injectables/AuthService.html":{},"entities/RefreshToken.html":{}}}],["rimraf",{"_index":1291,"title":{},"body":{"dependencies.html":{}}}],["room",{"_index":790,"title":{"entities/Room.html":{}},"body":{"entities/Room.html":{},"modules/RoomsModule.html":{},"injectables/RoomsService.html":{},"coverage.html":{}}}],["room.dto",{"_index":809,"title":{},"body":{"controllers/RoomsController.html":{},"injectables/RoomsService.html":{},"classes/UpdateRoomDto.html":{}}}],["room.dto.ts",{"_index":404,"title":{},"body":{"classes/CreateRoomDto.html":{},"classes/UpdateRoomDto.html":{},"coverage.html":{}}}],["room.dto.ts:7",{"_index":405,"title":{},"body":{"classes/CreateRoomDto.html":{}}}],["room.entity",{"_index":825,"title":{},"body":{"modules/RoomsModule.html":{},"injectables/RoomsService.html":{}}}],["rooms",{"_index":738,"title":{},"body":{"classes/Migration20221129042732.html":{},"entities/Room.html":{},"controllers/RoomsController.html":{}}}],["rooms.controller",{"_index":824,"title":{},"body":{"modules/RoomsModule.html":{}}}],["rooms.service",{"_index":808,"title":{},"body":{"controllers/RoomsController.html":{},"modules/RoomsModule.html":{}}}],["rooms/rooms.module",{"_index":57,"title":{},"body":{"modules/AppModule.html":{}}}],["rooms_created_by_id_foreign",{"_index":739,"title":{},"body":{"classes/Migration20221129042732.html":{}}}],["roomscontroller",{"_index":799,"title":{"controllers/RoomsController.html":{}},"body":{"controllers/RoomsController.html":{},"modules/RoomsModule.html":{},"coverage.html":{}}}],["roomsmodule",{"_index":11,"title":{"modules/RoomsModule.html":{}},"body":{"modules/AppModule.html":{},"modules/RoomsModule.html":{},"modules.html":{},"overview.html":{}}}],["roomsrepository",{"_index":830,"title":{},"body":{"injectables/RoomsService.html":{}}}],["roomsservice",{"_index":807,"title":{"injectables/RoomsService.html":{}},"body":{"controllers/RoomsController.html":{},"modules/RoomsModule.html":{},"injectables/RoomsService.html":{},"coverage.html":{},"overview.html":{}}}],["run",{"_index":415,"title":{},"body":{"classes/DatabaseSeeder.html":{},"index.html":{}}}],["run(em",{"_index":416,"title":{},"body":{"classes/DatabaseSeeder.html":{}}}],["rxjs",{"_index":906,"title":{},"body":{"classes/TasksGateway.html":{},"dependencies.html":{}}}],["scalable",{"_index":1303,"title":{},"body":{"index.html":{}}}],["scrub",{"_index":853,"title":{},"body":{"entities/Task.html":{}}}],["secret",{"_index":203,"title":{},"body":{"modules/AuthModule.html":{}}}],["secretorkey",{"_index":565,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["seeder",{"_index":414,"title":{},"body":{"classes/DatabaseSeeder.html":{},"changelog.html":{}}}],["seeders/database.seeder.ts",{"_index":412,"title":{},"body":{"classes/DatabaseSeeder.html":{},"coverage.html":{}}}],["seeders/database.seeder.ts:10",{"_index":418,"title":{},"body":{"classes/DatabaseSeeder.html":{}}}],["serial",{"_index":658,"title":{},"body":{"classes/Migration20220926031634.html":{},"classes/Migration20220926214650.html":{},"classes/Migration20220926231541.html":{},"classes/Migration20221023001353.html":{},"classes/Migration20221129042732.html":{}}}],["server",{"_index":771,"title":{},"body":{"classes/RedisIoAdapter.html":{},"classes/TasksGateway.html":{},"index.html":{}}}],["server.adapter(this.adapterconstructor",{"_index":773,"title":{},"body":{"classes/RedisIoAdapter.html":{}}}],["serveroptions",{"_index":751,"title":{},"body":{"classes/RedisIoAdapter.html":{}}}],["service",{"_index":265,"title":{},"body":{"injectables/AuthService.html":{}}}],["set",{"_index":270,"title":{},"body":{"injectables/AuthService.html":{},"classes/Migration20221031000536.html":{}}}],["shelving",{"_index":852,"title":{},"body":{"entities/Task.html":{}}}],["side",{"_index":1304,"title":{},"body":{"index.html":{}}}],["signoptions",{"_index":205,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{}}}],["skip",{"_index":1227,"title":{},"body":{"changelog.html":{}}}],["smith",{"_index":955,"title":{},"body":{"entities/User.html":{}}}],["socket.io",{"_index":756,"title":{},"body":{"classes/RedisIoAdapter.html":{},"classes/TasksGateway.html":{},"dependencies.html":{}}}],["socket.io/redis",{"_index":758,"title":{},"body":{"classes/RedisIoAdapter.html":{},"dependencies.html":{}}}],["source",{"_index":18,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"entities/BaseEntity.html":{},"classes/Chore.html":{},"controllers/ChoresController.html":{},"modules/ChoresModule.html":{},"injectables/ChoresService.html":{},"classes/CreateChoreDto.html":{},"classes/CreateListDto.html":{},"classes/CreateRoomDto.html":{},"classes/CreateTaskDto.html":{},"classes/DatabaseSeeder.html":{},"interfaces/FindAllArgs.html":{},"interfaces/FindAllArgs-1.html":{},"interfaces/FindAllArgs-2.html":{},"interfaces/FindOneArgs.html":{},"interfaces/FindOneArgs-1.html":{},"interfaces/FindOneArgs-2.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"entities/List.html":{},"classes/ListFactory.html":{},"controllers/ListsController.html":{},"modules/ListsModule.html":{},"injectables/ListsService.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/LoginUserBody.html":{},"classes/LoginUserResponse.html":{},"classes/Migration20220926031634.html":{},"classes/Migration20220926213133.html":{},"classes/Migration20220926214650.html":{},"classes/Migration20220926222224.html":{},"classes/Migration20220926231541.html":{},"classes/Migration20221013014335.html":{},"classes/Migration20221023001353.html":{},"classes/Migration20221031000536.html":{},"classes/Migration20221129042732.html":{},"classes/RedisIoAdapter.html":{},"entities/RefreshToken.html":{},"classes/RefreshTokenBody.html":{},"classes/RefreshTokenResponse.html":{},"classes/RegisterUserBody.html":{},"classes/RegisterUserResponse.html":{},"entities/Room.html":{},"controllers/RoomsController.html":{},"modules/RoomsModule.html":{},"injectables/RoomsService.html":{},"entities/Task.html":{},"classes/TaskFactory.html":{},"controllers/TasksController.html":{},"classes/TasksGateway.html":{},"modules/TasksModule.html":{},"injectables/TasksService.html":{},"classes/UpdateChoreDto.html":{},"classes/UpdateListDto.html":{},"classes/UpdateProfileDto.html":{},"classes/UpdateRoomDto.html":{},"classes/UpdateTaskDto.html":{},"entities/User.html":{},"classes/UserDto.html":{},"classes/UserFactory.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"index.html":{}}}],["spec",{"_index":1126,"title":{},"body":{"changelog.html":{}}}],["specifications",{"_index":1090,"title":{},"body":{"changelog.html":{}}}],["sponsors",{"_index":1327,"title":{},"body":{"index.html":{}}}],["sqlhighlighter",{"_index":1372,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/**/*.entity.ts",{"_index":1368,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../current",{"_index":1357,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../main.ts",{"_index":1297,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/app.module.ts",{"_index":20,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app.module.ts:40",{"_index":37,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app.module.ts:47",{"_index":27,"title":{},"body":{"modules/AppModule.html":{}}}],["src/auth/auth.controller.ts",{"_index":98,"title":{},"body":{"controllers/AuthController.html":{},"coverage.html":{}}}],["src/auth/auth.controller.ts:30",{"_index":111,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:50",{"_index":121,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:68",{"_index":128,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.module.ts",{"_index":190,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/auth/auth.service.ts",{"_index":212,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/auth/auth.service.ts:110",{"_index":231,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:118",{"_index":243,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:17",{"_index":228,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:25",{"_index":250,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:45",{"_index":238,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:50",{"_index":236,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:64",{"_index":240,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:74",{"_index":246,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/decorator/current",{"_index":601,"title":{},"body":{"controllers/ListsController.html":{},"controllers/TasksController.html":{},"controllers/UsersController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/auth/dto/login",{"_index":641,"title":{},"body":{"classes/LoginUserBody.html":{},"classes/LoginUserResponse.html":{},"coverage.html":{}}}],["src/auth/dto/refresh",{"_index":783,"title":{},"body":{"classes/RefreshTokenBody.html":{},"classes/RefreshTokenResponse.html":{},"coverage.html":{}}}],["src/auth/dto/register",{"_index":789,"title":{},"body":{"classes/RegisterUserBody.html":{},"classes/RegisterUserResponse.html":{},"coverage.html":{}}}],["src/auth/entities/refresh",{"_index":774,"title":{},"body":{"entities/RefreshToken.html":{},"coverage.html":{}}}],["src/auth/guards/jwt",{"_index":544,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"controllers/ListsController.html":{},"controllers/TasksController.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["src/auth/guards/local",{"_index":632,"title":{},"body":{"injectables/LocalAuthGuard.html":{},"coverage.html":{}}}],["src/auth/strategies/jwt.strategy.ts",{"_index":548,"title":{},"body":{"injectables/JwtStrategy.html":{},"coverage.html":{}}}],["src/auth/strategies/jwt.strategy.ts:21",{"_index":553,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/auth/strategies/jwt.strategy.ts:8",{"_index":551,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/auth/strategies/local.strategy.ts",{"_index":634,"title":{},"body":{"injectables/LocalStrategy.html":{},"coverage.html":{}}}],["src/auth/strategies/local.strategy.ts:12",{"_index":638,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["src/auth/strategies/local.strategy.ts:7",{"_index":636,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["src/chores/chores.controller.ts",{"_index":336,"title":{},"body":{"controllers/ChoresController.html":{},"coverage.html":{}}}],["src/chores/chores.controller.ts:11",{"_index":344,"title":{},"body":{"controllers/ChoresController.html":{}}}],["src/chores/chores.controller.ts:16",{"_index":345,"title":{},"body":{"controllers/ChoresController.html":{}}}],["src/chores/chores.controller.ts:21",{"_index":348,"title":{},"body":{"controllers/ChoresController.html":{}}}],["src/chores/chores.controller.ts:26",{"_index":355,"title":{},"body":{"controllers/ChoresController.html":{}}}],["src/chores/chores.controller.ts:31",{"_index":351,"title":{},"body":{"controllers/ChoresController.html":{}}}],["src/chores/chores.module.ts",{"_index":376,"title":{},"body":{"modules/ChoresModule.html":{}}}],["src/chores/chores.service.ts",{"_index":378,"title":{},"body":{"injectables/ChoresService.html":{},"coverage.html":{}}}],["src/chores/chores.service.ts:11",{"_index":380,"title":{},"body":{"injectables/ChoresService.html":{}}}],["src/chores/chores.service.ts:15",{"_index":381,"title":{},"body":{"injectables/ChoresService.html":{}}}],["src/chores/chores.service.ts:19",{"_index":383,"title":{},"body":{"injectables/ChoresService.html":{}}}],["src/chores/chores.service.ts:23",{"_index":382,"title":{},"body":{"injectables/ChoresService.html":{}}}],["src/chores/chores.service.ts:7",{"_index":379,"title":{},"body":{"injectables/ChoresService.html":{}}}],["src/chores/dto/create",{"_index":388,"title":{},"body":{"classes/CreateChoreDto.html":{},"coverage.html":{}}}],["src/chores/dto/update",{"_index":931,"title":{},"body":{"classes/UpdateChoreDto.html":{},"coverage.html":{}}}],["src/chores/entities/chore.entity.ts",{"_index":334,"title":{},"body":{"classes/Chore.html":{},"coverage.html":{}}}],["src/common/adapters/redis.adapter.ts",{"_index":741,"title":{},"body":{"classes/RedisIoAdapter.html":{},"coverage.html":{}}}],["src/common/adapters/redis.adapter.ts:20",{"_index":752,"title":{},"body":{"classes/RedisIoAdapter.html":{}}}],["src/common/adapters/redis.adapter.ts:7",{"_index":747,"title":{},"body":{"classes/RedisIoAdapter.html":{}}}],["src/common/adapters/redis.adapter.ts:9",{"_index":748,"title":{},"body":{"classes/RedisIoAdapter.html":{}}}],["src/common/entities/base",{"_index":321,"title":{},"body":{"entities/BaseEntity.html":{},"coverage.html":{}}}],["src/database/factories/list.factory",{"_index":423,"title":{},"body":{"classes/DatabaseSeeder.html":{}}}],["src/database/factories/list.factory.ts",{"_index":576,"title":{},"body":{"classes/ListFactory.html":{},"coverage.html":{}}}],["src/database/factories/list.factory.ts:5",{"_index":580,"title":{},"body":{"classes/ListFactory.html":{}}}],["src/database/factories/list.factory.ts:7",{"_index":583,"title":{},"body":{"classes/ListFactory.html":{}}}],["src/database/factories/task.factory",{"_index":425,"title":{},"body":{"classes/DatabaseSeeder.html":{}}}],["src/database/factories/task.factory.ts",{"_index":860,"title":{},"body":{"classes/TaskFactory.html":{},"coverage.html":{}}}],["src/database/factories/task.factory.ts:5",{"_index":861,"title":{},"body":{"classes/TaskFactory.html":{}}}],["src/database/factories/task.factory.ts:7",{"_index":862,"title":{},"body":{"classes/TaskFactory.html":{}}}],["src/database/factories/user.factory",{"_index":427,"title":{},"body":{"classes/DatabaseSeeder.html":{}}}],["src/database/factories/user.factory.ts",{"_index":999,"title":{},"body":{"classes/UserFactory.html":{},"coverage.html":{}}}],["src/database/factories/user.factory.ts:6",{"_index":1000,"title":{},"body":{"classes/UserFactory.html":{}}}],["src/database/factories/user.factory.ts:8",{"_index":1001,"title":{},"body":{"classes/UserFactory.html":{}}}],["src/database/migrations",{"_index":1380,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/database/migrations/migration20220926031634.ts",{"_index":651,"title":{},"body":{"classes/Migration20220926031634.html":{},"coverage.html":{}}}],["src/database/migrations/migration20220926031634.ts:4",{"_index":654,"title":{},"body":{"classes/Migration20220926031634.html":{}}}],["src/database/migrations/migration20220926213133.ts",{"_index":683,"title":{},"body":{"classes/Migration20220926213133.html":{},"coverage.html":{}}}],["src/database/migrations/migration20220926213133.ts:15",{"_index":685,"title":{},"body":{"classes/Migration20220926213133.html":{}}}],["src/database/migrations/migration20220926213133.ts:4",{"_index":686,"title":{},"body":{"classes/Migration20220926213133.html":{}}}],["src/database/migrations/migration20220926214650.ts",{"_index":693,"title":{},"body":{"classes/Migration20220926214650.html":{},"coverage.html":{}}}],["src/database/migrations/migration20220926214650.ts:16",{"_index":694,"title":{},"body":{"classes/Migration20220926214650.html":{}}}],["src/database/migrations/migration20220926214650.ts:4",{"_index":695,"title":{},"body":{"classes/Migration20220926214650.html":{}}}],["src/database/migrations/migration20220926222224.ts",{"_index":701,"title":{},"body":{"classes/Migration20220926222224.html":{},"coverage.html":{}}}],["src/database/migrations/migration20220926222224.ts:14",{"_index":702,"title":{},"body":{"classes/Migration20220926222224.html":{}}}],["src/database/migrations/migration20220926222224.ts:4",{"_index":703,"title":{},"body":{"classes/Migration20220926222224.html":{}}}],["src/database/migrations/migration20220926231541.ts",{"_index":705,"title":{},"body":{"classes/Migration20220926231541.html":{},"coverage.html":{}}}],["src/database/migrations/migration20220926231541.ts:17",{"_index":706,"title":{},"body":{"classes/Migration20220926231541.html":{}}}],["src/database/migrations/migration20220926231541.ts:4",{"_index":707,"title":{},"body":{"classes/Migration20220926231541.html":{}}}],["src/database/migrations/migration20221013014335.ts",{"_index":713,"title":{},"body":{"classes/Migration20221013014335.html":{},"coverage.html":{}}}],["src/database/migrations/migration20221013014335.ts:13",{"_index":714,"title":{},"body":{"classes/Migration20221013014335.html":{}}}],["src/database/migrations/migration20221013014335.ts:4",{"_index":715,"title":{},"body":{"classes/Migration20221013014335.html":{}}}],["src/database/migrations/migration20221023001353.ts",{"_index":720,"title":{},"body":{"classes/Migration20221023001353.html":{},"coverage.html":{}}}],["src/database/migrations/migration20221023001353.ts:14",{"_index":721,"title":{},"body":{"classes/Migration20221023001353.html":{}}}],["src/database/migrations/migration20221023001353.ts:5",{"_index":722,"title":{},"body":{"classes/Migration20221023001353.html":{}}}],["src/database/migrations/migration20221031000536.ts",{"_index":728,"title":{},"body":{"classes/Migration20221031000536.html":{},"coverage.html":{}}}],["src/database/migrations/migration20221031000536.ts:17",{"_index":729,"title":{},"body":{"classes/Migration20221031000536.html":{}}}],["src/database/migrations/migration20221031000536.ts:4",{"_index":730,"title":{},"body":{"classes/Migration20221031000536.html":{}}}],["src/database/migrations/migration20221129042732.ts",{"_index":735,"title":{},"body":{"classes/Migration20221129042732.html":{},"coverage.html":{}}}],["src/database/migrations/migration20221129042732.ts:11",{"_index":736,"title":{},"body":{"classes/Migration20221129042732.html":{}}}],["src/database/migrations/migration20221129042732.ts:5",{"_index":737,"title":{},"body":{"classes/Migration20221129042732.html":{}}}],["src/health/health.controller.ts",{"_index":515,"title":{},"body":{"controllers/HealthController.html":{},"coverage.html":{}}}],["src/health/health.controller.ts:19",{"_index":520,"title":{},"body":{"controllers/HealthController.html":{}}}],["src/health/health.controller.ts:25",{"_index":522,"title":{},"body":{"controllers/HealthController.html":{}}}],["src/health/health.module.ts",{"_index":538,"title":{},"body":{"modules/HealthModule.html":{}}}],["src/lists/dto/create",{"_index":391,"title":{},"body":{"classes/CreateListDto.html":{},"coverage.html":{}}}],["src/lists/dto/update",{"_index":934,"title":{},"body":{"classes/UpdateListDto.html":{},"coverage.html":{}}}],["src/lists/list.entity.ts",{"_index":566,"title":{},"body":{"entities/List.html":{},"coverage.html":{}}}],["src/lists/list.entity.ts:11",{"_index":570,"title":{},"body":{"entities/List.html":{}}}],["src/lists/list.entity.ts:14",{"_index":568,"title":{},"body":{"entities/List.html":{}}}],["src/lists/list.entity.ts:8",{"_index":571,"title":{},"body":{"entities/List.html":{}}}],["src/lists/lists.controller.ts",{"_index":588,"title":{},"body":{"controllers/ListsController.html":{},"coverage.html":{}}}],["src/lists/lists.controller.ts:25",{"_index":591,"title":{},"body":{"controllers/ListsController.html":{}}}],["src/lists/lists.controller.ts:30",{"_index":592,"title":{},"body":{"controllers/ListsController.html":{}}}],["src/lists/lists.controller.ts:35",{"_index":593,"title":{},"body":{"controllers/ListsController.html":{}}}],["src/lists/lists.controller.ts:41",{"_index":597,"title":{},"body":{"controllers/ListsController.html":{}}}],["src/lists/lists.controller.ts:54",{"_index":595,"title":{},"body":{"controllers/ListsController.html":{}}}],["src/lists/lists.module.ts",{"_index":619,"title":{},"body":{"modules/ListsModule.html":{}}}],["src/lists/lists.service.ts",{"_index":443,"title":{},"body":{"interfaces/FindAllArgs.html":{},"interfaces/FindOneArgs.html":{},"injectables/ListsService.html":{},"coverage.html":{}}}],["src/lists/lists.service.ts:18",{"_index":625,"title":{},"body":{"injectables/ListsService.html":{}}}],["src/lists/lists.service.ts:24",{"_index":626,"title":{},"body":{"injectables/ListsService.html":{}}}],["src/lists/lists.service.ts:35",{"_index":627,"title":{},"body":{"injectables/ListsService.html":{}}}],["src/lists/lists.service.ts:39",{"_index":629,"title":{},"body":{"injectables/ListsService.html":{}}}],["src/lists/lists.service.ts:51",{"_index":631,"title":{},"body":{"injectables/ListsService.html":{}}}],["src/lists/lists.service.ts:58",{"_index":630,"title":{},"body":{"injectables/ListsService.html":{}}}],["src/main.ts",{"_index":1254,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/rooms/dto/create",{"_index":403,"title":{},"body":{"classes/CreateRoomDto.html":{},"coverage.html":{}}}],["src/rooms/dto/update",{"_index":945,"title":{},"body":{"classes/UpdateRoomDto.html":{},"coverage.html":{}}}],["src/rooms/room.entity.ts",{"_index":791,"title":{},"body":{"entities/Room.html":{},"coverage.html":{}}}],["src/rooms/room.entity.ts:13",{"_index":797,"title":{},"body":{"entities/Room.html":{}}}],["src/rooms/room.entity.ts:19",{"_index":793,"title":{},"body":{"entities/Room.html":{}}}],["src/rooms/rooms.controller.ts",{"_index":800,"title":{},"body":{"controllers/RoomsController.html":{},"coverage.html":{}}}],["src/rooms/rooms.controller.ts:27",{"_index":801,"title":{},"body":{"controllers/RoomsController.html":{}}}],["src/rooms/rooms.controller.ts:32",{"_index":802,"title":{},"body":{"controllers/RoomsController.html":{}}}],["src/rooms/rooms.controller.ts:37",{"_index":803,"title":{},"body":{"controllers/RoomsController.html":{}}}],["src/rooms/rooms.controller.ts:42",{"_index":806,"title":{},"body":{"controllers/RoomsController.html":{}}}],["src/rooms/rooms.controller.ts:47",{"_index":804,"title":{},"body":{"controllers/RoomsController.html":{}}}],["src/rooms/rooms.module.ts",{"_index":823,"title":{},"body":{"modules/RoomsModule.html":{}}}],["src/rooms/rooms.service.ts",{"_index":827,"title":{},"body":{"injectables/RoomsService.html":{},"coverage.html":{}}}],["src/rooms/rooms.service.ts:15",{"_index":831,"title":{},"body":{"injectables/RoomsService.html":{}}}],["src/rooms/rooms.service.ts:26",{"_index":832,"title":{},"body":{"injectables/RoomsService.html":{}}}],["src/rooms/rooms.service.ts:30",{"_index":833,"title":{},"body":{"injectables/RoomsService.html":{}}}],["src/rooms/rooms.service.ts:42",{"_index":835,"title":{},"body":{"injectables/RoomsService.html":{}}}],["src/rooms/rooms.service.ts:49",{"_index":834,"title":{},"body":{"injectables/RoomsService.html":{}}}],["src/rooms/rooms.service.ts:9",{"_index":829,"title":{},"body":{"injectables/RoomsService.html":{}}}],["src/tasks/dto/create",{"_index":407,"title":{},"body":{"classes/CreateTaskDto.html":{},"coverage.html":{}}}],["src/tasks/dto/update",{"_index":947,"title":{},"body":{"classes/UpdateTaskDto.html":{},"coverage.html":{}}}],["src/tasks/task.entity.ts",{"_index":845,"title":{},"body":{"entities/Task.html":{},"coverage.html":{}}}],["src/tasks/task.entity.ts:14",{"_index":859,"title":{},"body":{"entities/Task.html":{}}}],["src/tasks/task.entity.ts:21",{"_index":854,"title":{},"body":{"entities/Task.html":{}}}],["src/tasks/task.entity.ts:27",{"_index":849,"title":{},"body":{"entities/Task.html":{}}}],["src/tasks/task.entity.ts:33",{"_index":856,"title":{},"body":{"entities/Task.html":{}}}],["src/tasks/task.entity.ts:37",{"_index":848,"title":{},"body":{"entities/Task.html":{}}}],["src/tasks/tasks.controller.ts",{"_index":865,"title":{},"body":{"controllers/TasksController.html":{},"coverage.html":{}}}],["src/tasks/tasks.controller.ts:35",{"_index":867,"title":{},"body":{"controllers/TasksController.html":{}}}],["src/tasks/tasks.controller.ts:40",{"_index":868,"title":{},"body":{"controllers/TasksController.html":{}}}],["src/tasks/tasks.controller.ts:50",{"_index":872,"title":{},"body":{"controllers/TasksController.html":{}}}],["src/tasks/tasks.controller.ts:55",{"_index":874,"title":{},"body":{"controllers/TasksController.html":{}}}],["src/tasks/tasks.controller.ts:67",{"_index":873,"title":{},"body":{"controllers/TasksController.html":{}}}],["src/tasks/tasks.gateway.ts",{"_index":888,"title":{},"body":{"classes/TasksGateway.html":{},"coverage.html":{}}}],["src/tasks/tasks.gateway.ts:18",{"_index":891,"title":{},"body":{"classes/TasksGateway.html":{}}}],["src/tasks/tasks.gateway.ts:21",{"_index":894,"title":{},"body":{"classes/TasksGateway.html":{}}}],["src/tasks/tasks.gateway.ts:28",{"_index":899,"title":{},"body":{"classes/TasksGateway.html":{}}}],["src/tasks/tasks.module.ts",{"_index":920,"title":{},"body":{"modules/TasksModule.html":{}}}],["src/tasks/tasks.service.ts",{"_index":470,"title":{},"body":{"interfaces/FindAllArgs-1.html":{},"interfaces/FindOneArgs-1.html":{},"injectables/TasksService.html":{},"coverage.html":{}}}],["src/tasks/tasks.service.ts:18",{"_index":925,"title":{},"body":{"injectables/TasksService.html":{}}}],["src/tasks/tasks.service.ts:24",{"_index":926,"title":{},"body":{"injectables/TasksService.html":{}}}],["src/tasks/tasks.service.ts:35",{"_index":927,"title":{},"body":{"injectables/TasksService.html":{}}}],["src/tasks/tasks.service.ts:39",{"_index":928,"title":{},"body":{"injectables/TasksService.html":{}}}],["src/tasks/tasks.service.ts:51",{"_index":930,"title":{},"body":{"injectables/TasksService.html":{}}}],["src/tasks/tasks.service.ts:58",{"_index":929,"title":{},"body":{"injectables/TasksService.html":{}}}],["src/users/dto/update",{"_index":938,"title":{},"body":{"classes/UpdateProfileDto.html":{},"coverage.html":{}}}],["src/users/dto/user.dto.ts",{"_index":979,"title":{},"body":{"classes/UserDto.html":{},"coverage.html":{}}}],["src/users/dto/user.dto.ts:16",{"_index":984,"title":{},"body":{"classes/UserDto.html":{}}}],["src/users/dto/user.dto.ts:20",{"_index":986,"title":{},"body":{"classes/UserDto.html":{}}}],["src/users/dto/user.dto.ts:24",{"_index":983,"title":{},"body":{"classes/UserDto.html":{}}}],["src/users/dto/user.dto.ts:28",{"_index":985,"title":{},"body":{"classes/UserDto.html":{}}}],["src/users/dto/user.dto.ts:7",{"_index":981,"title":{},"body":{"classes/UserDto.html":{}}}],["src/users/user.entity",{"_index":421,"title":{},"body":{"classes/DatabaseSeeder.html":{},"controllers/ListsController.html":{},"controllers/TasksController.html":{}}}],["src/users/user.entity.ts",{"_index":949,"title":{},"body":{"entities/User.html":{},"coverage.html":{}}}],["src/users/user.entity.ts:22",{"_index":973,"title":{},"body":{"entities/User.html":{}}}],["src/users/user.entity.ts:26",{"_index":965,"title":{},"body":{"entities/User.html":{}}}],["src/users/user.entity.ts:33",{"_index":954,"title":{},"body":{"entities/User.html":{}}}],["src/users/user.entity.ts:40",{"_index":957,"title":{},"body":{"entities/User.html":{}}}],["src/users/user.entity.ts:48",{"_index":962,"title":{},"body":{"entities/User.html":{}}}],["src/users/user.entity.ts:54",{"_index":968,"title":{},"body":{"entities/User.html":{}}}],["src/users/users.controller.ts",{"_index":1007,"title":{},"body":{"controllers/UsersController.html":{},"coverage.html":{}}}],["src/users/users.controller.ts:23",{"_index":1009,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.controller.ts:34",{"_index":1012,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.controller.ts:44",{"_index":1019,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.controller.ts:57",{"_index":1015,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.module",{"_index":921,"title":{},"body":{"modules/TasksModule.html":{}}}],["src/users/users.module.ts",{"_index":1038,"title":{},"body":{"modules/UsersModule.html":{}}}],["src/users/users.service.ts",{"_index":489,"title":{},"body":{"interfaces/FindAllArgs-2.html":{},"interfaces/FindOneArgs-2.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["src/users/users.service.ts:21",{"_index":1042,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:27",{"_index":1043,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:33",{"_index":1045,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:37",{"_index":1046,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:51",{"_index":1048,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:58",{"_index":1047,"title":{},"body":{"injectables/UsersService.html":{}}}],["start",{"_index":1076,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["start:dev",{"_index":1313,"title":{},"body":{"index.html":{}}}],["start:prodtest",{"_index":1315,"title":{},"body":{"index.html":{}}}],["started",{"_index":1050,"title":{"changelog.html":{},"index.html":{}},"body":{}}],["starter",{"_index":1064,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["statements",{"_index":1242,"title":{},"body":{"coverage.html":{}}}],["status",{"_index":883,"title":{},"body":{"controllers/TasksController.html":{},"controllers/UsersController.html":{}}}],["stay",{"_index":1335,"title":{},"body":{"index.html":{}}}],["strategies/jwt.strategy",{"_index":199,"title":{},"body":{"modules/AuthModule.html":{}}}],["strategies/local.strategy",{"_index":200,"title":{},"body":{"modules/AuthModule.html":{}}}],["strategy",{"_index":555,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["string",{"_index":230,"title":{},"body":{"injectables/AuthService.html":{},"controllers/ChoresController.html":{},"injectables/ChoresService.html":{},"classes/CreateListDto.html":{},"classes/CreateRoomDto.html":{},"classes/CreateTaskDto.html":{},"interfaces/FindAllArgs.html":{},"interfaces/FindAllArgs-1.html":{},"interfaces/FindAllArgs-2.html":{},"interfaces/FindOneArgs.html":{},"interfaces/FindOneArgs-1.html":{},"interfaces/FindOneArgs-2.html":{},"entities/List.html":{},"controllers/ListsController.html":{},"injectables/ListsService.html":{},"injectables/LocalStrategy.html":{},"classes/LoginUserBody.html":{},"classes/LoginUserResponse.html":{},"classes/RefreshTokenBody.html":{},"classes/RefreshTokenResponse.html":{},"classes/RegisterUserBody.html":{},"classes/RegisterUserResponse.html":{},"entities/Room.html":{},"controllers/RoomsController.html":{},"entities/Task.html":{},"controllers/TasksController.html":{},"injectables/TasksService.html":{},"classes/UpdateProfileDto.html":{},"entities/User.html":{},"classes/UserDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["string(token.id",{"_index":296,"title":{},"body":{"injectables/AuthService.html":{}}}],["string(user.id",{"_index":285,"title":{},"body":{"injectables/AuthService.html":{}}}],["sub",{"_index":284,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["subclient",{"_index":765,"title":{},"body":{"classes/RedisIoAdapter.html":{}}}],["subclient.connect",{"_index":768,"title":{},"body":{"classes/RedisIoAdapter.html":{}}}],["subscribemessage",{"_index":901,"title":{},"body":{"classes/TasksGateway.html":{}}}],["subscribemessage('events",{"_index":893,"title":{},"body":{"classes/TasksGateway.html":{}}}],["subscribemessage('identity",{"_index":898,"title":{},"body":{"classes/TasksGateway.html":{}}}],["summary",{"_index":880,"title":{},"body":{"controllers/TasksController.html":{}}}],["super",{"_index":560,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["super.createioserver(port",{"_index":772,"title":{},"body":{"classes/RedisIoAdapter.html":{}}}],["support",{"_index":1328,"title":{},"body":{"index.html":{},"modules.html":{}}}],["sure",{"_index":851,"title":{},"body":{"entities/Task.html":{}}}],["svg",{"_index":1346,"title":{},"body":{"modules.html":{}}}],["swagger",{"_index":1089,"title":{},"body":{"changelog.html":{}}}],["sync",{"_index":1131,"title":{},"body":{"changelog.html":{}}}],["table",{"_index":657,"title":{},"body":{"classes/Migration20220926031634.html":{},"classes/Migration20220926213133.html":{},"classes/Migration20220926214650.html":{},"classes/Migration20220926222224.html":{},"classes/Migration20220926231541.html":{},"classes/Migration20221013014335.html":{},"classes/Migration20221023001353.html":{},"classes/Migration20221031000536.html":{},"classes/Migration20221129042732.html":{},"coverage.html":{}}}],["tablename",{"_index":574,"title":{},"body":{"entities/List.html":{},"entities/RefreshToken.html":{},"entities/Room.html":{},"entities/Task.html":{},"entities/User.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":1260,"title":{},"body":{"coverage.html":{}}}],["task",{"_index":473,"title":{"entities/Task.html":{}},"body":{"interfaces/FindAllArgs-1.html":{},"interfaces/FindOneArgs-1.html":{},"entities/Room.html":{},"entities/Task.html":{},"classes/TaskFactory.html":{},"controllers/TasksController.html":{},"modules/TasksModule.html":{},"injectables/TasksService.html":{},"changelog.html":{},"coverage.html":{}}}],["task.createdby",{"_index":431,"title":{},"body":{"classes/DatabaseSeeder.html":{}}}],["task.dto",{"_index":471,"title":{},"body":{"interfaces/FindAllArgs-1.html":{},"interfaces/FindOneArgs-1.html":{},"controllers/TasksController.html":{},"injectables/TasksService.html":{},"classes/UpdateTaskDto.html":{}}}],["task.dto.ts",{"_index":408,"title":{},"body":{"classes/CreateTaskDto.html":{},"classes/UpdateTaskDto.html":{},"coverage.html":{}}}],["task.dto.ts:12",{"_index":409,"title":{},"body":{"classes/CreateTaskDto.html":{}}}],["task.dto.ts:7",{"_index":410,"title":{},"body":{"classes/CreateTaskDto.html":{}}}],["task.entity",{"_index":474,"title":{},"body":{"interfaces/FindAllArgs-1.html":{},"interfaces/FindOneArgs-1.html":{},"controllers/TasksController.html":{},"modules/TasksModule.html":{},"injectables/TasksService.html":{}}}],["task.list",{"_index":435,"title":{},"body":{"classes/DatabaseSeeder.html":{}}}],["taskfactory",{"_index":424,"title":{"classes/TaskFactory.html":{}},"body":{"classes/DatabaseSeeder.html":{},"classes/TaskFactory.html":{},"coverage.html":{}}}],["taskfactory(em",{"_index":429,"title":{},"body":{"classes/DatabaseSeeder.html":{}}}],["tasks",{"_index":724,"title":{},"body":{"classes/Migration20221023001353.html":{},"classes/Migration20221031000536.html":{},"entities/Task.html":{},"controllers/TasksController.html":{}}}],["tasks.controller",{"_index":922,"title":{},"body":{"modules/TasksModule.html":{}}}],["tasks.service",{"_index":877,"title":{},"body":{"controllers/TasksController.html":{},"modules/TasksModule.html":{}}}],["tasks/task.entity",{"_index":863,"title":{},"body":{"classes/TaskFactory.html":{}}}],["tasks/tasks.module",{"_index":55,"title":{},"body":{"modules/AppModule.html":{}}}],["tasks_created_by_id_foreign",{"_index":725,"title":{},"body":{"classes/Migration20221023001353.html":{}}}],["tasks_list_id_foreign",{"_index":726,"title":{},"body":{"classes/Migration20221023001353.html":{}}}],["taskscontroller",{"_index":864,"title":{"controllers/TasksController.html":{}},"body":{"controllers/TasksController.html":{},"modules/TasksModule.html":{},"coverage.html":{}}}],["tasksgateway",{"_index":887,"title":{"classes/TasksGateway.html":{}},"body":{"classes/TasksGateway.html":{},"coverage.html":{}}}],["tasksmodule",{"_index":12,"title":{"modules/TasksModule.html":{}},"body":{"modules/AppModule.html":{},"modules/TasksModule.html":{},"modules.html":{},"overview.html":{}}}],["tasksrepository",{"_index":477,"title":{},"body":{"interfaces/FindAllArgs-1.html":{},"interfaces/FindOneArgs-1.html":{},"injectables/TasksService.html":{}}}],["tasksservice",{"_index":475,"title":{"injectables/TasksService.html":{}},"body":{"interfaces/FindAllArgs-1.html":{},"interfaces/FindOneArgs-1.html":{},"controllers/TasksController.html":{},"modules/TasksModule.html":{},"injectables/TasksService.html":{},"coverage.html":{},"overview.html":{}}}],["temp",{"_index":1193,"title":{},"body":{"changelog.html":{}}}],["template",{"_index":1065,"title":{},"body":{"changelog.html":{}}}],["terminusmodule",{"_index":541,"title":{},"body":{"modules/HealthModule.html":{}}}],["test",{"_index":1102,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["test:covsupport",{"_index":1320,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":1319,"title":{},"body":{"index.html":{}}}],["testing",{"_index":1185,"title":{},"body":{"changelog.html":{}}}],["tests",{"_index":1317,"title":{},"body":{"index.html":{}}}],["thanks",{"_index":1326,"title":{},"body":{"index.html":{}}}],["this.adapterconstructor",{"_index":769,"title":{},"body":{"classes/RedisIoAdapter.html":{}}}],["this.addsql",{"_index":656,"title":{},"body":{"classes/Migration20220926031634.html":{},"classes/Migration20220926213133.html":{},"classes/Migration20220926214650.html":{},"classes/Migration20220926222224.html":{},"classes/Migration20220926231541.html":{},"classes/Migration20221013014335.html":{},"classes/Migration20221031000536.html":{}}}],["this.addsql('alter",{"_index":690,"title":{},"body":{"classes/Migration20220926213133.html":{},"classes/Migration20221013014335.html":{},"classes/Migration20221023001353.html":{},"classes/Migration20221031000536.html":{},"classes/Migration20221129042732.html":{}}}],["this.addsql('create",{"_index":723,"title":{},"body":{"classes/Migration20221023001353.html":{},"classes/Migration20221129042732.html":{}}}],["this.addsql('drop",{"_index":698,"title":{},"body":{"classes/Migration20220926214650.html":{},"classes/Migration20220926231541.html":{},"classes/Migration20221023001353.html":{},"classes/Migration20221129042732.html":{}}}],["this.authservice.createaccesstokenfromrefreshtoken",{"_index":176,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.generateaccesstoken(req.user",{"_index":161,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.generateaccesstoken(user",{"_index":184,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.generaterefreshtoken",{"_index":163,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.register",{"_index":181,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.validateuser(username",{"_index":640,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["this.choresservice.create(createchoredto",{"_index":366,"title":{},"body":{"controllers/ChoresController.html":{}}}],["this.choresservice.findall",{"_index":367,"title":{},"body":{"controllers/ChoresController.html":{}}}],["this.choresservice.findone(+id",{"_index":369,"title":{},"body":{"controllers/ChoresController.html":{}}}],["this.choresservice.remove(+id",{"_index":373,"title":{},"body":{"controllers/ChoresController.html":{}}}],["this.choresservice.update(+id",{"_index":371,"title":{},"body":{"controllers/ChoresController.html":{}}}],["this.createrefreshtoken(user",{"_index":293,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.db.pingcheck('database",{"_index":533,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.generateaccesstoken(user",{"_index":315,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.health.check",{"_index":532,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.jwtservice.signasync",{"_index":294,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.jwtservice.signasync(payload",{"_index":286,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.jwtservice.verify(encoded",{"_index":298,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.listsrepository.assign(post",{"_index":466,"title":{},"body":{"interfaces/FindAllArgs.html":{},"interfaces/FindOneArgs.html":{},"injectables/ListsService.html":{}}}],["this.listsrepository.create",{"_index":457,"title":{},"body":{"interfaces/FindAllArgs.html":{},"interfaces/FindOneArgs.html":{},"injectables/ListsService.html":{}}}],["this.listsrepository.findall",{"_index":461,"title":{},"body":{"interfaces/FindAllArgs.html":{},"interfaces/FindOneArgs.html":{},"injectables/ListsService.html":{}}}],["this.listsrepository.findone(id",{"_index":465,"title":{},"body":{"interfaces/FindAllArgs.html":{},"interfaces/FindOneArgs.html":{},"injectables/ListsService.html":{}}}],["this.listsrepository.findoneorfail",{"_index":462,"title":{},"body":{"interfaces/FindAllArgs.html":{},"interfaces/FindOneArgs.html":{},"injectables/ListsService.html":{}}}],["this.listsrepository.flush",{"_index":467,"title":{},"body":{"interfaces/FindAllArgs.html":{},"interfaces/FindOneArgs.html":{},"injectables/ListsService.html":{}}}],["this.listsrepository.persistandflush(list",{"_index":460,"title":{},"body":{"interfaces/FindAllArgs.html":{},"interfaces/FindOneArgs.html":{},"injectables/ListsService.html":{}}}],["this.listsrepository.removeandflush",{"_index":468,"title":{},"body":{"interfaces/FindAllArgs.html":{},"interfaces/FindOneArgs.html":{},"injectables/ListsService.html":{}}}],["this.listsservice.create(user.id",{"_index":607,"title":{},"body":{"controllers/ListsController.html":{}}}],["this.listsservice.findall",{"_index":608,"title":{},"body":{"controllers/ListsController.html":{}}}],["this.listsservice.findone",{"_index":609,"title":{},"body":{"controllers/ListsController.html":{}}}],["this.listsservice.remove(+id",{"_index":615,"title":{},"body":{"controllers/ListsController.html":{}}}],["this.listsservice.update(+id",{"_index":611,"title":{},"body":{"controllers/ListsController.html":{}}}],["this.logger.log(plaintextpassword",{"_index":279,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.memory.checkheap('memory_heap",{"_index":535,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.orm.getmigrator().up",{"_index":73,"title":{},"body":{"modules/AppModule.html":{}}}],["this.refreshtokenrepository.create",{"_index":290,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.refreshtokenrepository.findone",{"_index":304,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.refreshtokenrepository.persistandflush(token",{"_index":292,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.resolverefreshtoken(refresh",{"_index":314,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.roomsrepository.assign(room",{"_index":842,"title":{},"body":{"injectables/RoomsService.html":{}}}],["this.roomsrepository.create",{"_index":837,"title":{},"body":{"injectables/RoomsService.html":{}}}],["this.roomsrepository.findall",{"_index":839,"title":{},"body":{"injectables/RoomsService.html":{}}}],["this.roomsrepository.findone(id",{"_index":841,"title":{},"body":{"injectables/RoomsService.html":{}}}],["this.roomsrepository.findoneorfail",{"_index":840,"title":{},"body":{"injectables/RoomsService.html":{}}}],["this.roomsrepository.flush",{"_index":843,"title":{},"body":{"injectables/RoomsService.html":{}}}],["this.roomsrepository.persistandflush(room",{"_index":838,"title":{},"body":{"injectables/RoomsService.html":{}}}],["this.roomsrepository.removeandflush",{"_index":844,"title":{},"body":{"injectables/RoomsService.html":{}}}],["this.roomsservice.create(user.id",{"_index":815,"title":{},"body":{"controllers/RoomsController.html":{}}}],["this.roomsservice.findall",{"_index":816,"title":{},"body":{"controllers/RoomsController.html":{}}}],["this.roomsservice.findone(+id",{"_index":817,"title":{},"body":{"controllers/RoomsController.html":{}}}],["this.roomsservice.remove(+id",{"_index":819,"title":{},"body":{"controllers/RoomsController.html":{}}}],["this.roomsservice.update(+id",{"_index":818,"title":{},"body":{"controllers/RoomsController.html":{}}}],["this.tasksrepository.assign(post",{"_index":485,"title":{},"body":{"interfaces/FindAllArgs-1.html":{},"interfaces/FindOneArgs-1.html":{},"injectables/TasksService.html":{}}}],["this.tasksrepository.create",{"_index":479,"title":{},"body":{"interfaces/FindAllArgs-1.html":{},"interfaces/FindOneArgs-1.html":{},"injectables/TasksService.html":{}}}],["this.tasksrepository.findall",{"_index":481,"title":{},"body":{"interfaces/FindAllArgs-1.html":{},"interfaces/FindOneArgs-1.html":{},"injectables/TasksService.html":{}}}],["this.tasksrepository.findone(id",{"_index":484,"title":{},"body":{"interfaces/FindAllArgs-1.html":{},"interfaces/FindOneArgs-1.html":{},"injectables/TasksService.html":{}}}],["this.tasksrepository.findoneorfail",{"_index":482,"title":{},"body":{"interfaces/FindAllArgs-1.html":{},"interfaces/FindOneArgs-1.html":{},"injectables/TasksService.html":{}}}],["this.tasksrepository.flush",{"_index":486,"title":{},"body":{"interfaces/FindAllArgs-1.html":{},"interfaces/FindOneArgs-1.html":{},"injectables/TasksService.html":{}}}],["this.tasksrepository.persistandflush(task",{"_index":480,"title":{},"body":{"interfaces/FindAllArgs-1.html":{},"interfaces/FindOneArgs-1.html":{},"injectables/TasksService.html":{}}}],["this.tasksrepository.removeandflush",{"_index":487,"title":{},"body":{"interfaces/FindAllArgs-1.html":{},"interfaces/FindOneArgs-1.html":{},"injectables/TasksService.html":{}}}],["this.tasksservice.create(user.id",{"_index":881,"title":{},"body":{"controllers/TasksController.html":{}}}],["this.tasksservice.findall",{"_index":882,"title":{},"body":{"controllers/TasksController.html":{}}}],["this.tasksservice.findone",{"_index":884,"title":{},"body":{"controllers/TasksController.html":{}}}],["this.tasksservice.remove(+id",{"_index":886,"title":{},"body":{"controllers/TasksController.html":{}}}],["this.tasksservice.update(+id",{"_index":885,"title":{},"body":{"controllers/TasksController.html":{}}}],["this.usersrepository.assign(user",{"_index":511,"title":{},"body":{"interfaces/FindAllArgs-2.html":{},"interfaces/FindOneArgs-2.html":{},"injectables/UsersService.html":{}}}],["this.usersrepository.create(createuserinput",{"_index":500,"title":{},"body":{"interfaces/FindAllArgs-2.html":{},"interfaces/FindOneArgs-2.html":{},"injectables/UsersService.html":{}}}],["this.usersrepository.find",{"_index":502,"title":{},"body":{"interfaces/FindAllArgs-2.html":{},"interfaces/FindOneArgs-2.html":{},"injectables/UsersService.html":{}}}],["this.usersrepository.findone",{"_index":503,"title":{},"body":{"interfaces/FindAllArgs-2.html":{},"interfaces/FindOneArgs-2.html":{},"injectables/UsersService.html":{}}}],["this.usersrepository.findoneorfail(id",{"_index":510,"title":{},"body":{"interfaces/FindAllArgs-2.html":{},"interfaces/FindOneArgs-2.html":{},"injectables/UsersService.html":{}}}],["this.usersrepository.flush",{"_index":512,"title":{},"body":{"interfaces/FindAllArgs-2.html":{},"interfaces/FindOneArgs-2.html":{},"injectables/UsersService.html":{}}}],["this.usersrepository.persistandflush(user",{"_index":501,"title":{},"body":{"interfaces/FindAllArgs-2.html":{},"interfaces/FindOneArgs-2.html":{},"injectables/UsersService.html":{}}}],["this.usersrepository.removeandflush",{"_index":513,"title":{},"body":{"interfaces/FindAllArgs-2.html":{},"interfaces/FindOneArgs-2.html":{},"injectables/UsersService.html":{}}}],["this.usersservice.create",{"_index":318,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.usersservice.findall",{"_index":1024,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.usersservice.findone",{"_index":278,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"controllers/UsersController.html":{}}}],["this.usersservice.update(user.id",{"_index":1031,"title":{},"body":{"controllers/UsersController.html":{}}}],["throw",{"_index":301,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/FindAllArgs-2.html":{},"interfaces/FindOneArgs-2.html":{},"controllers/ListsController.html":{},"injectables/LocalStrategy.html":{},"controllers/TasksController.html":{},"injectables/UsersService.html":{}}}],["timestamptz(0",{"_index":662,"title":{},"body":{"classes/Migration20220926031634.html":{},"classes/Migration20220926214650.html":{},"classes/Migration20220926231541.html":{},"classes/Migration20221023001353.html":{},"classes/Migration20221129042732.html":{}}}],["title",{"_index":393,"title":{},"body":{"classes/CreateListDto.html":{},"classes/CreateTaskDto.html":{},"entities/List.html":{},"classes/ListFactory.html":{},"classes/Migration20220926031634.html":{},"classes/Migration20220926214650.html":{},"classes/Migration20220926231541.html":{},"classes/Migration20221023001353.html":{},"entities/Task.html":{},"classes/TaskFactory.html":{}}}],["todo",{"_index":262,"title":{},"body":{"injectables/AuthService.html":{},"changelog.html":{}}}],["todo_id",{"_index":709,"title":{},"body":{"classes/Migration20220926231541.html":{},"classes/Migration20221013014335.html":{}}}],["todos",{"_index":708,"title":{},"body":{"classes/Migration20220926231541.html":{},"classes/Migration20221013014335.html":{},"classes/Migration20221023001353.html":{},"changelog.html":{}}}],["todos_created_by_id_foreign",{"_index":710,"title":{},"body":{"classes/Migration20220926231541.html":{},"classes/Migration20221023001353.html":{}}}],["todos_list_id_foreign",{"_index":718,"title":{},"body":{"classes/Migration20221013014335.html":{},"classes/Migration20221023001353.html":{}}}],["todos_todo_id_foreign",{"_index":711,"title":{},"body":{"classes/Migration20220926231541.html":{},"classes/Migration20221013014335.html":{}}}],["token",{"_index":119,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"changelog.html":{}}}],["token.body",{"_index":147,"title":{},"body":{"controllers/AuthController.html":{}}}],["token.body.ts",{"_index":784,"title":{},"body":{"classes/RefreshTokenBody.html":{},"coverage.html":{}}}],["token.body.ts:5",{"_index":785,"title":{},"body":{"classes/RefreshTokenBody.html":{}}}],["token.entity",{"_index":198,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"entities/User.html":{}}}],["token.entity.ts",{"_index":775,"title":{},"body":{"entities/RefreshToken.html":{},"coverage.html":{}}}],["token.entity.ts:11",{"_index":778,"title":{},"body":{"entities/RefreshToken.html":{}}}],["token.entity.ts:14",{"_index":776,"title":{},"body":{"entities/RefreshToken.html":{}}}],["token.entity.ts:8",{"_index":782,"title":{},"body":{"entities/RefreshToken.html":{}}}],["token.response",{"_index":148,"title":{},"body":{"controllers/AuthController.html":{}}}],["token.response.ts",{"_index":786,"title":{},"body":{"classes/RefreshTokenResponse.html":{},"coverage.html":{}}}],["token.response.ts:6",{"_index":788,"title":{},"body":{"classes/RefreshTokenResponse.html":{}}}],["token.response.ts:9",{"_index":787,"title":{},"body":{"classes/RefreshTokenResponse.html":{}}}],["token.revoked",{"_index":307,"title":{},"body":{"injectables/AuthService.html":{}}}],["tokenexpirederror",{"_index":257,"title":{},"body":{"injectables/AuthService.html":{}}}],["tools",{"_index":1280,"title":{},"body":{"dependencies.html":{}}}],["touch",{"_index":1336,"title":{},"body":{"index.html":{}}}],["transformer",{"_index":989,"title":{},"body":{"classes/UserDto.html":{},"dependencies.html":{}}}],["true",{"_index":61,"title":{},"body":{"modules/AppModule.html":{},"entities/BaseEntity.html":{},"interfaces/FindAllArgs.html":{},"interfaces/FindAllArgs-1.html":{},"interfaces/FindAllArgs-2.html":{},"interfaces/FindOneArgs.html":{},"interfaces/FindOneArgs-1.html":{},"interfaces/FindOneArgs-2.html":{},"entities/List.html":{},"injectables/ListsService.html":{},"injectables/RoomsService.html":{},"entities/Task.html":{},"injectables/TasksService.html":{},"entities/User.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["true})@apihideproperty",{"_index":964,"title":{},"body":{"entities/User.html":{}}}],["true})@apiproperty({example",{"_index":850,"title":{},"body":{"entities/Task.html":{},"entities/User.html":{}}}],["try",{"_index":297,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/FindAllArgs.html":{},"interfaces/FindAllArgs-1.html":{},"interfaces/FindOneArgs.html":{},"interfaces/FindOneArgs-1.html":{},"controllers/ListsController.html":{},"injectables/ListsService.html":{},"injectables/RoomsService.html":{},"controllers/TasksController.html":{},"injectables/TasksService.html":{}}}],["trying",{"_index":1063,"title":{},"body":{"changelog.html":{}}}],["ts",{"_index":1162,"title":{},"body":{"changelog.html":{}}}],["tsconfig",{"_index":1166,"title":{},"body":{"changelog.html":{}}}],["tsmorphmetadataprovider",{"_index":1374,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ttl",{"_index":234,"title":{},"body":{"injectables/AuthService.html":{}}}],["twitter",{"_index":1342,"title":{},"body":{"index.html":{}}}],["type",{"_index":30,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"entities/BaseEntity.html":{},"controllers/ChoresController.html":{},"injectables/ChoresService.html":{},"classes/CreateListDto.html":{},"classes/CreateRoomDto.html":{},"classes/CreateTaskDto.html":{},"classes/DatabaseSeeder.html":{},"interfaces/FindAllArgs.html":{},"interfaces/FindAllArgs-1.html":{},"interfaces/FindAllArgs-2.html":{},"interfaces/FindOneArgs.html":{},"interfaces/FindOneArgs-1.html":{},"interfaces/FindOneArgs-2.html":{},"injectables/JwtStrategy.html":{},"entities/List.html":{},"classes/ListFactory.html":{},"controllers/ListsController.html":{},"injectables/ListsService.html":{},"injectables/LocalStrategy.html":{},"classes/LoginUserBody.html":{},"classes/LoginUserResponse.html":{},"classes/Migration20221031000536.html":{},"classes/RedisIoAdapter.html":{},"entities/RefreshToken.html":{},"classes/RefreshTokenBody.html":{},"classes/RefreshTokenResponse.html":{},"classes/RegisterUserBody.html":{},"classes/RegisterUserResponse.html":{},"entities/Room.html":{},"controllers/RoomsController.html":{},"injectables/RoomsService.html":{},"entities/Task.html":{},"classes/TaskFactory.html":{},"controllers/TasksController.html":{},"classes/TasksGateway.html":{},"injectables/TasksService.html":{},"classes/UpdateProfileDto.html":{},"entities/User.html":{},"classes/UserDto.html":{},"classes/UserFactory.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["typeorm",{"_index":1062,"title":{},"body":{"changelog.html":{}}}],["types",{"_index":936,"title":{},"body":{"classes/UpdateListDto.html":{},"classes/UpdateTaskDto.html":{}}}],["types/jest",{"_index":1203,"title":{},"body":{"changelog.html":{}}}],["types/validator",{"_index":1207,"title":{},"body":{"changelog.html":{}}}],["typescript",{"_index":994,"title":{},"body":{"classes/UserDto.html":{},"changelog.html":{},"index.html":{}}}],["unauthorizedexception",{"_index":599,"title":{},"body":{"controllers/ListsController.html":{},"injectables/LocalStrategy.html":{},"controllers/TasksController.html":{}}}],["undefined})@apiproperty",{"_index":967,"title":{},"body":{"entities/User.html":{}}}],["undefined})@apiproperty({description",{"_index":960,"title":{},"body":{"entities/User.html":{}}}],["unique",{"_index":688,"title":{},"body":{"classes/Migration20220926213133.html":{},"entities/User.html":{}}}],["unit",{"_index":1316,"title":{},"body":{"index.html":{}}}],["unknown",{"_index":113,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"controllers/ListsController.html":{},"injectables/ListsService.html":{},"injectables/LocalStrategy.html":{},"injectables/RoomsService.html":{},"controllers/TasksController.html":{},"injectables/TasksService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["unprocessableentityexception",{"_index":255,"title":{},"body":{"injectables/AuthService.html":{}}}],["unprocessableentityexception('refresh",{"_index":302,"title":{},"body":{"injectables/AuthService.html":{}}}],["unused",{"_index":996,"title":{},"body":{"classes/UserDto.html":{}}}],["up",{"_index":653,"title":{},"body":{"classes/Migration20220926031634.html":{},"classes/Migration20220926213133.html":{},"classes/Migration20220926214650.html":{},"classes/Migration20220926222224.html":{},"classes/Migration20220926231541.html":{},"classes/Migration20221013014335.html":{},"classes/Migration20221023001353.html":{},"classes/Migration20221031000536.html":{},"classes/Migration20221129042732.html":{}}}],["update",{"_index":263,"title":{},"body":{"injectables/AuthService.html":{},"controllers/ChoresController.html":{},"injectables/ChoresService.html":{},"controllers/ListsController.html":{},"injectables/ListsService.html":{},"classes/Migration20220926031634.html":{},"classes/Migration20220926214650.html":{},"classes/Migration20220926222224.html":{},"classes/Migration20220926231541.html":{},"classes/Migration20221013014335.html":{},"classes/Migration20221023001353.html":{},"classes/Migration20221129042732.html":{},"controllers/RoomsController.html":{},"injectables/RoomsService.html":{},"controllers/TasksController.html":{},"injectables/TasksService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"changelog.html":{}}}],["update(@param('id",{"_index":370,"title":{},"body":{"controllers/ChoresController.html":{},"controllers/ListsController.html":{},"controllers/RoomsController.html":{},"controllers/TasksController.html":{}}}],["update(id",{"_index":352,"title":{},"body":{"controllers/ChoresController.html":{},"injectables/ChoresService.html":{},"interfaces/FindAllArgs.html":{},"interfaces/FindAllArgs-1.html":{},"interfaces/FindAllArgs-2.html":{},"interfaces/FindOneArgs.html":{},"interfaces/FindOneArgs-1.html":{},"interfaces/FindOneArgs-2.html":{},"controllers/ListsController.html":{},"injectables/ListsService.html":{},"controllers/RoomsController.html":{},"injectables/RoomsService.html":{},"controllers/TasksController.html":{},"injectables/TasksService.html":{},"injectables/UsersService.html":{}}}],["update(user",{"_index":1016,"title":{},"body":{"controllers/UsersController.html":{}}}],["updatechoredto",{"_index":353,"title":{"classes/UpdateChoreDto.html":{}},"body":{"controllers/ChoresController.html":{},"injectables/ChoresService.html":{},"classes/UpdateChoreDto.html":{},"coverage.html":{}}}],["updated_at",{"_index":663,"title":{},"body":{"classes/Migration20220926031634.html":{},"classes/Migration20220926214650.html":{},"classes/Migration20220926231541.html":{},"classes/Migration20221023001353.html":{},"classes/Migration20221129042732.html":{}}}],["updatedat",{"_index":324,"title":{},"body":{"entities/BaseEntity.html":{}}}],["updatelistdto",{"_index":448,"title":{"classes/UpdateListDto.html":{}},"body":{"interfaces/FindAllArgs.html":{},"interfaces/FindOneArgs.html":{},"controllers/ListsController.html":{},"injectables/ListsService.html":{},"classes/UpdateListDto.html":{},"coverage.html":{}}}],["updatelistinput",{"_index":464,"title":{},"body":{"interfaces/FindAllArgs.html":{},"interfaces/FindOneArgs.html":{},"injectables/ListsService.html":{}}}],["updateprofiledto",{"_index":492,"title":{"classes/UpdateProfileDto.html":{}},"body":{"interfaces/FindAllArgs-2.html":{},"interfaces/FindOneArgs-2.html":{},"classes/UpdateProfileDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["updateroomdto",{"_index":805,"title":{"classes/UpdateRoomDto.html":{}},"body":{"controllers/RoomsController.html":{},"injectables/RoomsService.html":{},"classes/UpdateRoomDto.html":{},"coverage.html":{}}}],["updates",{"_index":386,"title":{},"body":{"injectables/ChoresService.html":{},"changelog.html":{}}}],["updatetaskdto",{"_index":472,"title":{"classes/UpdateTaskDto.html":{}},"body":{"interfaces/FindAllArgs-1.html":{},"interfaces/FindOneArgs-1.html":{},"controllers/TasksController.html":{},"injectables/TasksService.html":{},"classes/UpdateTaskDto.html":{},"coverage.html":{}}}],["updatetaskinput",{"_index":483,"title":{},"body":{"interfaces/FindAllArgs-1.html":{},"interfaces/FindOneArgs-1.html":{},"injectables/TasksService.html":{}}}],["updateuserdto",{"_index":1017,"title":{},"body":{"controllers/UsersController.html":{}}}],["updateuserinput",{"_index":509,"title":{},"body":{"interfaces/FindAllArgs-2.html":{},"interfaces/FindOneArgs-2.html":{},"injectables/UsersService.html":{}}}],["url",{"_index":763,"title":{},"body":{"classes/RedisIoAdapter.html":{}}}],["usefactory",{"_index":202,"title":{},"body":{"modules/AuthModule.html":{}}}],["useguards",{"_index":132,"title":{},"body":{"controllers/AuthController.html":{},"controllers/ListsController.html":{},"controllers/RoomsController.html":{},"controllers/TasksController.html":{},"controllers/UsersController.html":{}}}],["useguards(jwtauthguard",{"_index":605,"title":{},"body":{"controllers/ListsController.html":{},"controllers/RoomsController.html":{},"controllers/TasksController.html":{},"controllers/UsersController.html":{}}}],["useguards(jwtauthguard)@delete(':id",{"_index":594,"title":{},"body":{"controllers/ListsController.html":{}}}],["useguards(jwtauthguard)@post",{"_index":590,"title":{},"body":{"controllers/ListsController.html":{}}}],["useguards(jwtauthguard)@put(':id",{"_index":596,"title":{},"body":{"controllers/ListsController.html":{}}}],["useguards(localauthguard",{"_index":155,"title":{},"body":{"controllers/AuthController.html":{}}}],["useguards(localauthguard)@post('login')@apibody({type",{"_index":106,"title":{},"body":{"controllers/AuthController.html":{}}}],["user",{"_index":108,"title":{"entities/User.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/DatabaseSeeder.html":{},"interfaces/FindAllArgs-2.html":{},"interfaces/FindOneArgs-2.html":{},"injectables/JwtStrategy.html":{},"entities/List.html":{},"controllers/ListsController.html":{},"injectables/LocalStrategy.html":{},"classes/LoginUserResponse.html":{},"entities/RefreshToken.html":{},"classes/RefreshTokenResponse.html":{},"classes/RegisterUserResponse.html":{},"entities/Room.html":{},"controllers/RoomsController.html":{},"entities/Task.html":{},"controllers/TasksController.html":{},"entities/User.html":{},"classes/UserDto.html":{},"classes/UserFactory.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["user's",{"_index":952,"title":{},"body":{"entities/User.html":{}}}],["user.body",{"_index":144,"title":{},"body":{"controllers/AuthController.html":{}}}],["user.body.ts",{"_index":642,"title":{},"body":{"classes/LoginUserBody.html":{},"classes/RegisterUserBody.html":{},"coverage.html":{}}}],["user.body.ts:11",{"_index":644,"title":{},"body":{"classes/LoginUserBody.html":{},"classes/RegisterUserBody.html":{}}}],["user.body.ts:7",{"_index":645,"title":{},"body":{"classes/LoginUserBody.html":{},"classes/RegisterUserBody.html":{}}}],["user.decorator",{"_index":602,"title":{},"body":{"controllers/ListsController.html":{},"controllers/RoomsController.html":{},"controllers/TasksController.html":{},"controllers/UsersController.html":{}}}],["user.decorator.ts",{"_index":1250,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["user.entity",{"_index":494,"title":{},"body":{"interfaces/FindAllArgs-2.html":{},"interfaces/FindOneArgs-2.html":{},"classes/UserDto.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["user.password",{"_index":280,"title":{},"body":{"injectables/AuthService.html":{},"classes/DatabaseSeeder.html":{}}}],["user.response",{"_index":145,"title":{},"body":{"controllers/AuthController.html":{}}}],["user.response.ts",{"_index":646,"title":{},"body":{"classes/LoginUserResponse.html":{},"classes/RegisterUserResponse.html":{},"coverage.html":{}}}],["user.response.ts:12",{"_index":648,"title":{},"body":{"classes/LoginUserResponse.html":{},"classes/RegisterUserResponse.html":{}}}],["user.response.ts:6",{"_index":649,"title":{},"body":{"classes/LoginUserResponse.html":{},"classes/RegisterUserResponse.html":{}}}],["user.response.ts:9",{"_index":647,"title":{},"body":{"classes/LoginUserResponse.html":{},"classes/RegisterUserResponse.html":{}}}],["user_id",{"_index":668,"title":{},"body":{"classes/Migration20220926031634.html":{},"entities/RefreshToken.html":{}}}],["userdto",{"_index":138,"title":{"classes/UserDto.html":{}},"body":{"controllers/AuthController.html":{},"classes/LoginUserResponse.html":{},"classes/RefreshTokenResponse.html":{},"classes/RegisterUserResponse.html":{},"classes/UserDto.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["userdto(req.user",{"_index":170,"title":{},"body":{"controllers/AuthController.html":{}}}],["userdto(res",{"_index":1032,"title":{},"body":{"controllers/UsersController.html":{}}}],["userdto(u",{"_index":1026,"title":{},"body":{"controllers/UsersController.html":{}}}],["userdto(user",{"_index":178,"title":{},"body":{"controllers/AuthController.html":{},"controllers/UsersController.html":{}}}],["userfactory",{"_index":426,"title":{"classes/UserFactory.html":{}},"body":{"classes/DatabaseSeeder.html":{},"classes/UserFactory.html":{},"coverage.html":{}}}],["userfactory(em",{"_index":432,"title":{},"body":{"classes/DatabaseSeeder.html":{}}}],["username",{"_index":244,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/FindAllArgs-2.html":{},"interfaces/FindOneArgs-2.html":{},"injectables/LocalStrategy.html":{},"classes/LoginUserBody.html":{},"classes/Migration20220926031634.html":{},"classes/Migration20220926213133.html":{},"classes/RegisterUserBody.html":{},"classes/UpdateProfileDto.html":{},"entities/User.html":{},"classes/UserDto.html":{},"classes/UserFactory.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["username.tolowercase",{"_index":505,"title":{},"body":{"interfaces/FindAllArgs-2.html":{},"interfaces/FindOneArgs-2.html":{},"injectables/UsersService.html":{}}}],["users",{"_index":264,"title":{},"body":{"injectables/AuthService.html":{},"classes/Migration20220926031634.html":{},"classes/Migration20220926213133.html":{},"classes/Migration20220926214650.html":{},"classes/Migration20220926222224.html":{},"classes/Migration20220926231541.html":{},"classes/Migration20221023001353.html":{},"classes/Migration20221129042732.html":{},"entities/User.html":{},"controllers/UsersController.html":{}}}],["users.controller",{"_index":1039,"title":{},"body":{"modules/UsersModule.html":{}}}],["users.map((u",{"_index":1025,"title":{},"body":{"controllers/UsersController.html":{}}}],["users.service",{"_index":1021,"title":{},"body":{"controllers/UsersController.html":{},"modules/UsersModule.html":{}}}],["users/dto/user.dto",{"_index":139,"title":{},"body":{"controllers/AuthController.html":{},"classes/LoginUserResponse.html":{},"classes/RefreshTokenResponse.html":{},"classes/RegisterUserResponse.html":{}}}],["users/user.entity",{"_index":259,"title":{},"body":{"injectables/AuthService.html":{},"entities/List.html":{},"entities/RefreshToken.html":{},"entities/Room.html":{},"controllers/RoomsController.html":{},"entities/Task.html":{},"classes/UserFactory.html":{}}}],["users/users.module",{"_index":51,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ListsModule.html":{},"modules/RoomsModule.html":{}}}],["users/users.service",{"_index":260,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["users_username_unique",{"_index":687,"title":{},"body":{"classes/Migration20220926213133.html":{}}}],["userscontroller",{"_index":1006,"title":{"controllers/UsersController.html":{}},"body":{"controllers/UsersController.html":{},"modules/UsersModule.html":{},"coverage.html":{}}}],["usersmodule",{"_index":13,"title":{"modules/UsersModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ListsModule.html":{},"modules/RoomsModule.html":{},"modules/TasksModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["usersrepository",{"_index":497,"title":{},"body":{"interfaces/FindAllArgs-2.html":{},"interfaces/FindOneArgs-2.html":{},"injectables/UsersService.html":{}}}],["usersservice",{"_index":224,"title":{"injectables/UsersService.html":{}},"body":{"injectables/AuthService.html":{},"interfaces/FindAllArgs-2.html":{},"interfaces/FindOneArgs-2.html":{},"injectables/JwtStrategy.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"overview.html":{}}}],["using",{"_index":731,"title":{},"body":{"classes/Migration20221031000536.html":{}}}],["v28.0.8",{"_index":1164,"title":{},"body":{"changelog.html":{}}}],["v29",{"_index":1172,"title":{},"body":{"changelog.html":{}}}],["v4.1.0",{"_index":1168,"title":{},"body":{"changelog.html":{}}}],["v5.37.0",{"_index":1177,"title":{},"body":{"changelog.html":{}}}],["v8.23.1",{"_index":1160,"title":{},"body":{"changelog.html":{}}}],["v9",{"_index":1175,"title":{},"body":{"changelog.html":{}}}],["v9.1.3",{"_index":1158,"title":{},"body":{"changelog.html":{}}}],["validate",{"_index":549,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["validate(payload",{"_index":552,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["validate(username",{"_index":637,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["validateuser",{"_index":221,"title":{},"body":{"injectables/AuthService.html":{}}}],["validateuser(username",{"_index":248,"title":{},"body":{"injectables/AuthService.html":{}}}],["validator",{"_index":401,"title":{},"body":{"classes/CreateListDto.html":{},"classes/CreateRoomDto.html":{},"classes/CreateTaskDto.html":{},"classes/LoginUserBody.html":{},"classes/RegisterUserBody.html":{},"dependencies.html":{}}}],["value",{"_index":252,"title":{},"body":{"injectables/AuthService.html":{},"entities/BaseEntity.html":{},"classes/ListFactory.html":{},"entities/RefreshToken.html":{},"classes/TaskFactory.html":{},"entities/User.html":{},"classes/UserFactory.html":{},"miscellaneous/variables.html":{}}}],["varchar(255",{"_index":664,"title":{},"body":{"classes/Migration20220926031634.html":{},"classes/Migration20220926213133.html":{},"classes/Migration20220926214650.html":{},"classes/Migration20220926231541.html":{},"classes/Migration20221023001353.html":{},"classes/Migration20221129042732.html":{}}}],["variable",{"_index":1244,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":1356,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["vars",{"_index":997,"title":{},"body":{"classes/UserDto.html":{}}}],["version",{"_index":1355,"title":{},"body":{"properties.html":{}}}],["void",{"_index":34,"title":{},"body":{"modules/AppModule.html":{}}}],["watch",{"_index":1311,"title":{},"body":{"index.html":{}}}],["website",{"_index":1340,"title":{},"body":{"index.html":{}}}],["websocketgateway",{"_index":902,"title":{},"body":{"classes/TasksGateway.html":{}}}],["websockets",{"_index":1103,"title":{},"body":{"changelog.html":{}}}],["websocketserver",{"_index":890,"title":{},"body":{"classes/TasksGateway.html":{}}}],["wsresponse",{"_index":903,"title":{},"body":{"classes/TasksGateway.html":{}}}],["yarn",{"_index":1128,"title":{},"body":{"changelog.html":{}}}],["yay",{"_index":1084,"title":{},"body":{"changelog.html":{}}}],["yes",{"_index":754,"title":{},"body":{"classes/RedisIoAdapter.html":{}}}],["you'd",{"_index":1331,"title":{},"body":{"index.html":{}}}],["zoom",{"_index":14,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ChoresModule.html":{},"modules/ListsModule.html":{},"modules/RoomsModule.html":{},"modules/TasksModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nChoresModule\n\nChoresModule\n\nAppModule -->\n\nChoresModule->AppModule\n\n\n\n\n\nHealthModule\n\nHealthModule\n\nAppModule -->\n\nHealthModule->AppModule\n\n\n\n\n\nListsModule\n\nListsModule\n\nAppModule -->\n\nListsModule->AppModule\n\n\n\n\n\nRoomsModule\n\nRoomsModule\n\nAppModule -->\n\nRoomsModule->AppModule\n\n\n\n\n\nTasksModule\n\nTasksModule\n\nAppModule -->\n\nTasksModule->AppModule\n\n\n\n\n\nUsersModule\n\nUsersModule\n\nAppModule -->\n\nUsersModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            AuthModule\n                        \n                        \n                            ChoresModule\n                        \n                        \n                            HealthModule\n                        \n                        \n                            ListsModule\n                        \n                        \n                            RoomsModule\n                        \n                        \n                            TasksModule\n                        \n                        \n                            UsersModule\n                        \n                    \n                \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        configure\n                        \n                    \n                \n            \n            \n                \nconfigure(consumer: MiddlewareConsumer)\n                \n            \n\n\n            \n                \n                    Defined in src/app.module.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    consumer\n                                    \n                                            MiddlewareConsumer\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        onModuleInit\n                        \n                    \n                \n            \n            \n                \n                    \n                    onModuleInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app.module.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        import {\n  MiddlewareConsumer,\n  Module,\n  NestModule,\n  OnModuleInit,\n} from '@nestjs/common'\nimport { ConfigModule } from '@nestjs/config'\nimport { MikroOrmMiddleware, MikroOrmModule } from '@mikro-orm/nestjs'\nimport { AuthModule } from './auth/auth.module'\nimport configuration from './config/configuration'\nimport { UsersModule } from './users/users.module'\nimport { ListsModule } from './lists/lists.module'\nimport { MikroORM } from '@mikro-orm/core'\nimport { TasksModule } from './tasks/tasks.module'\nimport { ChoresModule } from './chores/chores.module'\nimport { RoomsModule } from './rooms/rooms.module'\nimport { HealthModule } from './health/health.module'\n\n@Module({\n  imports: [\n    ConfigModule.forRoot({\n      isGlobal: true,\n      load: [configuration],\n    }),\n    MikroOrmModule.forRoot(),\n    UsersModule,\n    AuthModule,\n    ListsModule,\n    TasksModule,\n    ChoresModule,\n    RoomsModule,\n    HealthModule,\n  ],\n  controllers: [],\n  providers: [],\n})\nexport class AppModule implements NestModule, OnModuleInit {\n  constructor(private readonly orm: MikroORM) {}\n\n  async onModuleInit(): Promise {\n    await this.orm.getMigrator().up()\n  }\n\n  // for some reason the auth middlewares in profile and article modules are fired before the request context one,\n  // so they would fail to access contextual EM. by registering the middleware directly in AppModule, we can get\n  // around this issue\n  configure(consumer: MiddlewareConsumer) {\n    consumer.apply(MikroOrmMiddleware).forRoutes('*')\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AuthController.html":{"url":"controllers/AuthController.html","title":"controller - AuthController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AuthController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                auth\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                login\n                            \n                            \n                                    Async\n                                refresh\n                            \n                            \n                                    Async\n                                register\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        login\n                        \n                    \n                \n            \n            \n                \n                    \n                    login(req: any)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(LocalAuthGuard)@Post('login')@ApiBody({type: LoginUserBody})@ApiOkResponse({description: 'User has been logged in.', type: LoginUserResponse})\n                \n            \n\n            \n                \n                    Defined in src/auth/auth.controller.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        refresh\n                        \n                    \n                \n            \n            \n                \n                    \n                    refresh(refreshInput: RefreshTokenBody)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('refresh')@ApiOkResponse({description: 'Generates a new access token.', type: RefreshTokenResponse})\n                \n            \n\n            \n                \n                    Defined in src/auth/auth.controller.ts:50\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    refreshInput\n                                    \n                                                RefreshTokenBody\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        register\n                        \n                    \n                \n            \n            \n                \n                    \n                    register(registerInput: RegisterUserBody)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('register')@ApiCreatedResponse({description: 'User has been registered.', type: RegisterUserResponse})\n                \n            \n\n            \n                \n                    Defined in src/auth/auth.controller.ts:68\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    registerInput\n                                    \n                                                RegisterUserBody\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, Post, Request, UseGuards } from '@nestjs/common'\nimport {\n  ApiBody,\n  ApiCreatedResponse,\n  ApiOkResponse,\n  ApiTags,\n} from '@nestjs/swagger'\nimport { UserDto } from '../users/dto/user.dto'\nimport { AuthService } from './auth.service'\nimport { LoginUserBody } from './dto/login-user.body'\nimport { LoginUserResponse } from './dto/login-user.response'\nimport { RefreshTokenBody } from './dto/refresh-token.body'\nimport { RefreshTokenResponse } from './dto/refresh-token.response'\nimport { RegisterUserBody } from './dto/register-user.body'\nimport { RegisterUserResponse } from './dto/register-user.response'\nimport { LocalAuthGuard } from './guards/local-auth.guard'\n\n@Controller('auth')\n@ApiTags('auth')\nexport class AuthController {\n  constructor(private authService: AuthService) {}\n\n  @UseGuards(LocalAuthGuard)\n  @Post('login')\n  @ApiBody({ type: LoginUserBody })\n  @ApiOkResponse({\n    description: 'User has been logged in.',\n    type: LoginUserResponse,\n  })\n  async login(@Request() req: any) {\n    const accessToken = await this.authService.generateAccessToken(req.user)\n    const refreshToken = await this.authService.generateRefreshToken(\n      req.user,\n      60 * 60 * 24 * 30,\n    )\n\n    const payload = new LoginUserResponse()\n    payload.user = new UserDto(req.user)\n    payload.accessToken = accessToken\n    payload.refreshToken = refreshToken\n\n    return payload\n  }\n\n  @Post('refresh')\n  @ApiOkResponse({\n    description: 'Generates a new access token.',\n    type: RefreshTokenResponse,\n  })\n  async refresh(@Body() refreshInput: RefreshTokenBody) {\n    const { user, token } =\n      await this.authService.createAccessTokenFromRefreshToken(\n        refreshInput.refreshToken,\n      )\n\n    const payload = new RefreshTokenResponse()\n    payload.user = new UserDto(user)\n    payload.accessToken = token\n\n    return payload\n  }\n\n  @Post('register')\n  @ApiCreatedResponse({\n    description: 'User has been registered.',\n    type: RegisterUserResponse,\n  })\n  async register(@Body() registerInput: RegisterUserBody) {\n    const user = await this.authService.register(\n      registerInput.username,\n      registerInput.password,\n    )\n\n    const accessToken = await this.authService.generateAccessToken(user)\n    const refreshToken = await this.authService.generateRefreshToken(\n      user,\n      60 * 60 * 24 * 30,\n    )\n\n    const payload = new RegisterUserResponse()\n    payload.user = new UserDto(user)\n    payload.accessToken = accessToken\n    payload.refreshToken = refreshToken\n\n    return payload\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_imports\n\n\n\ncluster_AuthModule_providers\n\n\n\n\nUsersModule\n\nUsersModule\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nUsersModule->AuthModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\nLocalStrategy\n\nLocalStrategy\n\nAuthModule -->\n\nLocalStrategy->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/auth/auth.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AuthService\n                        \n                        \n                            JwtStrategy\n                        \n                        \n                            LocalStrategy\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AuthController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            UsersModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { MikroOrmModule } from '@mikro-orm/nestjs'\nimport { Module } from '@nestjs/common'\nimport { ConfigModule, ConfigService } from '@nestjs/config'\nimport { JwtModule } from '@nestjs/jwt'\nimport { PassportModule } from '@nestjs/passport'\nimport { UsersModule } from '../users/users.module'\nimport { AuthController } from './auth.controller'\nimport { AuthService } from './auth.service'\nimport { RefreshToken } from './entities/refresh-token.entity'\nimport { JwtStrategy } from './strategies/jwt.strategy'\nimport { LocalStrategy } from './strategies/local.strategy'\n\n@Module({\n  controllers: [AuthController],\n  imports: [\n    PassportModule,\n    JwtModule.registerAsync({\n      imports: [ConfigModule],\n      useFactory: async (configService: ConfigService) => ({\n        secret: configService.get('auth.jwtKey'),\n        signOptions: { expiresIn: '24h' },\n      }),\n      inject: [ConfigService],\n    }),\n    UsersModule,\n    MikroOrmModule.forFeature([RefreshToken]),\n  ],\n  providers: [AuthService, LocalStrategy, JwtStrategy],\n})\nexport class AuthModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createAccessTokenFromRefreshToken\n                            \n                            \n                                    Async\n                                createRefreshToken\n                            \n                            \n                                    Async\n                                generateAccessToken\n                            \n                            \n                                    Async\n                                generateRefreshToken\n                            \n                            \n                                    Async\n                                register\n                            \n                            \n                                    Async\n                                resolveRefreshToken\n                            \n                            \n                                    Async\n                                validateUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(usersService: UsersService, jwtService: JwtService, refreshTokenRepository: EntityRepository)\n                    \n                \n                        \n                            \n                                Defined in src/auth/auth.service.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        usersService\n                                                  \n                                                        \n                                                                        UsersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        jwtService\n                                                  \n                                                        \n                                                                    JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        refreshTokenRepository\n                                                  \n                                                        \n                                                                        EntityRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        createAccessTokenFromRefreshToken\n                        \n                    \n                \n            \n            \n                \n                    \n                    createAccessTokenFromRefreshToken(refresh: string)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/auth.service.ts:110\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    refresh\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        createRefreshToken\n                        \n                    \n                \n            \n            \n                \n                    \n                    createRefreshToken(user: Pick, ttl: number)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/auth.service.ts:50\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                Pick\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    ttl\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        generateAccessToken\n                        \n                    \n                \n            \n            \n                \n                    \n                    generateAccessToken(user: Pick)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/auth.service.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                Pick\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        generateRefreshToken\n                        \n                    \n                \n            \n            \n                \n                    \n                    generateRefreshToken(user: Pick, expiresIn: number)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/auth.service.ts:64\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                Pick\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    expiresIn\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        register\n                        \n                    \n                \n            \n            \n                \n                    \n                    register(username: string, password: string)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/auth.service.ts:118\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    username\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    password\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        resolveRefreshToken\n                        \n                    \n                \n            \n            \n                \n                    \n                    resolveRefreshToken(encoded: string)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/auth.service.ts:74\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    encoded\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        validateUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    validateUser(username: string, plainTextPassword: string)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/auth.service.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    username\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    plainTextPassword\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Logger(AuthService.name)\n                    \n                \n                    \n                        \n                                Defined in src/auth/auth.service.ts:17\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { EntityRepository } from '@mikro-orm/core'\nimport { InjectRepository } from '@mikro-orm/nestjs'\nimport {\n  Injectable,\n  Logger,\n  UnprocessableEntityException,\n} from '@nestjs/common'\nimport { JwtService } from '@nestjs/jwt'\nimport * as bcrypt from 'bcrypt'\nimport { TokenExpiredError } from 'jsonwebtoken'\nimport { User } from '../users/user.entity'\nimport { UsersService } from '../users/users.service'\nimport { RefreshToken } from './entities/refresh-token.entity'\n\n@Injectable()\nexport class AuthService {\n  private readonly logger = new Logger(AuthService.name)\n  constructor(\n    private usersService: UsersService,\n    private jwtService: JwtService,\n    @InjectRepository(RefreshToken)\n    private refreshTokenRepository: EntityRepository,\n  ) {}\n\n  async validateUser(username: string, plainTextPassword: string) {\n    /*\n     * @TODO: Update the users service to allow input of populate properties.\n     * This means we can set the password property on the entity back to hidden & lazy\n     * so it doesn't return the hashed password.\n     */\n    const user = await this.usersService.findOne({\n      username,\n    })\n    // this.logger.log(plainTextPassword, user.password)\n\n    if (user) {\n      const match = await bcrypt.compare(plainTextPassword, user.password)\n      if (match) {\n        return user\n      }\n    }\n    return null\n  }\n\n  async generateAccessToken(user: Pick) {\n    const payload = { sub: String(user.id) }\n    return await this.jwtService.signAsync(payload)\n  }\n\n  async createRefreshToken(user: Pick, ttl: number) {\n    const expiration = new Date()\n    expiration.setTime(expiration.getTime() + ttl)\n\n    const token = this.refreshTokenRepository.create({\n      user,\n      expires: expiration,\n    })\n\n    await this.refreshTokenRepository.persistAndFlush(token)\n\n    return token\n  }\n\n  async generateRefreshToken(user: Pick, expiresIn: number) {\n    const payload = { sub: String(user.id) }\n    const token = await this.createRefreshToken(user, expiresIn)\n    return await this.jwtService.signAsync({\n      ...payload,\n      expiresIn,\n      jwtId: String(token.id),\n    })\n  }\n\n  async resolveRefreshToken(encoded: string) {\n    try {\n      const payload = await this.jwtService.verify(encoded)\n\n      if (!payload.sub || !payload.jwtId) {\n        throw new UnprocessableEntityException('Refresh token malformed')\n      }\n\n      const token = await this.refreshTokenRepository.findOne({\n        id: payload.jwtId,\n      })\n\n      if (!token) {\n        throw new UnprocessableEntityException('Refresh token not found')\n      }\n\n      if (token.revoked) {\n        throw new UnprocessableEntityException('Refresh token revoked')\n      }\n\n      const user = await this.usersService.findOne({ id: payload.subject })\n\n      if (!user) {\n        throw new UnprocessableEntityException('Refresh token malformed')\n      }\n\n      return { user, token }\n    } catch (e) {\n      if (e instanceof TokenExpiredError) {\n        throw new UnprocessableEntityException('Refresh token expired')\n      } else {\n        throw new UnprocessableEntityException('Refresh token malformed')\n      }\n    }\n  }\n\n  async createAccessTokenFromRefreshToken(refresh: string) {\n    const { user } = await this.resolveRefreshToken(refresh)\n\n    const token = await this.generateAccessToken(user)\n\n    return { user, token }\n  }\n\n  async register(username: string, password: string) {\n    let user = await this.usersService.findOne({ username })\n    if (user) {\n      return null\n    }\n    const hashed = await bcrypt.hash(password, 10)\n    user = await this.usersService.create({ username, password: hashed })\n    return user\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/BaseEntity.html":{"url":"entities/BaseEntity.html","title":"entity - BaseEntity","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  BaseEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/entities/base-entity.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                createdAt\n                            \n                            \n                                id\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Default value : new Date()\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/common/entities/base-entity.entity.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryKey()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/common/entities/base-entity.entity.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Default value : new Date()\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property({onUpdate: () => })\n                        \n                    \n                \n                    \n                        \n                                Defined in src/common/entities/base-entity.entity.ts:12\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { Entity, PrimaryKey, Property } from '@mikro-orm/core'\n\n@Entity({ abstract: true })\nexport abstract class BaseEntity {\n  @PrimaryKey()\n  id: number\n\n  @Property()\n  createdAt: Date = new Date()\n\n  @Property({ onUpdate: () => new Date() })\n  updatedAt: Date = new Date()\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Chore.html":{"url":"classes/Chore.html","title":"class - Chore","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Chore\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/chores/entities/chore.entity.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Chore {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/ChoresController.html":{"url":"controllers/ChoresController.html","title":"controller - ChoresController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  ChoresController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/chores/chores.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                chores\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                findAll\n                            \n                            \n                                findOne\n                            \n                            \n                                remove\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(createChoreDto: CreateChoreDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n            \n                \n                    Defined in src/chores/chores.controller.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createChoreDto\n                                    \n                                                CreateChoreDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/chores/chores.controller.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')\n                \n            \n\n            \n                \n                    Defined in src/chores/chores.controller.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        remove\n                        \n                    \n                \n            \n            \n                \nremove(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')\n                \n            \n\n            \n                \n                    Defined in src/chores/chores.controller.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(id: string, updateChoreDto: UpdateChoreDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')\n                \n            \n\n            \n                \n                    Defined in src/chores/chores.controller.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateChoreDto\n                                    \n                                                UpdateChoreDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Post, Body, Patch, Param, Delete } from '@nestjs/common';\nimport { ChoresService } from './chores.service';\nimport { CreateChoreDto } from './dto/create-chore.dto';\nimport { UpdateChoreDto } from './dto/update-chore.dto';\n\n@Controller('chores')\nexport class ChoresController {\n  constructor(private readonly choresService: ChoresService) {}\n\n  @Post()\n  create(@Body() createChoreDto: CreateChoreDto) {\n    return this.choresService.create(createChoreDto);\n  }\n\n  @Get()\n  findAll() {\n    return this.choresService.findAll();\n  }\n\n  @Get(':id')\n  findOne(@Param('id') id: string) {\n    return this.choresService.findOne(+id);\n  }\n\n  @Patch(':id')\n  update(@Param('id') id: string, @Body() updateChoreDto: UpdateChoreDto) {\n    return this.choresService.update(+id, updateChoreDto);\n  }\n\n  @Delete(':id')\n  remove(@Param('id') id: string) {\n    return this.choresService.remove(+id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ChoresModule.html":{"url":"modules/ChoresModule.html","title":"module - ChoresModule","body":"\n                   \n\n\n\n\n    Modules\n    ChoresModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_ChoresModule\n\n\n\ncluster_ChoresModule_providers\n\n\n\n\nChoresService\n\nChoresService\n\n\n\nChoresModule\n\nChoresModule\n\nChoresModule -->\n\nChoresService->ChoresModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/chores/chores.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ChoresService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            ChoresController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { ChoresService } from './chores.service';\nimport { ChoresController } from './chores.controller';\n\n@Module({\n  controllers: [ChoresController],\n  providers: [ChoresService]\n})\nexport class ChoresModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ChoresService.html":{"url":"injectables/ChoresService.html","title":"injectable - ChoresService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ChoresService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/chores/chores.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                findAll\n                            \n                            \n                                findOne\n                            \n                            \n                                remove\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(createChoreDto: CreateChoreDto)\n                \n            \n\n\n            \n                \n                    Defined in src/chores/chores.service.ts:7\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createChoreDto\n                                    \n                                                CreateChoreDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n\n            \n                \n                    Defined in src/chores/chores.service.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/chores/chores.service.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        remove\n                        \n                    \n                \n            \n            \n                \nremove(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/chores/chores.service.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(id: number, updateChoreDto: UpdateChoreDto)\n                \n            \n\n\n            \n                \n                    Defined in src/chores/chores.service.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateChoreDto\n                                    \n                                                UpdateChoreDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { CreateChoreDto } from './dto/create-chore.dto';\nimport { UpdateChoreDto } from './dto/update-chore.dto';\n\n@Injectable()\nexport class ChoresService {\n  create(createChoreDto: CreateChoreDto) {\n    return 'This action adds a new chore';\n  }\n\n  findAll() {\n    return `This action returns all chores`;\n  }\n\n  findOne(id: number) {\n    return `This action returns a #${id} chore`;\n  }\n\n  update(id: number, updateChoreDto: UpdateChoreDto) {\n    return `This action updates a #${id} chore`;\n  }\n\n  remove(id: number) {\n    return `This action removes a #${id} chore`;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateChoreDto.html":{"url":"classes/CreateChoreDto.html","title":"class - CreateChoreDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateChoreDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/chores/dto/create-chore.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class CreateChoreDto {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateListDto.html":{"url":"classes/CreateListDto.html","title":"class - CreateListDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateListDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lists/dto/create-list.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                    Optional\n                                description\n                            \n                            \n                                    Readonly\n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                            Optional\n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lists/dto/create-list.dto.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lists/dto/create-list.dto.ts:7\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger'\nimport { IsOptional, IsString } from 'class-validator'\n\nexport class CreateListDto {\n  @ApiProperty()\n  @IsString()\n  readonly title: string\n\n  @ApiProperty()\n  @IsString()\n  @IsOptional()\n  readonly description?: string\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateRoomDto.html":{"url":"classes/CreateRoomDto.html","title":"class - CreateRoomDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateRoomDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/rooms/dto/create-room.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/rooms/dto/create-room.dto.ts:7\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger'\nimport { IsString } from 'class-validator'\n\nexport class CreateRoomDto {\n  @ApiProperty()\n  @IsString()\n  readonly name: string\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateTaskDto.html":{"url":"classes/CreateTaskDto.html","title":"class - CreateTaskDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateTaskDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/tasks/dto/create-task.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                    Optional\n                                description\n                            \n                            \n                                    Readonly\n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                            Optional\n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/tasks/dto/create-task.dto.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/tasks/dto/create-task.dto.ts:7\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger'\nimport { IsOptional, IsString } from 'class-validator'\n\nexport class CreateTaskDto {\n  @ApiProperty()\n  @IsString()\n  readonly title: string\n\n  @ApiProperty()\n  @IsString()\n  @IsOptional()\n  readonly description?: string\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DatabaseSeeder.html":{"url":"classes/DatabaseSeeder.html","title":"class - DatabaseSeeder","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DatabaseSeeder\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            seeders/database.seeder.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    Seeder\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                run\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        run\n                        \n                    \n                \n            \n            \n                \n                    \n                    run(em: EntityManager)\n                \n            \n\n\n            \n                \n                    Defined in seeders/database.seeder.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    em\n                                    \n                                            EntityManager\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { EntityManager } from '@mikro-orm/postgresql'\nimport { Seeder } from '@mikro-orm/seeder'\nimport { User } from '../src/users/user.entity'\nimport { ListFactory } from '../src/database/factories/list.factory'\nimport { TaskFactory } from '../src/database/factories/task.factory'\nimport { UserFactory } from '../src/database/factories/user.factory'\nimport * as bcrypt from 'bcrypt'\n\nexport class DatabaseSeeder extends Seeder {\n  async run(em: EntityManager): Promise {\n    const hashed = await bcrypt.hash('P@ssw0rd', 10)\n\n    new TaskFactory(em)\n      .each((task) => {\n        task.createdBy = new UserFactory(em)\n          .each((user) => {\n            user.password = hashed\n          })\n          .makeOne()\n        task.list = new ListFactory(em)\n          .each((list) => {\n            list.createdBy = new UserFactory(em)\n              .each((user) => {\n                user.password = hashed\n              })\n              .makeOne()\n          })\n          .makeOne()\n      })\n      .make(5)\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/FindAllArgs.html":{"url":"interfaces/FindAllArgs.html","title":"interface - FindAllArgs","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  FindAllArgs\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lists/lists.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            authorId\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            relations\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        authorId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        authorId:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        relations\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        relations:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { EntityRepository, NotFoundError } from '@mikro-orm/core'\nimport { InjectRepository } from '@mikro-orm/nestjs'\nimport { Injectable } from '@nestjs/common'\nimport { CreateListDto } from './dto/create-list.dto'\nimport { UpdateListDto } from './dto/update-list.dto'\nimport { List } from './list.entity'\n\ninterface FindAllArgs {\n  relations?: string[]\n  authorId?: number\n}\n\ninterface FindOneArgs extends FindAllArgs {\n  id: number\n}\n\n@Injectable()\nexport class ListsService {\n  constructor(\n    @InjectRepository(List)\n    private listsRepository: EntityRepository,\n  ) {}\n\n  async create(createdById: number, createListInput: CreateListDto) {\n    const list = this.listsRepository.create({\n      createdBy: {\n        id: createdById,\n      },\n      ...createListInput,\n    })\n    await this.listsRepository.persistAndFlush(list)\n    return list\n  }\n\n  findAll() {\n    return this.listsRepository.findAll({ populate: ['createdBy'] })\n  }\n\n  async findOne({ id }: FindOneArgs) {\n    try {\n      const list = this.listsRepository.findOneOrFail(\n        { id },\n        { populate: ['createdBy'] },\n      )\n      return list\n    } catch (e) {\n      return new NotFoundError(`Not found`, List)\n    }\n  }\n\n  async update(id: number, updateListInput: UpdateListDto) {\n    const post = await this.listsRepository.findOne(id)\n    this.listsRepository.assign(post, updateListInput)\n    await this.listsRepository.flush()\n    return post\n  }\n\n  async remove(id: number) {\n    await this.listsRepository.removeAndFlush({ id })\n    return true\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/FindAllArgs-1.html":{"url":"interfaces/FindAllArgs-1.html","title":"interface - FindAllArgs-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  FindAllArgs\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/tasks/tasks.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            authorId\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            relations\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        authorId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        authorId:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        relations\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        relations:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { EntityRepository, NotFoundError } from '@mikro-orm/core'\nimport { InjectRepository } from '@mikro-orm/nestjs'\nimport { Injectable } from '@nestjs/common'\nimport { CreateTaskDto } from './dto/create-task.dto'\nimport { UpdateTaskDto } from './dto/update-task.dto'\nimport { Task } from './task.entity'\n\ninterface FindAllArgs {\n  relations?: string[]\n  authorId?: number\n}\n\ninterface FindOneArgs extends FindAllArgs {\n  id: number\n}\n\n@Injectable()\nexport class TasksService {\n  constructor(\n    @InjectRepository(Task)\n    private tasksRepository: EntityRepository,\n  ) {}\n\n  async create(createdById: number, createTaskInput: CreateTaskDto) {\n    const task = this.tasksRepository.create({\n      createdBy: {\n        id: createdById,\n      },\n      ...createTaskInput,\n    })\n    await this.tasksRepository.persistAndFlush(task)\n    return task\n  }\n\n  findAll() {\n    return this.tasksRepository.findAll({ populate: ['createdBy'] })\n  }\n\n  async findOne({ id }: FindOneArgs) {\n    try {\n      const task = this.tasksRepository.findOneOrFail(\n        { id },\n        { populate: ['createdBy'] },\n      )\n      return task\n    } catch (e) {\n      return new NotFoundError(`Not found`, Task)\n    }\n  }\n\n  async update(id: number, updateTaskInput: UpdateTaskDto) {\n    const post = await this.tasksRepository.findOne(id)\n    this.tasksRepository.assign(post, updateTaskInput)\n    await this.tasksRepository.flush()\n    return post\n  }\n\n  async remove(id: number) {\n    await this.tasksRepository.removeAndFlush({ id })\n    return true\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/FindAllArgs-2.html":{"url":"interfaces/FindAllArgs-2.html","title":"interface - FindAllArgs-2","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  FindAllArgs\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/users.service.ts\n        \n\n\n            \n                Description\n            \n            \n                All args for FindAll.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            relations\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        relations\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        relations:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { EntityRepository, expr } from '@mikro-orm/core'\nimport { InjectRepository } from '@mikro-orm/nestjs'\nimport { Injectable } from '@nestjs/common'\nimport { UpdateProfileDto } from './dto/update-profile.dto'\nimport { User } from './user.entity'\n\n/**\n * All args for FindAll.\n */\ninterface FindAllArgs {\n  relations?: string[]\n}\n\ninterface FindOneArgs extends FindAllArgs {\n  id?: number\n  username?: string\n  postId?: number\n}\n\n@Injectable()\nexport class UsersService {\n  constructor(\n    @InjectRepository(User)\n    private usersRepository: EntityRepository,\n  ) {}\n\n  async create(createUserInput: Partial) {\n    const user = this.usersRepository.create(createUserInput)\n    await this.usersRepository.persistAndFlush(user)\n    return user\n  }\n\n  findAll() {\n    return this.usersRepository.find({})\n  }\n\n  findOne({ id, username, postId }: FindOneArgs) {\n    if (id) {\n      return this.usersRepository.findOne({ id })\n    } else if (username) {\n      return this.usersRepository.findOne({\n        [expr('lower(username)')]: username.toLowerCase(),\n      })\n    } else if (postId) {\n      return this.usersRepository.findOne({ lists: { id: postId } })\n    } else {\n      throw new Error('One of ID, username or post ID must be provided.')\n    }\n  }\n\n  async update(id: number, updateUserInput: UpdateProfileDto) {\n    const user = await this.usersRepository.findOneOrFail(id)\n    this.usersRepository.assign(user, updateUserInput)\n    await this.usersRepository.flush()\n    return user\n  }\n\n  async remove(id: number) {\n    await this.usersRepository.removeAndFlush({ id })\n    return true\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/FindOneArgs.html":{"url":"interfaces/FindOneArgs.html","title":"interface - FindOneArgs","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  FindOneArgs\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lists/lists.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        FindAllArgs\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            id\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { EntityRepository, NotFoundError } from '@mikro-orm/core'\nimport { InjectRepository } from '@mikro-orm/nestjs'\nimport { Injectable } from '@nestjs/common'\nimport { CreateListDto } from './dto/create-list.dto'\nimport { UpdateListDto } from './dto/update-list.dto'\nimport { List } from './list.entity'\n\ninterface FindAllArgs {\n  relations?: string[]\n  authorId?: number\n}\n\ninterface FindOneArgs extends FindAllArgs {\n  id: number\n}\n\n@Injectable()\nexport class ListsService {\n  constructor(\n    @InjectRepository(List)\n    private listsRepository: EntityRepository,\n  ) {}\n\n  async create(createdById: number, createListInput: CreateListDto) {\n    const list = this.listsRepository.create({\n      createdBy: {\n        id: createdById,\n      },\n      ...createListInput,\n    })\n    await this.listsRepository.persistAndFlush(list)\n    return list\n  }\n\n  findAll() {\n    return this.listsRepository.findAll({ populate: ['createdBy'] })\n  }\n\n  async findOne({ id }: FindOneArgs) {\n    try {\n      const list = this.listsRepository.findOneOrFail(\n        { id },\n        { populate: ['createdBy'] },\n      )\n      return list\n    } catch (e) {\n      return new NotFoundError(`Not found`, List)\n    }\n  }\n\n  async update(id: number, updateListInput: UpdateListDto) {\n    const post = await this.listsRepository.findOne(id)\n    this.listsRepository.assign(post, updateListInput)\n    await this.listsRepository.flush()\n    return post\n  }\n\n  async remove(id: number) {\n    await this.listsRepository.removeAndFlush({ id })\n    return true\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/FindOneArgs-1.html":{"url":"interfaces/FindOneArgs-1.html","title":"interface - FindOneArgs-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  FindOneArgs\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/tasks/tasks.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        FindAllArgs\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            id\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { EntityRepository, NotFoundError } from '@mikro-orm/core'\nimport { InjectRepository } from '@mikro-orm/nestjs'\nimport { Injectable } from '@nestjs/common'\nimport { CreateTaskDto } from './dto/create-task.dto'\nimport { UpdateTaskDto } from './dto/update-task.dto'\nimport { Task } from './task.entity'\n\ninterface FindAllArgs {\n  relations?: string[]\n  authorId?: number\n}\n\ninterface FindOneArgs extends FindAllArgs {\n  id: number\n}\n\n@Injectable()\nexport class TasksService {\n  constructor(\n    @InjectRepository(Task)\n    private tasksRepository: EntityRepository,\n  ) {}\n\n  async create(createdById: number, createTaskInput: CreateTaskDto) {\n    const task = this.tasksRepository.create({\n      createdBy: {\n        id: createdById,\n      },\n      ...createTaskInput,\n    })\n    await this.tasksRepository.persistAndFlush(task)\n    return task\n  }\n\n  findAll() {\n    return this.tasksRepository.findAll({ populate: ['createdBy'] })\n  }\n\n  async findOne({ id }: FindOneArgs) {\n    try {\n      const task = this.tasksRepository.findOneOrFail(\n        { id },\n        { populate: ['createdBy'] },\n      )\n      return task\n    } catch (e) {\n      return new NotFoundError(`Not found`, Task)\n    }\n  }\n\n  async update(id: number, updateTaskInput: UpdateTaskDto) {\n    const post = await this.tasksRepository.findOne(id)\n    this.tasksRepository.assign(post, updateTaskInput)\n    await this.tasksRepository.flush()\n    return post\n  }\n\n  async remove(id: number) {\n    await this.tasksRepository.removeAndFlush({ id })\n    return true\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/FindOneArgs-2.html":{"url":"interfaces/FindOneArgs-2.html","title":"interface - FindOneArgs-2","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  FindOneArgs\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/users.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        FindAllArgs\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            id\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            postId\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            username\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        postId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        postId:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        username\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        username:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { EntityRepository, expr } from '@mikro-orm/core'\nimport { InjectRepository } from '@mikro-orm/nestjs'\nimport { Injectable } from '@nestjs/common'\nimport { UpdateProfileDto } from './dto/update-profile.dto'\nimport { User } from './user.entity'\n\n/**\n * All args for FindAll.\n */\ninterface FindAllArgs {\n  relations?: string[]\n}\n\ninterface FindOneArgs extends FindAllArgs {\n  id?: number\n  username?: string\n  postId?: number\n}\n\n@Injectable()\nexport class UsersService {\n  constructor(\n    @InjectRepository(User)\n    private usersRepository: EntityRepository,\n  ) {}\n\n  async create(createUserInput: Partial) {\n    const user = this.usersRepository.create(createUserInput)\n    await this.usersRepository.persistAndFlush(user)\n    return user\n  }\n\n  findAll() {\n    return this.usersRepository.find({})\n  }\n\n  findOne({ id, username, postId }: FindOneArgs) {\n    if (id) {\n      return this.usersRepository.findOne({ id })\n    } else if (username) {\n      return this.usersRepository.findOne({\n        [expr('lower(username)')]: username.toLowerCase(),\n      })\n    } else if (postId) {\n      return this.usersRepository.findOne({ lists: { id: postId } })\n    } else {\n      throw new Error('One of ID, username or post ID must be provided.')\n    }\n  }\n\n  async update(id: number, updateUserInput: UpdateProfileDto) {\n    const user = await this.usersRepository.findOneOrFail(id)\n    this.usersRepository.assign(user, updateUserInput)\n    await this.usersRepository.flush()\n    return user\n  }\n\n  async remove(id: number) {\n    await this.usersRepository.removeAndFlush({ id })\n    return true\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/HealthController.html":{"url":"controllers/HealthController.html","title":"controller - HealthController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  HealthController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/health/health.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                health\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                databaseCheck\n                            \n                            \n                                memoryCheck\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        databaseCheck\n                        \n                    \n                \n            \n            \n                \ndatabaseCheck()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/database')@HealthCheck()\n                \n            \n\n            \n                \n                    Defined in src/health/health.controller.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        memoryCheck\n                        \n                    \n                \n            \n            \n                \nmemoryCheck()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/memory')@HealthCheck()\n                \n            \n\n            \n                \n                    Defined in src/health/health.controller.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get } from '@nestjs/common'\nimport {\n  HealthCheck,\n  HealthCheckService,\n  MemoryHealthIndicator,\n  MikroOrmHealthIndicator,\n} from '@nestjs/terminus'\n\n@Controller('health')\nexport class HealthController {\n  constructor(\n    private health: HealthCheckService,\n    private db: MikroOrmHealthIndicator,\n    private memory: MemoryHealthIndicator,\n  ) {}\n\n  @Get('/database')\n  @HealthCheck()\n  databaseCheck() {\n    return this.health.check([() => this.db.pingCheck('database')])\n  }\n\n  @Get('/memory')\n  @HealthCheck()\n  memoryCheck() {\n    return this.health.check([\n      () => this.memory.checkHeap('memory_heap', 150 * 1024 * 1024),\n    ])\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/HealthModule.html":{"url":"modules/HealthModule.html","title":"module - HealthModule","body":"\n                   \n\n\n\n\n    Modules\n    HealthModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/health/health.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Controllers\n                    \n                        \n                            HealthController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { HttpModule } from '@nestjs/axios'\nimport { Module } from '@nestjs/common'\nimport { TerminusModule } from '@nestjs/terminus'\nimport { HealthController } from './health.controller'\n\n@Module({\n  imports: [TerminusModule, HttpModule],\n  controllers: [HealthController],\n})\nexport class HealthModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtAuthGuard.html":{"url":"injectables/JwtAuthGuard.html","title":"injectable - JwtAuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  JwtAuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/guards/jwt-auth.guard.ts\n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common'\nimport { AuthGuard } from '@nestjs/passport'\n\n@Injectable()\nexport class JwtAuthGuard extends AuthGuard('jwt') {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtStrategy.html":{"url":"injectables/JwtStrategy.html","title":"injectable - JwtStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  JwtStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/strategies/jwt.strategy.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(configService: ConfigService, usersService: UsersService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/strategies/jwt.strategy.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        usersService\n                                                  \n                                                        \n                                                                        UsersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        validate\n                        \n                    \n                \n            \n            \n                \n                    \n                    validate(payload: any)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/strategies/jwt.strategy.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    payload\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { ExtractJwt, Strategy } from 'passport-jwt'\nimport { PassportStrategy } from '@nestjs/passport'\nimport { Injectable } from '@nestjs/common'\nimport { ConfigService } from '@nestjs/config'\nimport { UsersService } from '../../users/users.service'\n\n@Injectable()\nexport class JwtStrategy extends PassportStrategy(Strategy) {\n  constructor(\n    configService: ConfigService,\n    private usersService: UsersService,\n  ) {\n    super({\n      jwtFromRequest: ExtractJwt.fromAuthHeaderAsBearerToken(),\n      ignoreExpiration: false,\n      secretOrKey: configService.get('auth.jwtKey'),\n      signOptions: { expiresIn: '24h' },\n    })\n  }\n\n  async validate(payload: any) {\n    const { sub: id } = payload\n    const user = await this.usersService.findOne({ id })\n    return user\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/List.html":{"url":"entities/List.html","title":"entity - List","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  List\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lists/list.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                createdBy\n                            \n                            \n                                    Optional\n                                description\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        createdBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lists/list.entity.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lists/list.entity.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lists/list.entity.ts:8\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { Entity, ManyToOne, Property } from '@mikro-orm/core'\nimport { BaseEntity } from '../common/entities/base-entity.entity'\nimport { User } from '../users/user.entity'\n\n@Entity({ tableName: 'lists' })\nexport class List extends BaseEntity {\n  @Property()\n  title: string\n\n  @Property({ nullable: true })\n  description?: string\n\n  @ManyToOne()\n  createdBy: User\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ListFactory.html":{"url":"classes/ListFactory.html","title":"class - ListFactory","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ListFactory\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/database/factories/list.factory.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    Factory\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                model\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                definition\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        model\n                        \n                    \n                \n            \n                \n                    \n                        Default value : List\n                    \n                \n                    \n                        \n                                Defined in src/database/factories/list.factory.ts:5\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        definition\n                        \n                    \n                \n            \n            \n                \ndefinition(faker: Faker)\n                \n            \n\n\n            \n                \n                    Defined in src/database/factories/list.factory.ts:7\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    faker\n                                    \n                                            Faker\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Partial\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Factory, Faker } from '@mikro-orm/seeder'\nimport { List } from '../../lists/list.entity'\n\nexport class ListFactory extends Factory {\n  model = List\n\n  definition(faker: Faker): Partial {\n    return {\n      title: faker.name.fullName(),\n      description: faker.hacker.phrase(),\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/ListsController.html":{"url":"controllers/ListsController.html","title":"controller - ListsController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  ListsController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lists/lists.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                lists\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                findAll\n                            \n                            \n                                findOne\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(user: User, createListDto: CreateListDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(JwtAuthGuard)@Post()\n                \n            \n\n            \n                \n                    Defined in src/lists/lists.controller.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    createListDto\n                                    \n                                                CreateListDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/lists/lists.controller.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')\n                \n            \n\n            \n                \n                    Defined in src/lists/lists.controller.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                    \n                    remove(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(JwtAuthGuard)@Delete(':id')\n                \n            \n\n            \n                \n                    Defined in src/lists/lists.controller.ts:54\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(id: string, updateListDto: UpdateListDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(JwtAuthGuard)@Put(':id')\n                \n            \n\n            \n                \n                    Defined in src/lists/lists.controller.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateListDto\n                                    \n                                                UpdateListDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Body,\n  Controller,\n  Delete,\n  Get,\n  Param,\n  Post,\n  Put,\n  UnauthorizedException,\n  UseGuards,\n} from '@nestjs/common'\nimport { CurrentUser } from 'src/auth/decorator/current-user.decorator'\nimport { JwtAuthGuard } from 'src/auth/guards/jwt-auth.guard'\nimport { User } from 'src/users/user.entity'\nimport { CreateListDto } from './dto/create-list.dto'\nimport { UpdateListDto } from './dto/update-list.dto'\nimport { ListsService } from './lists.service'\n\n@Controller('lists')\nexport class ListsController {\n  constructor(private readonly listsService: ListsService) {}\n\n  @UseGuards(JwtAuthGuard)\n  @Post()\n  create(@CurrentUser() user: User, @Body() createListDto: CreateListDto) {\n    return this.listsService.create(user.id, createListDto)\n  }\n\n  @Get()\n  findAll() {\n    return this.listsService.findAll()\n  }\n\n  @Get(':id')\n  findOne(@Param('id') id: number) {\n    return this.listsService.findOne({ id })\n  }\n\n  @UseGuards(JwtAuthGuard)\n  @Put(':id')\n  async update(@Param('id') id: string, @Body() updateListDto: UpdateListDto) {\n    try {\n      await this.listsService.findOne({ id: +id })\n      return this.listsService.update(+id, updateListDto)\n    } catch (e) {\n      throw new UnauthorizedException({\n        message: `You aren't the creator of this list.`,\n      })\n    }\n  }\n\n  @UseGuards(JwtAuthGuard)\n  @Delete(':id')\n  async remove(@Param('id') id: string) {\n    try {\n      await this.listsService.findOne({ id: +id })\n      return this.listsService.remove(+id)\n    } catch (e) {\n      throw new UnauthorizedException({\n        message: `You aren't the creator of this list.`,\n      })\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ListsModule.html":{"url":"modules/ListsModule.html","title":"module - ListsModule","body":"\n                   \n\n\n\n\n    Modules\n    ListsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_ListsModule\n\n\n\ncluster_ListsModule_providers\n\n\n\ncluster_ListsModule_exports\n\n\n\n\nListsService \n\nListsService \n\n\n\nListsModule\n\nListsModule\n\nListsService  -->\n\nListsModule->ListsService \n\n\n\n\n\nListsService\n\nListsService\n\nListsModule -->\n\nListsService->ListsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/lists/lists.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ListsService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            ListsController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ListsService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { UsersModule } from '@/users/users.module'\nimport { MikroOrmModule } from '@mikro-orm/nestjs'\nimport { forwardRef, Module } from '@nestjs/common'\n\nimport { List } from './list.entity'\nimport { ListsController } from './lists.controller'\nimport { ListsService } from './lists.service'\n\n@Module({\n  controllers: [ListsController],\n  imports: [MikroOrmModule.forFeature([List]), forwardRef(() => UsersModule)],\n  providers: [ListsService],\n  exports: [ListsService],\n})\nexport class ListsModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ListsService.html":{"url":"injectables/ListsService.html","title":"injectable - ListsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ListsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lists/lists.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                findAll\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(listsRepository: EntityRepository)\n                    \n                \n                        \n                            \n                                Defined in src/lists/lists.service.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        listsRepository\n                                                  \n                                                        \n                                                                        EntityRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(createdById: number, createListInput: CreateListDto)\n                \n            \n\n\n            \n                \n                    Defined in src/lists/lists.service.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createdById\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    createListInput\n                                    \n                                                CreateListDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n\n            \n                \n                    Defined in src/lists/lists.service.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(undefined: FindOneArgs)\n                \n            \n\n\n            \n                \n                    Defined in src/lists/lists.service.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    \n                                                FindOneArgs\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                    \n                    remove(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/lists/lists.service.ts:58\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(id: number, updateListInput: UpdateListDto)\n                \n            \n\n\n            \n                \n                    Defined in src/lists/lists.service.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateListInput\n                                    \n                                                UpdateListDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { EntityRepository, NotFoundError } from '@mikro-orm/core'\nimport { InjectRepository } from '@mikro-orm/nestjs'\nimport { Injectable } from '@nestjs/common'\nimport { CreateListDto } from './dto/create-list.dto'\nimport { UpdateListDto } from './dto/update-list.dto'\nimport { List } from './list.entity'\n\ninterface FindAllArgs {\n  relations?: string[]\n  authorId?: number\n}\n\ninterface FindOneArgs extends FindAllArgs {\n  id: number\n}\n\n@Injectable()\nexport class ListsService {\n  constructor(\n    @InjectRepository(List)\n    private listsRepository: EntityRepository,\n  ) {}\n\n  async create(createdById: number, createListInput: CreateListDto) {\n    const list = this.listsRepository.create({\n      createdBy: {\n        id: createdById,\n      },\n      ...createListInput,\n    })\n    await this.listsRepository.persistAndFlush(list)\n    return list\n  }\n\n  findAll() {\n    return this.listsRepository.findAll({ populate: ['createdBy'] })\n  }\n\n  async findOne({ id }: FindOneArgs) {\n    try {\n      const list = this.listsRepository.findOneOrFail(\n        { id },\n        { populate: ['createdBy'] },\n      )\n      return list\n    } catch (e) {\n      return new NotFoundError(`Not found`, List)\n    }\n  }\n\n  async update(id: number, updateListInput: UpdateListDto) {\n    const post = await this.listsRepository.findOne(id)\n    this.listsRepository.assign(post, updateListInput)\n    await this.listsRepository.flush()\n    return post\n  }\n\n  async remove(id: number) {\n    await this.listsRepository.removeAndFlush({ id })\n    return true\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LocalAuthGuard.html":{"url":"injectables/LocalAuthGuard.html","title":"injectable - LocalAuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LocalAuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/guards/local-auth.guard.ts\n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common'\nimport { AuthGuard } from '@nestjs/passport'\n\n@Injectable()\nexport class LocalAuthGuard extends AuthGuard('local') {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LocalStrategy.html":{"url":"injectables/LocalStrategy.html","title":"injectable - LocalStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LocalStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/strategies/local.strategy.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/strategies/local.strategy.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        validate\n                        \n                    \n                \n            \n            \n                \n                    \n                    validate(username: string, password: string)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/strategies/local.strategy.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    username\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    password\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Strategy } from 'passport-local'\nimport { PassportStrategy } from '@nestjs/passport'\nimport { Injectable, UnauthorizedException } from '@nestjs/common'\nimport { AuthService } from '../auth.service'\n\n@Injectable()\nexport class LocalStrategy extends PassportStrategy(Strategy) {\n  constructor(private authService: AuthService) {\n    super()\n  }\n\n  async validate(username: string, password: string) {\n    const user = await this.authService.validateUser(username, password)\n    if (!user) {\n      throw new UnauthorizedException()\n    }\n    return user\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoginUserBody.html":{"url":"classes/LoginUserBody.html","title":"class - LoginUserBody","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoginUserBody\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/dto/login-user.body.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                password\n                            \n                            \n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/login-user.body.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/login-user.body.ts:7\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger'\nimport { IsString } from 'class-validator'\n\nexport class LoginUserBody {\n  @IsString()\n  @ApiProperty()\n  username: string\n\n  @IsString()\n  @ApiProperty()\n  password: string\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoginUserResponse.html":{"url":"classes/LoginUserResponse.html","title":"class - LoginUserResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoginUserResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/dto/login-user.response.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                accessToken\n                            \n                            \n                                refreshToken\n                            \n                            \n                                user\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        accessToken\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/login-user.response.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        refreshToken\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/login-user.response.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserDto\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/login-user.response.ts:6\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger'\nimport { UserDto } from '../../users/dto/user.dto'\n\nexport class LoginUserResponse {\n  @ApiProperty()\n  user: UserDto\n\n  @ApiProperty()\n  accessToken: string\n\n  @ApiProperty()\n  refreshToken: string\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Migration20220926031634.html":{"url":"classes/Migration20220926031634.html","title":"class - Migration20220926031634","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Migration20220926031634\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/database/migrations/Migration20220926031634.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    Migration\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                up\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        up\n                        \n                    \n                \n            \n            \n                \n                    \n                    up()\n                \n            \n\n\n            \n                \n                    Defined in src/database/migrations/Migration20220926031634.ts:4\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Migration } from '@mikro-orm/migrations'\n\nexport class Migration20220926031634 extends Migration {\n  async up(): Promise {\n    this.addSql(\n      'create table \"users\" (\"id\" serial primary key, \"created_at\" timestamptz(0) not null, \"updated_at\" timestamptz(0) not null, \"username\" varchar(255) not null, \"password\" varchar(255) not null, \"first_name\" varchar(255) null, \"last_name\" varchar(255) null);',\n    )\n\n    this.addSql(\n      'create table \"refresh_tokens\" (\"id\" serial primary key, \"created_at\" timestamptz(0) not null, \"updated_at\" timestamptz(0) not null, \"user_id\" int not null, \"is_revoked\" boolean not null, \"expires\" timestamptz(0) not null);',\n    )\n\n    this.addSql(\n      'create table \"posts\" (\"id\" serial primary key, \"created_at\" timestamptz(0) not null, \"updated_at\" timestamptz(0) not null, \"title\" varchar(255) not null, \"body\" varchar(255) not null, \"author_id\" int not null);',\n    )\n\n    this.addSql(\n      'alter table \"refresh_tokens\" add constraint \"refresh_tokens_user_id_foreign\" foreign key (\"user_id\") references \"users\" (\"id\") on update cascade on delete CASCADE;',\n    )\n\n    this.addSql(\n      'alter table \"posts\" add constraint \"posts_author_id_foreign\" foreign key (\"author_id\") references \"users\" (\"id\") on update cascade on delete CASCADE;',\n    )\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Migration20220926213133.html":{"url":"classes/Migration20220926213133.html","title":"class - Migration20220926213133","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Migration20220926213133\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/database/migrations/Migration20220926213133.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    Migration\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                down\n                            \n                            \n                                    Async\n                                up\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        down\n                        \n                    \n                \n            \n            \n                \n                    \n                    down()\n                \n            \n\n\n            \n                \n                    Defined in src/database/migrations/Migration20220926213133.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        up\n                        \n                    \n                \n            \n            \n                \n                    \n                    up()\n                \n            \n\n\n            \n                \n                    Defined in src/database/migrations/Migration20220926213133.ts:4\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Migration } from '@mikro-orm/migrations'\n\nexport class Migration20220926213133 extends Migration {\n  async up(): Promise {\n    this.addSql(\n      'alter table \"users\" add constraint \"users_username_unique\" unique (\"username\");',\n    )\n\n    this.addSql(\n      'alter table \"posts\" add column \"description\" varchar(255) null;',\n    )\n    this.addSql('alter table \"posts\" drop column \"body\";')\n  }\n\n  async down(): Promise {\n    this.addSql('alter table \"users\" drop constraint \"users_username_unique\";')\n\n    this.addSql('alter table \"posts\" add column \"body\" varchar(255) not null;')\n    this.addSql('alter table \"posts\" drop column \"description\";')\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Migration20220926214650.html":{"url":"classes/Migration20220926214650.html","title":"class - Migration20220926214650","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Migration20220926214650\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/database/migrations/Migration20220926214650.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    Migration\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                down\n                            \n                            \n                                    Async\n                                up\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        down\n                        \n                    \n                \n            \n            \n                \n                    \n                    down()\n                \n            \n\n\n            \n                \n                    Defined in src/database/migrations/Migration20220926214650.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        up\n                        \n                    \n                \n            \n            \n                \n                    \n                    up()\n                \n            \n\n\n            \n                \n                    Defined in src/database/migrations/Migration20220926214650.ts:4\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Migration } from '@mikro-orm/migrations'\n\nexport class Migration20220926214650 extends Migration {\n  async up(): Promise {\n    this.addSql(\n      'create table \"lists\" (\"id\" serial primary key, \"created_at\" timestamptz(0) not null, \"updated_at\" timestamptz(0) not null, \"title\" varchar(255) not null, \"description\" varchar(255) null, \"created_by_id\" int not null);',\n    )\n\n    this.addSql(\n      'alter table \"lists\" add constraint \"lists_created_by_id_foreign\" foreign key (\"created_by_id\") references \"users\" (\"id\") on update cascade on delete CASCADE;',\n    )\n\n    this.addSql('drop table if exists \"posts\" cascade;')\n  }\n\n  async down(): Promise {\n    this.addSql(\n      'create table \"posts\" (\"id\" serial primary key, \"created_at\" timestamptz(0) not null, \"updated_at\" timestamptz(0) not null, \"title\" varchar(255) not null, \"description\" varchar(255) null, \"author_id\" int not null);',\n    )\n\n    this.addSql(\n      'alter table \"posts\" add constraint \"posts_author_id_foreign\" foreign key (\"author_id\") references \"users\" (\"id\") on update cascade on delete CASCADE;',\n    )\n\n    this.addSql('drop table if exists \"lists\" cascade;')\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Migration20220926222224.html":{"url":"classes/Migration20220926222224.html","title":"class - Migration20220926222224","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Migration20220926222224\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/database/migrations/Migration20220926222224.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    Migration\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                down\n                            \n                            \n                                    Async\n                                up\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        down\n                        \n                    \n                \n            \n            \n                \n                    \n                    down()\n                \n            \n\n\n            \n                \n                    Defined in src/database/migrations/Migration20220926222224.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        up\n                        \n                    \n                \n            \n            \n                \n                    \n                    up()\n                \n            \n\n\n            \n                \n                    Defined in src/database/migrations/Migration20220926222224.ts:4\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Migration } from '@mikro-orm/migrations'\n\nexport class Migration20220926222224 extends Migration {\n  async up(): Promise {\n    this.addSql(\n      'alter table \"lists\" drop constraint \"lists_created_by_id_foreign\";',\n    )\n\n    this.addSql(\n      'alter table \"lists\" add constraint \"lists_created_by_id_foreign\" foreign key (\"created_by_id\") references \"users\" (\"id\") on update cascade;',\n    )\n  }\n\n  async down(): Promise {\n    this.addSql(\n      'alter table \"lists\" drop constraint \"lists_created_by_id_foreign\";',\n    )\n\n    this.addSql(\n      'alter table \"lists\" add constraint \"lists_created_by_id_foreign\" foreign key (\"created_by_id\") references \"users\" (\"id\") on update cascade on delete CASCADE;',\n    )\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Migration20220926231541.html":{"url":"classes/Migration20220926231541.html","title":"class - Migration20220926231541","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Migration20220926231541\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/database/migrations/Migration20220926231541.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    Migration\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                down\n                            \n                            \n                                    Async\n                                up\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        down\n                        \n                    \n                \n            \n            \n                \n                    \n                    down()\n                \n            \n\n\n            \n                \n                    Defined in src/database/migrations/Migration20220926231541.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        up\n                        \n                    \n                \n            \n            \n                \n                    \n                    up()\n                \n            \n\n\n            \n                \n                    Defined in src/database/migrations/Migration20220926231541.ts:4\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Migration } from '@mikro-orm/migrations'\n\nexport class Migration20220926231541 extends Migration {\n  async up(): Promise {\n    this.addSql(\n      'create table \"todos\" (\"id\" serial primary key, \"created_at\" timestamptz(0) not null, \"updated_at\" timestamptz(0) not null, \"title\" varchar(255) not null, \"description\" varchar(255) null, \"created_by_id\" int not null, \"todo_id\" int not null);',\n    )\n\n    this.addSql(\n      'alter table \"todos\" add constraint \"todos_created_by_id_foreign\" foreign key (\"created_by_id\") references \"users\" (\"id\") on update cascade;',\n    )\n    this.addSql(\n      'alter table \"todos\" add constraint \"todos_todo_id_foreign\" foreign key (\"todo_id\") references \"lists\" (\"id\") on update cascade;',\n    )\n  }\n\n  async down(): Promise {\n    this.addSql('drop table if exists \"todos\" cascade;')\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Migration20221013014335.html":{"url":"classes/Migration20221013014335.html","title":"class - Migration20221013014335","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Migration20221013014335\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/database/migrations/Migration20221013014335.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    Migration\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                down\n                            \n                            \n                                    Async\n                                up\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        down\n                        \n                    \n                \n            \n            \n                \n                    \n                    down()\n                \n            \n\n\n            \n                \n                    Defined in src/database/migrations/Migration20221013014335.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        up\n                        \n                    \n                \n            \n            \n                \n                    \n                    up()\n                \n            \n\n\n            \n                \n                    Defined in src/database/migrations/Migration20221013014335.ts:4\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Migration } from '@mikro-orm/migrations'\n\nexport class Migration20221013014335 extends Migration {\n  async up(): Promise {\n    this.addSql('alter table \"todos\" drop constraint \"todos_todo_id_foreign\";')\n\n    this.addSql('alter table \"todos\" rename column \"todo_id\" to \"list_id\";')\n    this.addSql(\n      'alter table \"todos\" add constraint \"todos_list_id_foreign\" foreign key (\"list_id\") references \"lists\" (\"id\") on update cascade;',\n    )\n  }\n\n  async down(): Promise {\n    this.addSql('alter table \"todos\" drop constraint \"todos_list_id_foreign\";')\n\n    this.addSql('alter table \"todos\" rename column \"list_id\" to \"todo_id\";')\n    this.addSql(\n      'alter table \"todos\" add constraint \"todos_todo_id_foreign\" foreign key (\"todo_id\") references \"lists\" (\"id\") on update cascade;',\n    )\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Migration20221023001353.html":{"url":"classes/Migration20221023001353.html","title":"class - Migration20221023001353","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Migration20221023001353\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/database/migrations/Migration20221023001353.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    Migration\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                down\n                            \n                            \n                                    Async\n                                up\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        down\n                        \n                    \n                \n            \n            \n                \n                    \n                    down()\n                \n            \n\n\n            \n                \n                    Defined in src/database/migrations/Migration20221023001353.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        up\n                        \n                    \n                \n            \n            \n                \n                    \n                    up()\n                \n            \n\n\n            \n                \n                    Defined in src/database/migrations/Migration20221023001353.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Migration } from '@mikro-orm/migrations';\n\nexport class Migration20221023001353 extends Migration {\n\n  async up(): Promise {\n    this.addSql('create table \"tasks\" (\"id\" serial primary key, \"created_at\" timestamptz(0) not null, \"updated_at\" timestamptz(0) not null, \"title\" varchar(255) not null, \"description\" varchar(255) null, \"created_by_id\" int not null, \"list_id\" int not null);');\n\n    this.addSql('alter table \"tasks\" add constraint \"tasks_created_by_id_foreign\" foreign key (\"created_by_id\") references \"users\" (\"id\") on update cascade;');\n    this.addSql('alter table \"tasks\" add constraint \"tasks_list_id_foreign\" foreign key (\"list_id\") references \"lists\" (\"id\") on update cascade;');\n\n    this.addSql('drop table if exists \"todos\" cascade;');\n  }\n\n  async down(): Promise {\n    this.addSql('create table \"todos\" (\"id\" serial primary key, \"created_at\" timestamptz(0) not null, \"updated_at\" timestamptz(0) not null, \"title\" varchar(255) not null, \"description\" varchar(255) null, \"created_by_id\" int not null, \"list_id\" int not null);');\n\n    this.addSql('alter table \"todos\" add constraint \"todos_created_by_id_foreign\" foreign key (\"created_by_id\") references \"users\" (\"id\") on update cascade;');\n    this.addSql('alter table \"todos\" add constraint \"todos_list_id_foreign\" foreign key (\"list_id\") references \"lists\" (\"id\") on update cascade;');\n\n    this.addSql('drop table if exists \"tasks\" cascade;');\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Migration20221031000536.html":{"url":"classes/Migration20221031000536.html","title":"class - Migration20221031000536","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Migration20221031000536\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/database/migrations/Migration20221031000536.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    Migration\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                down\n                            \n                            \n                                    Async\n                                up\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        down\n                        \n                    \n                \n            \n            \n                \n                    \n                    down()\n                \n            \n\n\n            \n                \n                    Defined in src/database/migrations/Migration20221031000536.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        up\n                        \n                    \n                \n            \n            \n                \n                    \n                    up()\n                \n            \n\n\n            \n                \n                    Defined in src/database/migrations/Migration20221031000536.ts:4\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Migration } from '@mikro-orm/migrations'\n\nexport class Migration20221031000536 extends Migration {\n  async up(): Promise {\n    this.addSql(\n      'alter table \"refresh_tokens\" alter column \"is_revoked\" type boolean using (\"is_revoked\"::boolean);',\n    )\n    this.addSql(\n      'alter table \"refresh_tokens\" alter column \"is_revoked\" set default false;',\n    )\n\n    this.addSql(\n      'alter table \"tasks\" add column \"complete\" boolean not null default false',\n    )\n  }\n\n  async down(): Promise {\n    this.addSql(\n      'alter table \"refresh_tokens\" alter column \"is_revoked\" drop default;',\n    )\n    this.addSql(\n      'alter table \"refresh_tokens\" alter column \"is_revoked\" type boolean using (\"is_revoked\"::boolean);',\n    )\n\n    this.addSql('alter table \"tasks\" drop column \"complete\";')\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Migration20221129042732.html":{"url":"classes/Migration20221129042732.html","title":"class - Migration20221129042732","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Migration20221129042732\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/database/migrations/Migration20221129042732.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    Migration\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                down\n                            \n                            \n                                    Async\n                                up\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        down\n                        \n                    \n                \n            \n            \n                \n                    \n                    down()\n                \n            \n\n\n            \n                \n                    Defined in src/database/migrations/Migration20221129042732.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        up\n                        \n                    \n                \n            \n            \n                \n                    \n                    up()\n                \n            \n\n\n            \n                \n                    Defined in src/database/migrations/Migration20221129042732.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Migration } from '@mikro-orm/migrations';\n\nexport class Migration20221129042732 extends Migration {\n\n  async up(): Promise {\n    this.addSql('create table \"rooms\" (\"id\" serial primary key, \"created_at\" timestamptz(0) not null, \"updated_at\" timestamptz(0) not null, \"name\" varchar(255) not null, \"created_by_id\" int not null);');\n\n    this.addSql('alter table \"rooms\" add constraint \"rooms_created_by_id_foreign\" foreign key (\"created_by_id\") references \"users\" (\"id\") on update cascade;');\n  }\n\n  async down(): Promise {\n    this.addSql('drop table if exists \"rooms\" cascade;');\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RedisIoAdapter.html":{"url":"classes/RedisIoAdapter.html","title":"class - RedisIoAdapter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RedisIoAdapter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/adapters/redis.adapter.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    IoAdapter\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                adapterConstructor\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                connectToRedis\n                            \n                            \n                                createIOServer\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        adapterConstructor\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ReturnType<>\n\n                    \n                \n                    \n                        \n                                Defined in src/common/adapters/redis.adapter.ts:7\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        connectToRedis\n                        \n                    \n                \n            \n            \n                \n                    \n                    connectToRedis()\n                \n            \n\n\n            \n                \n                    Defined in src/common/adapters/redis.adapter.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createIOServer\n                        \n                    \n                \n            \n            \n                \ncreateIOServer(port: number, options?: ServerOptions)\n                \n            \n\n\n            \n                \n                    Defined in src/common/adapters/redis.adapter.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    port\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                            ServerOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { IoAdapter } from '@nestjs/platform-socket.io'\nimport { createAdapter } from '@socket.io/redis-adapter'\nimport { createClient } from 'redis'\nimport { ServerOptions } from 'socket.io'\n\nexport class RedisIoAdapter extends IoAdapter {\n  private adapterConstructor: ReturnType\n\n  async connectToRedis(): Promise {\n    const pubClient = createClient({\n      url: `redis://${process.env.REDIS_HOST}:${process.env.REDIS_PORT}`,\n    })\n    const subClient = pubClient.duplicate()\n\n    await Promise.all([pubClient.connect(), subClient.connect()])\n\n    this.adapterConstructor = createAdapter(pubClient, subClient)\n  }\n\n  createIOServer(port: number, options?: ServerOptions): any {\n    const server = super.createIOServer(port, options)\n    server.adapter(this.adapterConstructor)\n    return server\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/RefreshToken.html":{"url":"entities/RefreshToken.html","title":"entity - RefreshToken","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  RefreshToken\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/entities/refresh-token.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                expires\n                            \n                            \n                                revoked\n                            \n                            \n                                user\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        expires\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/entities/refresh-token.entity.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        revoked\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property({name: 'is_revoked'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/entities/refresh-token.entity.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, {onDelete: 'CASCADE', joinColumn: 'user_id'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/entities/refresh-token.entity.ts:8\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { Entity, ManyToOne, Property } from '@mikro-orm/core'\nimport { BaseEntity } from '../../common/entities/base-entity.entity'\nimport { User } from '../../users/user.entity'\n\n@Entity({ tableName: 'refresh_tokens' })\nexport class RefreshToken extends BaseEntity {\n  @ManyToOne(() => User, { onDelete: 'CASCADE', joinColumn: 'user_id' })\n  user: User\n\n  @Property({ name: 'is_revoked' })\n  revoked = false\n\n  @Property()\n  expires: Date\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RefreshTokenBody.html":{"url":"classes/RefreshTokenBody.html","title":"class - RefreshTokenBody","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RefreshTokenBody\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/dto/refresh-token.body.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                refreshToken\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        refreshToken\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/refresh-token.body.ts:5\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger'\n\nexport class RefreshTokenBody {\n  @ApiProperty()\n  refreshToken: string\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RefreshTokenResponse.html":{"url":"classes/RefreshTokenResponse.html","title":"class - RefreshTokenResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RefreshTokenResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/dto/refresh-token.response.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                accessToken\n                            \n                            \n                                user\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        accessToken\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/refresh-token.response.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserDto\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/refresh-token.response.ts:6\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger'\nimport { UserDto } from '../../users/dto/user.dto'\n\nexport class RefreshTokenResponse {\n  @ApiProperty()\n  user: UserDto\n\n  @ApiProperty()\n  accessToken: string\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RegisterUserBody.html":{"url":"classes/RegisterUserBody.html","title":"class - RegisterUserBody","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RegisterUserBody\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/dto/register-user.body.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                password\n                            \n                            \n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/register-user.body.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/register-user.body.ts:7\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger'\nimport { IsString } from 'class-validator'\n\nexport class RegisterUserBody {\n  @ApiProperty()\n  @IsString()\n  username: string\n\n  @ApiProperty()\n  @IsString()\n  password: string\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RegisterUserResponse.html":{"url":"classes/RegisterUserResponse.html","title":"class - RegisterUserResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RegisterUserResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/dto/register-user.response.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                accessToken\n                            \n                            \n                                refreshToken\n                            \n                            \n                                user\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        accessToken\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/register-user.response.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        refreshToken\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/register-user.response.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserDto\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/register-user.response.ts:6\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger'\nimport { UserDto } from '../../users/dto/user.dto'\n\nexport class RegisterUserResponse {\n  @ApiProperty()\n  user: UserDto\n\n  @ApiProperty()\n  accessToken: string\n\n  @ApiProperty()\n  refreshToken: string\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/Room.html":{"url":"entities/Room.html","title":"entity - Room","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  Room\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/rooms/room.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                createdBy\n                            \n                            \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        createdBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne()@ApiProperty({description: 'User. Creator of the task.'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/rooms/room.entity.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()@ApiProperty({example: 'Main bedroom', description: 'Name of the room'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/rooms/room.entity.ts:13\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { BaseEntity } from '@/common/entities/base-entity.entity'\nimport { User } from '@/users/user.entity'\nimport { Entity, ManyToOne, Property } from '@mikro-orm/core'\nimport { ApiProperty } from '@nestjs/swagger'\n\n@Entity({ tableName: 'rooms' })\nexport class Room extends BaseEntity {\n  @Property()\n  @ApiProperty({\n    example: 'Main bedroom',\n    description: 'Name of the room',\n  })\n  name: string\n\n  @ManyToOne()\n  @ApiProperty({\n    description: 'User. Creator of the task.',\n  })\n  createdBy: User\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/RoomsController.html":{"url":"controllers/RoomsController.html","title":"controller - RoomsController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  RoomsController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/rooms/rooms.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                rooms\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                findAll\n                            \n                            \n                                findOne\n                            \n                            \n                                remove\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(user: User, createRoomDto: CreateRoomDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n            \n                \n                    Defined in src/rooms/rooms.controller.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    createRoomDto\n                                    \n                                                CreateRoomDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/rooms/rooms.controller.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')\n                \n            \n\n            \n                \n                    Defined in src/rooms/rooms.controller.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        remove\n                        \n                    \n                \n            \n            \n                \nremove(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')\n                \n            \n\n            \n                \n                    Defined in src/rooms/rooms.controller.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(id: string, updateRoomDto: UpdateRoomDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')\n                \n            \n\n            \n                \n                    Defined in src/rooms/rooms.controller.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateRoomDto\n                                    \n                                                UpdateRoomDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Get,\n  Post,\n  Body,\n  Patch,\n  Param,\n  Delete,\n  UseGuards,\n} from '@nestjs/common'\nimport { RoomsService } from './rooms.service'\nimport { CreateRoomDto } from './dto/create-room.dto'\nimport { UpdateRoomDto } from './dto/update-room.dto'\nimport { CurrentUser } from '@/auth/decorator/current-user.decorator'\nimport { User } from '@/users/user.entity'\nimport { ApiBearerAuth, ApiTags } from '@nestjs/swagger'\nimport { JwtAuthGuard } from '@/auth/guards/jwt-auth.guard'\n\n@ApiTags('rooms')\n@ApiBearerAuth()\n@UseGuards(JwtAuthGuard)\n@Controller('rooms')\nexport class RoomsController {\n  constructor(private readonly roomsService: RoomsService) {}\n\n  @Post()\n  create(@CurrentUser() user: User, @Body() createRoomDto: CreateRoomDto) {\n    return this.roomsService.create(user.id, createRoomDto)\n  }\n\n  @Get()\n  findAll() {\n    return this.roomsService.findAll()\n  }\n\n  @Get(':id')\n  findOne(@Param('id') id: string) {\n    return this.roomsService.findOne(+id)\n  }\n\n  @Patch(':id')\n  update(@Param('id') id: string, @Body() updateRoomDto: UpdateRoomDto) {\n    return this.roomsService.update(+id, updateRoomDto)\n  }\n\n  @Delete(':id')\n  remove(@Param('id') id: string) {\n    return this.roomsService.remove(+id)\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/RoomsModule.html":{"url":"modules/RoomsModule.html","title":"module - RoomsModule","body":"\n                   \n\n\n\n\n    Modules\n    RoomsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_RoomsModule\n\n\n\ncluster_RoomsModule_exports\n\n\n\ncluster_RoomsModule_providers\n\n\n\n\nRoomsService \n\nRoomsService \n\n\n\nRoomsModule\n\nRoomsModule\n\nRoomsService  -->\n\nRoomsModule->RoomsService \n\n\n\n\n\nRoomsService\n\nRoomsService\n\nRoomsModule -->\n\nRoomsService->RoomsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/rooms/rooms.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            RoomsService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            RoomsController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            RoomsService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { forwardRef, Module } from '@nestjs/common'\nimport { RoomsService } from './rooms.service'\nimport { RoomsController } from './rooms.controller'\nimport { MikroOrmModule } from '@mikro-orm/nestjs'\nimport { Room } from './room.entity'\nimport { UsersModule } from '@/users/users.module'\n\n@Module({\n  imports: [MikroOrmModule.forFeature([Room]), forwardRef(() => UsersModule)],\n  controllers: [RoomsController],\n  providers: [RoomsService],\n  exports: [RoomsService],\n})\nexport class RoomsModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/RoomsService.html":{"url":"injectables/RoomsService.html","title":"injectable - RoomsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  RoomsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/rooms/rooms.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                findAll\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(roomsRepository: EntityRepository)\n                    \n                \n                        \n                            \n                                Defined in src/rooms/rooms.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        roomsRepository\n                                                  \n                                                        \n                                                                        EntityRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(createdById: number, createRoomDto: CreateRoomDto)\n                \n            \n\n\n            \n                \n                    Defined in src/rooms/rooms.service.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createdById\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    createRoomDto\n                                    \n                                                CreateRoomDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n\n            \n                \n                    Defined in src/rooms/rooms.service.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/rooms/rooms.service.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                    \n                    remove(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/rooms/rooms.service.ts:49\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(id: number, updateRoomDto: UpdateRoomDto)\n                \n            \n\n\n            \n                \n                    Defined in src/rooms/rooms.service.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateRoomDto\n                                    \n                                                UpdateRoomDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { EntityRepository, NotFoundError } from '@mikro-orm/core'\nimport { InjectRepository } from '@mikro-orm/nestjs'\nimport { Injectable } from '@nestjs/common'\nimport { CreateRoomDto } from './dto/create-room.dto'\nimport { UpdateRoomDto } from './dto/update-room.dto'\nimport { Room } from './room.entity'\n\n@Injectable()\nexport class RoomsService {\n  constructor(\n    @InjectRepository(Room)\n    private roomsRepository: EntityRepository,\n  ) {}\n\n  async create(createdById: number, createRoomDto: CreateRoomDto) {\n    const room = this.roomsRepository.create({\n      createdBy: {\n        id: createdById,\n      },\n      ...createRoomDto,\n    })\n    await this.roomsRepository.persistAndFlush(room)\n    return room\n  }\n\n  findAll() {\n    return this.roomsRepository.findAll({ populate: ['createdBy'] })\n  }\n\n  async findOne(id: number) {\n    try {\n      const list = this.roomsRepository.findOneOrFail(\n        { id },\n        { populate: ['createdBy'] },\n      )\n      return list\n    } catch (e) {\n      return new NotFoundError(`Not found`, Room)\n    }\n  }\n\n  async update(id: number, updateRoomDto: UpdateRoomDto) {\n    const room = await this.roomsRepository.findOne(id)\n    this.roomsRepository.assign(room, updateRoomDto)\n    await this.roomsRepository.flush()\n    return room\n  }\n\n  async remove(id: number) {\n    await this.roomsRepository.removeAndFlush({ id })\n    return true\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/Task.html":{"url":"entities/Task.html","title":"entity - Task","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  Task\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/tasks/task.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                complete\n                            \n                            \n                                createdBy\n                            \n                            \n                                    Optional\n                                description\n                            \n                            \n                                list\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        complete\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property({default: false})@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/tasks/task.entity.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne()@ApiProperty({description: 'User. Creator of the task.'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/tasks/task.entity.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property({nullable: true})@ApiProperty({example: 'Be sure to remove all the shelving and scrub it.', description: 'Optional. Description of the task'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/tasks/task.entity.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        list\n                        \n                    \n                \n            \n                \n                    \n                        Type :         List\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne()@ApiProperty({description: 'List the task belongs to.'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/tasks/task.entity.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()@ApiProperty({example: 'Clean out the fridge', description: 'Title of the task'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/tasks/task.entity.ts:14\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { Entity, ManyToOne, Property } from '@mikro-orm/core'\nimport { List } from '../lists/list.entity'\nimport { BaseEntity } from '../common/entities/base-entity.entity'\nimport { User } from '../users/user.entity'\nimport { ApiProperty } from '@nestjs/swagger'\n\n@Entity({ tableName: 'tasks' })\nexport class Task extends BaseEntity {\n  @Property()\n  @ApiProperty({\n    example: 'Clean out the fridge',\n    description: 'Title of the task',\n  })\n  title: string\n\n  @Property({ nullable: true })\n  @ApiProperty({\n    example: 'Be sure to remove all the shelving and scrub it.',\n    description: 'Optional. Description of the task',\n  })\n  description?: string\n\n  @ManyToOne()\n  @ApiProperty({\n    description: 'User. Creator of the task.',\n  })\n  createdBy: User\n\n  @ManyToOne()\n  @ApiProperty({\n    description: 'List the task belongs to.',\n  })\n  list: List\n\n  @Property({ default: false })\n  @ApiProperty()\n  complete: boolean\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TaskFactory.html":{"url":"classes/TaskFactory.html","title":"class - TaskFactory","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TaskFactory\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/database/factories/task.factory.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    Factory\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                model\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                definition\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        model\n                        \n                    \n                \n            \n                \n                    \n                        Default value : Task\n                    \n                \n                    \n                        \n                                Defined in src/database/factories/task.factory.ts:5\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        definition\n                        \n                    \n                \n            \n            \n                \ndefinition(faker: Faker)\n                \n            \n\n\n            \n                \n                    Defined in src/database/factories/task.factory.ts:7\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    faker\n                                    \n                                            Faker\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Partial\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Factory, Faker } from '@mikro-orm/seeder'\nimport { Task } from '../../tasks/task.entity'\n\nexport class TaskFactory extends Factory {\n  model = Task\n\n  definition(faker: Faker): Partial {\n    return {\n      title: faker.name.fullName(),\n      description: faker.hacker.phrase(),\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/TasksController.html":{"url":"controllers/TasksController.html","title":"controller - TasksController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  TasksController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/tasks/tasks.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                tasks\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                findAll\n                            \n                            \n                                findOne\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(user: User, createTaskDto: CreateTaskDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@ApiOperation({summary: 'Create task'})\n                \n            \n\n            \n                \n                    Defined in src/tasks/tasks.controller.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    createTaskDto\n                                    \n                                                CreateTaskDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/tasks/tasks.controller.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')@ApiResponse({status: 200, description: 'The found task record', type: Task})\n                \n            \n\n            \n                \n                    Defined in src/tasks/tasks.controller.ts:50\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                    \n                    remove(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')\n                \n            \n\n            \n                \n                    Defined in src/tasks/tasks.controller.ts:67\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(id: number, updateTaskDto: UpdateTaskDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Put(':id')\n                \n            \n\n            \n                \n                    Defined in src/tasks/tasks.controller.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateTaskDto\n                                    \n                                                UpdateTaskDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Body,\n  Controller,\n  Delete,\n  Get,\n  Param,\n  Post,\n  Put,\n  UnauthorizedException,\n  UseGuards,\n} from '@nestjs/common'\nimport {\n  ApiBearerAuth,\n  ApiOperation,\n  ApiResponse,\n  ApiTags,\n} from '@nestjs/swagger'\nimport { CurrentUser } from 'src/auth/decorator/current-user.decorator'\nimport { JwtAuthGuard } from 'src/auth/guards/jwt-auth.guard'\nimport { User } from 'src/users/user.entity'\nimport { CreateTaskDto } from './dto/create-task.dto'\nimport { UpdateTaskDto } from './dto/update-task.dto'\nimport { Task } from './task.entity'\nimport { TasksService } from './tasks.service'\n\n@ApiTags('tasks')\n@ApiBearerAuth()\n@UseGuards(JwtAuthGuard)\n@Controller('tasks')\nexport class TasksController {\n  constructor(private readonly tasksService: TasksService) {}\n\n  @Post()\n  @ApiOperation({ summary: 'Create task' })\n  create(@CurrentUser() user: User, @Body() createTaskDto: CreateTaskDto) {\n    return this.tasksService.create(user.id, createTaskDto)\n  }\n\n  @Get()\n  findAll() {\n    return this.tasksService.findAll()\n  }\n\n  @Get(':id')\n  @ApiResponse({\n    status: 200,\n    description: 'The found task record',\n    type: Task,\n  })\n  findOne(@Param('id') id: number) {\n    return this.tasksService.findOne({ id })\n  }\n\n  @Put(':id')\n  async update(@Param('id') id: number, @Body() updateTaskDto: UpdateTaskDto) {\n    try {\n      await this.tasksService.findOne({ id: +id })\n      return this.tasksService.update(+id, updateTaskDto)\n    } catch (e) {\n      throw new UnauthorizedException({\n        message: `You aren't the creator of this task.`,\n      })\n    }\n  }\n\n  @Delete(':id')\n  async remove(@Param('id') id: string) {\n    try {\n      await this.tasksService.findOne({ id: +id })\n      return this.tasksService.remove(+id)\n    } catch (e) {\n      throw new UnauthorizedException({\n        message: `You aren't the creator of this task.`,\n      })\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TasksGateway.html":{"url":"classes/TasksGateway.html","title":"class - TasksGateway","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TasksGateway\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/tasks/tasks.gateway.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                server\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                findAll\n                            \n                            \n                                    Async\n                                identity\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        server\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Server\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @WebSocketServer()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/tasks/tasks.gateway.ts:18\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll(data: any)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @SubscribeMessage('events')\n                \n            \n\n            \n                \n                    Defined in src/tasks/tasks.gateway.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        identity\n                        \n                    \n                \n            \n            \n                \n                    \n                    identity(data: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @SubscribeMessage('identity')\n                \n            \n\n            \n                \n                    Defined in src/tasks/tasks.gateway.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {\n  MessageBody,\n  SubscribeMessage,\n  WebSocketGateway,\n  WebSocketServer,\n  WsResponse,\n} from '@nestjs/websockets'\nimport { from, map, Observable } from 'rxjs'\nimport { Server } from 'socket.io'\n\n@WebSocketGateway({\n  cors: {\n    origin: '*',\n  },\n})\nexport class TasksGateway {\n  @WebSocketServer()\n  server: Server\n\n  @SubscribeMessage('events')\n  findAll(@MessageBody() data: any): Observable> {\n    return from([1, 2, 3]).pipe(\n      map((item) => ({ event: 'events', data: item })),\n    )\n  }\n\n  @SubscribeMessage('identity')\n  async identity(@MessageBody() data: number): Promise {\n    return data\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TasksModule.html":{"url":"modules/TasksModule.html","title":"module - TasksModule","body":"\n                   \n\n\n\n\n    Modules\n    TasksModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_TasksModule\n\n\n\ncluster_TasksModule_exports\n\n\n\ncluster_TasksModule_providers\n\n\n\n\nTasksService \n\nTasksService \n\n\n\nTasksModule\n\nTasksModule\n\nTasksService  -->\n\nTasksModule->TasksService \n\n\n\n\n\nTasksService\n\nTasksService\n\nTasksModule -->\n\nTasksService->TasksModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/tasks/tasks.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            TasksService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            TasksController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            TasksService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { MikroOrmModule } from '@mikro-orm/nestjs'\nimport { forwardRef, Module } from '@nestjs/common'\nimport { UsersModule } from 'src/users/users.module'\nimport { Task } from './task.entity'\nimport { TasksController } from './tasks.controller'\nimport { TasksService } from './tasks.service'\n\n@Module({\n  controllers: [TasksController],\n  imports: [MikroOrmModule.forFeature([Task]), forwardRef(() => UsersModule)],\n  providers: [TasksService],\n  exports: [TasksService],\n})\nexport class TasksModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TasksService.html":{"url":"injectables/TasksService.html","title":"injectable - TasksService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  TasksService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/tasks/tasks.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                findAll\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(tasksRepository: EntityRepository)\n                    \n                \n                        \n                            \n                                Defined in src/tasks/tasks.service.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        tasksRepository\n                                                  \n                                                        \n                                                                        EntityRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(createdById: number, createTaskInput: CreateTaskDto)\n                \n            \n\n\n            \n                \n                    Defined in src/tasks/tasks.service.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createdById\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    createTaskInput\n                                    \n                                                CreateTaskDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n\n            \n                \n                    Defined in src/tasks/tasks.service.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(undefined: FindOneArgs)\n                \n            \n\n\n            \n                \n                    Defined in src/tasks/tasks.service.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    \n                                                FindOneArgs\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                    \n                    remove(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/tasks/tasks.service.ts:58\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(id: number, updateTaskInput: UpdateTaskDto)\n                \n            \n\n\n            \n                \n                    Defined in src/tasks/tasks.service.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateTaskInput\n                                    \n                                                UpdateTaskDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { EntityRepository, NotFoundError } from '@mikro-orm/core'\nimport { InjectRepository } from '@mikro-orm/nestjs'\nimport { Injectable } from '@nestjs/common'\nimport { CreateTaskDto } from './dto/create-task.dto'\nimport { UpdateTaskDto } from './dto/update-task.dto'\nimport { Task } from './task.entity'\n\ninterface FindAllArgs {\n  relations?: string[]\n  authorId?: number\n}\n\ninterface FindOneArgs extends FindAllArgs {\n  id: number\n}\n\n@Injectable()\nexport class TasksService {\n  constructor(\n    @InjectRepository(Task)\n    private tasksRepository: EntityRepository,\n  ) {}\n\n  async create(createdById: number, createTaskInput: CreateTaskDto) {\n    const task = this.tasksRepository.create({\n      createdBy: {\n        id: createdById,\n      },\n      ...createTaskInput,\n    })\n    await this.tasksRepository.persistAndFlush(task)\n    return task\n  }\n\n  findAll() {\n    return this.tasksRepository.findAll({ populate: ['createdBy'] })\n  }\n\n  async findOne({ id }: FindOneArgs) {\n    try {\n      const task = this.tasksRepository.findOneOrFail(\n        { id },\n        { populate: ['createdBy'] },\n      )\n      return task\n    } catch (e) {\n      return new NotFoundError(`Not found`, Task)\n    }\n  }\n\n  async update(id: number, updateTaskInput: UpdateTaskDto) {\n    const post = await this.tasksRepository.findOne(id)\n    this.tasksRepository.assign(post, updateTaskInput)\n    await this.tasksRepository.flush()\n    return post\n  }\n\n  async remove(id: number) {\n    await this.tasksRepository.removeAndFlush({ id })\n    return true\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateChoreDto.html":{"url":"classes/UpdateChoreDto.html","title":"class - UpdateChoreDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateChoreDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/chores/dto/update-chore.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/swagger';\nimport { CreateChoreDto } from './create-chore.dto';\n\nexport class UpdateChoreDto extends PartialType(CreateChoreDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateListDto.html":{"url":"classes/UpdateListDto.html","title":"class - UpdateListDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateListDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lists/dto/update-list.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/mapped-types'\nimport { CreateListDto } from './create-list.dto'\n\nexport class UpdateListDto extends PartialType(CreateListDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateProfileDto.html":{"url":"classes/UpdateProfileDto.html","title":"class - UpdateProfileDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateProfileDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/dto/update-profile.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                    Optional\n                                firstName\n                            \n                            \n                                    Readonly\n                                    Optional\n                                lastName\n                            \n                            \n                                    Readonly\n                                    Optional\n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                            Optional\n                        firstName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/update-profile.dto.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                            Optional\n                        lastName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/update-profile.dto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                            Optional\n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/update-profile.dto.ts:5\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger'\n\nexport class UpdateProfileDto {\n  @ApiProperty()\n  readonly username?: string\n\n  @ApiProperty()\n  readonly firstName?: string\n\n  @ApiProperty()\n  readonly lastName?: string\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateRoomDto.html":{"url":"classes/UpdateRoomDto.html","title":"class - UpdateRoomDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateRoomDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/rooms/dto/update-room.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/swagger'\nimport { CreateRoomDto } from './create-room.dto'\n\nexport class UpdateRoomDto extends PartialType(CreateRoomDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateTaskDto.html":{"url":"classes/UpdateTaskDto.html","title":"class - UpdateTaskDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateTaskDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/tasks/dto/update-task.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/mapped-types'\nimport { CreateTaskDto } from './create-task.dto'\n\nexport class UpdateTaskDto extends PartialType(CreateTaskDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/User.html":{"url":"entities/User.html","title":"entity - User","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/user.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                firstName\n                            \n                            \n                                lastName\n                            \n                            \n                                lists\n                            \n                            \n                                password\n                            \n                            \n                                refreshTokens\n                            \n                            \n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        firstName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property({nullable: true})@ApiProperty({example: 'John', description: 'User's first name'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/user.entity.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        lastName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property({nullable: true})@ApiProperty({example: 'Smith', description: 'User's last name'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/user.entity.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        lists\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Collection(this)\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, list => list.createdBy, {cascade: undefined})@ApiProperty({description: 'Lists created by user.'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/user.entity.ts:48\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property({hidden: true})@ApiHideProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/user.entity.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        refreshTokens\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Collection(this)\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, refreshToken => refreshToken.user, {cascade: undefined})@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/user.entity.ts:54\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()@Unique()@ApiProperty({example: 'patrick', description: 'Username. Alphanumeric, 2-24 characters.'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/user.entity.ts:22\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import {\n  Cascade,\n  Collection,\n  Entity,\n  OneToMany,\n  Property,\n  Unique,\n} from '@mikro-orm/core'\nimport { ApiHideProperty, ApiProperty } from '@nestjs/swagger'\nimport { RefreshToken } from '../auth/entities/refresh-token.entity'\nimport { BaseEntity } from '../common/entities/base-entity.entity'\nimport { List } from '../lists/list.entity'\n\n@Entity({ tableName: 'users' })\nexport class User extends BaseEntity {\n  @Property()\n  @Unique()\n  @ApiProperty({\n    example: 'patrick',\n    description: 'Username. Alphanumeric, 2-24 characters.',\n  })\n  username: string\n\n  @Property({ hidden: true })\n  @ApiHideProperty()\n  password: string\n\n  @Property({ nullable: true })\n  @ApiProperty({\n    example: 'John',\n    description: \"User's first name\",\n  })\n  firstName: string\n\n  @Property({ nullable: true })\n  @ApiProperty({\n    example: 'Smith',\n    description: \"User's last name\",\n  })\n  lastName: string\n\n  @OneToMany(() => List, (list) => list.createdBy, {\n    cascade: [Cascade.REMOVE],\n  })\n  @ApiProperty({\n    description: 'Lists created by user.',\n  })\n  lists = new Collection(this)\n\n  @OneToMany(() => RefreshToken, (refreshToken) => refreshToken.user, {\n    cascade: [Cascade.REMOVE],\n  })\n  @ApiProperty()\n  refreshTokens = new Collection(this)\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserDto.html":{"url":"classes/UserDto.html","title":"class - UserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/dto/user.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                firstName\n                            \n                            \n                                    Readonly\n                                id\n                            \n                            \n                                    Readonly\n                                lastName\n                            \n                            \n                                    Readonly\n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(partial: Pick)\n                    \n                \n                        \n                            \n                                Defined in src/users/dto/user.dto.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        partial\n                                                  \n                                                        \n                                                                        Pick\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        firstName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/user.dto.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/user.dto.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        lastName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/user.dto.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/user.dto.ts:20\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger'\nimport { Exclude, Expose } from 'class-transformer'\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nimport { User } from '../user.entity'\n\n@Exclude()\nexport class UserDto {\n  constructor(\n    partial: Pick,\n  ) {\n    Object.assign(this, partial)\n  }\n\n  @Expose()\n  @ApiProperty()\n  readonly id: string\n\n  @Expose()\n  @ApiProperty()\n  readonly username: string\n\n  @Expose()\n  @ApiProperty()\n  readonly firstName: string\n\n  @Expose()\n  @ApiProperty()\n  readonly lastName: string\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserFactory.html":{"url":"classes/UserFactory.html","title":"class - UserFactory","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserFactory\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/database/factories/user.factory.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    Factory\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                model\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                definition\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        model\n                        \n                    \n                \n            \n                \n                    \n                        Default value : User\n                    \n                \n                    \n                        \n                                Defined in src/database/factories/user.factory.ts:6\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        definition\n                        \n                    \n                \n            \n            \n                \ndefinition(faker: Faker)\n                \n            \n\n\n            \n                \n                    Defined in src/database/factories/user.factory.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    faker\n                                    \n                                            Faker\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Partial\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Factory, Faker } from '@mikro-orm/seeder'\nimport { User } from '../../users/user.entity'\nimport * as bcrypt from 'bcrypt'\n\nexport class UserFactory extends Factory {\n  model = User\n\n  definition(faker: Faker): Partial {\n    const firstName = faker.name.firstName()\n    const lastName = faker.name.lastName()\n\n    return {\n      firstName,\n      lastName,\n      username: faker.internet.userName(firstName, lastName),\n      // password: faker.internet.password(),\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/UsersController.html":{"url":"controllers/UsersController.html","title":"controller - UsersController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  UsersController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/users.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                users\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                getProfile\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/users/users.controller.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     unknown\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(username: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':username')@ApiResponse({status: 200, description: 'The found user record', type: UserDto})\n                \n            \n\n            \n                \n                    Defined in src/users/users.controller.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    username\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getProfile\n                        \n                    \n                \n            \n            \n                \ngetProfile(user: User)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('me')@ApiOkResponse({description: 'Returns the logged in user.', type: UserDto})\n                \n            \n\n            \n                \n                    Defined in src/users/users.controller.ts:57\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(user: User, updateUserDto: UpdateProfileDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Put('profile')@ApiOkResponse({description: 'The found user record', type: UserDto})\n                \n            \n\n            \n                \n                    Defined in src/users/users.controller.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateUserDto\n                                    \n                                                UpdateProfileDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, Get, Param, Put, UseGuards } from '@nestjs/common'\nimport {\n  ApiBearerAuth,\n  ApiOkResponse,\n  ApiResponse,\n  ApiTags,\n} from '@nestjs/swagger'\nimport { CurrentUser } from 'src/auth/decorator/current-user.decorator'\nimport { JwtAuthGuard } from 'src/auth/guards/jwt-auth.guard'\nimport { UpdateProfileDto } from './dto/update-profile.dto'\nimport { UserDto } from './dto/user.dto'\nimport { User } from './user.entity'\nimport { UsersService } from './users.service'\n\n@Controller('users')\n@ApiTags('users')\n@ApiBearerAuth()\n@UseGuards(JwtAuthGuard)\nexport class UsersController {\n  constructor(private readonly usersService: UsersService) {}\n\n  @Get()\n  async findAll() {\n    const users = await this.usersService.findAll()\n    return users.map((u) => new UserDto(u))\n  }\n\n  @Get(':username')\n  @ApiResponse({\n    status: 200,\n    description: 'The found user record',\n    type: UserDto,\n  })\n  async findOne(@Param('username') username: string) {\n    const user = await this.usersService.findOne({ username })\n    return user && new UserDto(user)\n  }\n\n  @Put('profile')\n  @ApiOkResponse({\n    description: 'The found user record',\n    type: UserDto,\n  })\n  async update(\n    @CurrentUser() user: User,\n    @Body() updateUserDto: UpdateProfileDto,\n  ) {\n    const res = await this.usersService.update(user.id, updateUserDto)\n    return res && new UserDto(res)\n  }\n\n  @Get('me')\n  @ApiOkResponse({\n    description: 'Returns the logged in user.',\n    type: UserDto,\n  })\n  getProfile(@CurrentUser() user: User) {\n    return user && new UserDto(user)\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UsersModule.html":{"url":"modules/UsersModule.html","title":"module - UsersModule","body":"\n                   \n\n\n\n\n    Modules\n    UsersModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_providers\n\n\n\ncluster_UsersModule_exports\n\n\n\n\nUsersService \n\nUsersService \n\n\n\nUsersModule\n\nUsersModule\n\nUsersService  -->\n\nUsersModule->UsersService \n\n\n\n\n\nUsersService\n\nUsersService\n\nUsersModule -->\n\nUsersService->UsersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/users/users.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            UsersService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            UsersController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            UsersService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { MikroOrmModule } from '@mikro-orm/nestjs'\nimport { forwardRef, Module } from '@nestjs/common'\nimport { ListsModule } from '../lists/lists.module'\nimport { User } from './user.entity'\nimport { UsersController } from './users.controller'\nimport { UsersService } from './users.service'\n\n@Module({\n  imports: [MikroOrmModule.forFeature([User]), forwardRef(() => ListsModule)],\n  controllers: [UsersController],\n  providers: [UsersService],\n  exports: [UsersService],\n})\nexport class UsersModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UsersService.html":{"url":"injectables/UsersService.html","title":"injectable - UsersService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UsersService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/users.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                findAll\n                            \n                            \n                                findOne\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(usersRepository: EntityRepository)\n                    \n                \n                        \n                            \n                                Defined in src/users/users.service.ts:21\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        usersRepository\n                                                  \n                                                        \n                                                                        EntityRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(createUserInput: Partial)\n                \n            \n\n\n            \n                \n                    Defined in src/users/users.service.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createUserInput\n                                    \n                                                Partial\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n\n            \n                \n                    Defined in src/users/users.service.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(undefined: FindOneArgs)\n                \n            \n\n\n            \n                \n                    Defined in src/users/users.service.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    \n                                                FindOneArgs\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                    \n                    remove(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/users/users.service.ts:58\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(id: number, updateUserInput: UpdateProfileDto)\n                \n            \n\n\n            \n                \n                    Defined in src/users/users.service.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateUserInput\n                                    \n                                                UpdateProfileDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { EntityRepository, expr } from '@mikro-orm/core'\nimport { InjectRepository } from '@mikro-orm/nestjs'\nimport { Injectable } from '@nestjs/common'\nimport { UpdateProfileDto } from './dto/update-profile.dto'\nimport { User } from './user.entity'\n\n/**\n * All args for FindAll.\n */\ninterface FindAllArgs {\n  relations?: string[]\n}\n\ninterface FindOneArgs extends FindAllArgs {\n  id?: number\n  username?: string\n  postId?: number\n}\n\n@Injectable()\nexport class UsersService {\n  constructor(\n    @InjectRepository(User)\n    private usersRepository: EntityRepository,\n  ) {}\n\n  async create(createUserInput: Partial) {\n    const user = this.usersRepository.create(createUserInput)\n    await this.usersRepository.persistAndFlush(user)\n    return user\n  }\n\n  findAll() {\n    return this.usersRepository.find({})\n  }\n\n  findOne({ id, username, postId }: FindOneArgs) {\n    if (id) {\n      return this.usersRepository.findOne({ id })\n    } else if (username) {\n      return this.usersRepository.findOne({\n        [expr('lower(username)')]: username.toLowerCase(),\n      })\n    } else if (postId) {\n      return this.usersRepository.findOne({ lists: { id: postId } })\n    } else {\n      throw new Error('One of ID, username or post ID must be provided.')\n    }\n  }\n\n  async update(id: number, updateUserInput: UpdateProfileDto) {\n    const user = await this.usersRepository.findOneOrFail(id)\n    this.usersRepository.assign(user, updateUserInput)\n    await this.usersRepository.flush()\n    return user\n  }\n\n  async remove(id: number) {\n    await this.usersRepository.removeAndFlush({ id })\n    return true\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"changelog.html":{"url":"changelog.html","title":"getting-started - changelog","body":"\n                   \n\nChangelog\n0.3.0 (2022-11-29)\n⚠ BREAKING CHANGES\n\nremove NX\napi/tasks: add completed attribute\nTypeORM => MikroORM\ntrying out new starter template\nauthentication changes\nmore authentication changes\nauthentication fixes\n\nFeatures\n\nTypeORM => MikroORM (5b43abd)\napi/tasks: add completed attribute (4780c9e)\napi: basic authentication (login) functionality (6041307)\napi: start of task and todos (931da67)\nauthentication changes (3850ca4)\nauthentication changes p2 (f22950e)\ncreate task mutation (5bb4d01)\ndatabase seeder (yay) (0a4e3b5)\ndocker and keycloak (005bf2a)\nexport swagger specifications (aabaa96)\ninit (b42d995)\nmore authentication changes (7b3fad9)\ntodo base configuration (4ac7514)\ntrying out new starter template (2be75ef)\n\nDocumentation\n\nupdate swagger documentation (4b3ce51)\n\nPerformance improvements\n\napi: test out redis and websockets (97f6f20)\ninfra: migrate to k8s for database (0f2288a)\n\nRefactors\n\ntodo => task (42a292a)\n\nBug fixes\n\napi/auth: login issues (336a417)\napi: openapi formatting fix (ba9e4ea)\nauthentication fixes (8a1e98b)\ndeps: pin dependencies (ddc6f5c)\ndeps: pin dependencies (094acfa)\nopenapi: pretty print swagger-spec (84b661f)\nyarn lock files out of sync (f84ee9e)\n\nChores\n\nadd openapi/postman folders (46e05fc)\napi: move openapi document (ed62f1c)\napi: move openapi json output (6d3da2c)\nbuild: move to yarn 3 (6a95924)\ndeps: add new required deps (7da214f)\ndeps: bump dependencies (92b43eb)\ndeps: bump dependencies to latest (222a6bd)\ndeps: bump to latest (bf06bcb)\ndeps: bump to latest patches (adcec01)\ndeps: remove release-it (29b1cc1)\ndeps: update dependency @nestjs/cli to v9.1.3 (084fd38)\ndeps: update dependency eslint to v8.23.1 (7207845)\ndeps: update dependency ts-jest to v28.0.8 (adce1c9)\ndeps: update dependency tsconfig-paths to v4.1.0 (cb60ee5)\ndeps: update jest monorepo (5ca205b)\ndeps: update jest monorepo to v29 (736efc2)\ndeps: update nest monorepo to v9 (15c8bb6)\ndeps: update typescript-eslint monorepo to v5.37.0 (8a9e6cc)\ngeneral configureation (21fa4d5)\npostman updates (b0fe04a)\npostman: add test to populate access token (f451620)\npostman: new collection for testing (a268176)\nrelease 0.0.2 (a7777f9)\nrelease 0.1.0 (12f25ae)\nrelease 0.2.0 (697fdec)\ntemp file updates (7e70996)\n\nBuild\n\ndeps-dev: bump @nestjs/testing from 9.1.1 to 9.1.2 in /api (e79eb10)\ndeps-dev: bump @nestjs/testing from 9.1.6 to 9.2.0 in /api (1746310)\ndeps-dev: bump @types/jest from 29.0.2 to 29.0.3 in /api (ec3cec7)\ndeps-dev: bump @types/validator from 13.7.7 to 13.7.8 in /api (f03e59c)\ndeps-dev: bump dependencies in /api (84309a7)\ndeps: bump @nestjs/common from 9.1.1 to 9.1.2 in /api (28c50ef)\ndeps: bump @nestjs/core from 9.1.1 to 9.1.2 in /api (aac9a3e)\ndeps: bump @nestjs/core from 9.1.6 to 9.2.0 in /api (8f05193)\ndeps: bump @nestjs/platform-express from 9.1.1 to 9.1.2 in /api (e3e57a6)\ndeps: bump @types/validator to 13.7.9 (5c15f52)\ndeps: bump dependencies to latest patches (1fbfb15)\ndeps: bump dependencies to the latest patches (4c52515)\ndeps: bump joi from 17.6.0 to 17.6.1 in /api (be38bae)\ndeps: move to pnpm [skip ci] (9c159b1)\ndocker: docker development containters testing (ee0b054)\nevaluating release-it (03b1db5)\nupdate release-please config (1385863)\n\nrevert\n\nremove NX (0d09d6e)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                mikro-orm.config.ts\n            \n            variable\n            config\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                seeders/database.seeder.ts\n            \n            class\n            DatabaseSeeder\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/auth/auth.controller.ts\n            \n            controller\n            AuthController\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/auth/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/auth/decorator/current-user.decorator.ts\n            \n            variable\n            CurrentUser\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/auth/dto/login-user.body.ts\n            \n            class\n            LoginUserBody\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/dto/login-user.response.ts\n            \n            class\n            LoginUserResponse\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/auth/dto/refresh-token.body.ts\n            \n            class\n            RefreshTokenBody\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/auth/dto/refresh-token.response.ts\n            \n            class\n            RefreshTokenResponse\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/dto/register-user.body.ts\n            \n            class\n            RegisterUserBody\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/dto/register-user.response.ts\n            \n            class\n            RegisterUserResponse\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/auth/entities/refresh-token.entity.ts\n            \n            entity\n            RefreshToken\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/auth/guards/jwt-auth.guard.ts\n            \n            injectable\n            JwtAuthGuard\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/auth/guards/local-auth.guard.ts\n            \n            injectable\n            LocalAuthGuard\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/auth/strategies/jwt.strategy.ts\n            \n            injectable\n            JwtStrategy\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/strategies/local.strategy.ts\n            \n            injectable\n            LocalStrategy\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/chores/chores.controller.ts\n            \n            controller\n            ChoresController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/chores/chores.service.ts\n            \n            injectable\n            ChoresService\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/chores/dto/create-chore.dto.ts\n            \n            class\n            CreateChoreDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/chores/dto/update-chore.dto.ts\n            \n            class\n            UpdateChoreDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/chores/entities/chore.entity.ts\n            \n            class\n            Chore\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/common/adapters/redis.adapter.ts\n            \n            class\n            RedisIoAdapter\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/common/entities/base-entity.entity.ts\n            \n            entity\n            BaseEntity\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/database/factories/list.factory.ts\n            \n            class\n            ListFactory\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/database/factories/task.factory.ts\n            \n            class\n            TaskFactory\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/database/factories/user.factory.ts\n            \n            class\n            UserFactory\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/database/migrations/Migration20220926031634.ts\n            \n            class\n            Migration20220926031634\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/database/migrations/Migration20220926213133.ts\n            \n            class\n            Migration20220926213133\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/database/migrations/Migration20220926214650.ts\n            \n            class\n            Migration20220926214650\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/database/migrations/Migration20220926222224.ts\n            \n            class\n            Migration20220926222224\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/database/migrations/Migration20220926231541.ts\n            \n            class\n            Migration20220926231541\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/database/migrations/Migration20221013014335.ts\n            \n            class\n            Migration20221013014335\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/database/migrations/Migration20221023001353.ts\n            \n            class\n            Migration20221023001353\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/database/migrations/Migration20221031000536.ts\n            \n            class\n            Migration20221031000536\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/database/migrations/Migration20221129042732.ts\n            \n            class\n            Migration20221129042732\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/health/health.controller.ts\n            \n            controller\n            HealthController\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/lists/dto/create-list.dto.ts\n            \n            class\n            CreateListDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/lists/dto/update-list.dto.ts\n            \n            class\n            UpdateListDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/lists/list.entity.ts\n            \n            entity\n            List\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/lists/lists.controller.ts\n            \n            controller\n            ListsController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/lists/lists.service.ts\n            \n            injectable\n            ListsService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/lists/lists.service.ts\n            \n            interface\n            FindAllArgs\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/lists/lists.service.ts\n            \n            interface\n            FindOneArgs\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/rooms/dto/create-room.dto.ts\n            \n            class\n            CreateRoomDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/rooms/dto/update-room.dto.ts\n            \n            class\n            UpdateRoomDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/rooms/room.entity.ts\n            \n            entity\n            Room\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/rooms/rooms.controller.ts\n            \n            controller\n            RoomsController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/rooms/rooms.service.ts\n            \n            injectable\n            RoomsService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/tasks/dto/create-task.dto.ts\n            \n            class\n            CreateTaskDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/tasks/dto/update-task.dto.ts\n            \n            class\n            UpdateTaskDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/tasks/task.entity.ts\n            \n            entity\n            Task\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/tasks/tasks.controller.ts\n            \n            controller\n            TasksController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/tasks/tasks.gateway.ts\n            \n            class\n            TasksGateway\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/tasks/tasks.service.ts\n            \n            injectable\n            TasksService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/tasks/tasks.service.ts\n            \n            interface\n            FindAllArgs\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/tasks/tasks.service.ts\n            \n            interface\n            FindOneArgs\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/users/dto/update-profile.dto.ts\n            \n            class\n            UpdateProfileDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/users/dto/user.dto.ts\n            \n            class\n            UserDto\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/users/user.entity.ts\n            \n            entity\n            User\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/users/users.controller.ts\n            \n            controller\n            UsersController\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/users/users.service.ts\n            \n            injectable\n            UsersService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/users/users.service.ts\n            \n            interface\n            FindAllArgs\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                src/users/users.service.ts\n            \n            interface\n            FindOneArgs\n            \n                0 %\n                (0/4)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @mikro-orm/core : ^5.4.2\n        \n            @mikro-orm/migrations : ^5.4.2\n        \n            @mikro-orm/nestjs : ^5.1.2\n        \n            @mikro-orm/postgresql : ^5.4.2\n        \n            @mikro-orm/reflection : ^5.4.2\n        \n            @mikro-orm/seeder : ^5.4.2\n        \n            @mikro-orm/sql-highlighter : ^1.0.1\n        \n            @nestjs/axios : ^1.0.1\n        \n            @nestjs/common : ^9.2.1\n        \n            @nestjs/config : ^2.2.0\n        \n            @nestjs/core : ^9.2.1\n        \n            @nestjs/jwt : ^9.0.0\n        \n            @nestjs/passport : ^9.0.0\n        \n            @nestjs/platform-express : ^9.2.1\n        \n            @nestjs/platform-socket.io : ^9.2.1\n        \n            @nestjs/swagger : ^6.1.2\n        \n            @nestjs/terminus : ^9.1.4\n        \n            @nestjs/websockets : ^9.1.5\n        \n            @socket.io/redis-adapter : ^7.2.0\n        \n            bcrypt : ^5.0.1\n        \n            class-transformer : ^0.5.1\n        \n            class-validator : ^0.13.2\n        \n            graphql : ^16.6.0\n        \n            graphql-tools : ^8.3.6\n        \n            joi : ^17.6.1\n        \n            passport : ^0.6.0\n        \n            passport-jwt : ^4.0.0\n        \n            passport-local : ^1.0.0\n        \n            pg : ^8.8.0\n        \n            redis : ^4.3.1\n        \n            reflect-metadata : ^0.1.13\n        \n            rimraf : ^3.0.2\n        \n            rxjs : ^7.5.6\n        \n            socket.io : ^4.5.3\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\n  A progressive Node.js framework for building efficient and scalable server-side applications.\n    \n\n\n\n\n\n\n\n\n\n  \n  \n\n  \n\nDescription\nNest framework TypeScript starter repository.\nInstallation\n$ npm installRunning the app\n# development\n$ npm run start\n\n# watch mode\n$ npm run start:dev\n\n# production mode\n$ npm run start:prodTest\n# unit tests\n$ npm run test\n\n# e2e tests\n$ npm run test:e2e\n\n# test coverage\n$ npm run test:covSupport\nNest is an MIT-licensed open source project. It can grow thanks to the sponsors and support by the amazing backers. If you'd like to join them, please read more here.\nStay in touch\n\nAuthor - Kamil Myśliwiec\nWebsite - https://nestjs.com\nTwitter - @nestframework\n\nLicense\nNest is MIT licensed.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ChoresModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        HealthModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ListsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        RoomsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TasksModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UsersModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_ChoresModule\n\n\n\ncluster_ChoresModule_providers\n\n\n\ncluster_ListsModule\n\n\n\ncluster_ListsModule_exports\n\n\n\ncluster_ListsModule_providers\n\n\n\ncluster_RoomsModule\n\n\n\ncluster_RoomsModule_exports\n\n\n\ncluster_RoomsModule_providers\n\n\n\ncluster_TasksModule\n\n\n\ncluster_TasksModule_exports\n\n\n\ncluster_TasksModule_providers\n\n\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_exports\n\n\n\ncluster_UsersModule_providers\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nChoresModule\n\nChoresModule\n\nAppModule -->\n\nChoresModule->AppModule\n\n\n\n\n\nHealthModule\n\nHealthModule\n\nAppModule -->\n\nHealthModule->AppModule\n\n\n\n\n\nListsModule\n\nListsModule\n\nAppModule -->\n\nListsModule->AppModule\n\n\n\n\n\nListsService \n\nListsService \n\nListsService  -->\n\nListsModule->ListsService \n\n\n\n\n\nRoomsModule\n\nRoomsModule\n\nAppModule -->\n\nRoomsModule->AppModule\n\n\n\n\n\nRoomsService \n\nRoomsService \n\nRoomsService  -->\n\nRoomsModule->RoomsService \n\n\n\n\n\nTasksModule\n\nTasksModule\n\nAppModule -->\n\nTasksModule->AppModule\n\n\n\n\n\nTasksService \n\nTasksService \n\nTasksService  -->\n\nTasksModule->TasksService \n\n\n\n\n\nUsersModule\n\nUsersModule\n\nAuthModule -->\n\nUsersModule->AuthModule\n\n\n\nAppModule -->\n\nUsersModule->AppModule\n\n\n\n\n\nUsersService \n\nUsersService \n\nUsersService  -->\n\nUsersModule->UsersService \n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\nLocalStrategy\n\nLocalStrategy\n\nAuthModule -->\n\nLocalStrategy->AuthModule\n\n\n\n\n\nChoresService\n\nChoresService\n\nChoresModule -->\n\nChoresService->ChoresModule\n\n\n\n\n\nListsService\n\nListsService\n\nListsModule -->\n\nListsService->ListsModule\n\n\n\n\n\nRoomsService\n\nRoomsService\n\nRoomsModule -->\n\nRoomsService->RoomsModule\n\n\n\n\n\nTasksService\n\nTasksService\n\nTasksModule -->\n\nTasksService->TasksModule\n\n\n\n\n\nUsersService\n\nUsersService\n\nUsersModule -->\n\nUsersService->UsersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        8 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    7 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    6 Entities\n                \n            \n        \n        \n            \n                \n                    \n                    10 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    32 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    6 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.2.0\n        \n            Description : \n        \n            License : MIT\n        \n            Author : \n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            config   (mikro-orm.config.ts)\n                        \n                        \n                            CurrentUser   (src/.../current-user.decorator.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    mikro-orm.config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        config\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Options\n\n                    \n                \n                \n                    \n                        Default value : {\n  type: 'postgresql',\n  host: process.env.POSTGRES_HOST,\n  port: parseInt(process.env.POSTGRES_PORT),\n  user: process.env.POSTGRES_USER,\n  password: process.env.POSTGRES_PASSWORD,\n  dbName: process.env.POSTGRES_DB,\n  entities: ['dist/**/*.entity.js'],\n  entitiesTs: ['src/**/*.entity.ts'],\n  debug: true,\n  loadStrategy: LoadStrategy.JOINED,\n  highlighter: new SqlHighlighter(),\n  metadataProvider: TsMorphMetadataProvider,\n  registerRequestContext: false,\n  migrations: {\n    path: 'dist/database/migrations',\n    pathTs: 'src/database/migrations',\n  },\n}\n                    \n                \n\n\n        \n    \n\n    src/auth/decorator/current-user.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        CurrentUser\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createParamDecorator((_, ctx) => {\n  const request = ctx.switchToHttp().getRequest()\n  return request.user\n})\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
